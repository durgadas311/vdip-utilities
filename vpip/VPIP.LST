	MACRO-80 3.35	22-Mar-19	PAGE	1


                                ;C/80 Compiler 3.1 (4/11/84) - (c) 1984 The Software Toolworks
                                
                                ;/********************************************************
                                ;** vpip - VDIP-1 utility fashioned after the the HDOS
                                ;** "peripheral interchange program" (PIP).  This
                                ;** utility reads and writes files to/from a USB device
                                ;** interfaced through the VDIP-1 usb breakout board.
                                ;**
                                ;** The program works in three phases: first, it builds
                                ;** a directory (in dynamically-allocated RAM) of the contents
                                ;** of the specified source device (either the USB device or
                                ;** the specified HDOS file device); second, it goes through
                                ;** the directory data structure and tags the files that
                                ;** match the user's file specification; and finally, it
                                ;** processes the command (e.g. either copying the specified
                                ;** files or listing their directory information).
                                ;**
                                ;** The program also tests for the presence of a real time clock
                                ;** card and, if found, uses that time and date as appropriate
                                ;** in file operations.
                                ;**
                                ;** Usage: VPIP {command}
                                ;**    or
                                ;** VP89 {command} (H89 version)
                                ;**
                                ;** where command is of the form:
                                ;**
                                ;**	DEST=SOURCE1,...SOURCEn/SWITCH1.../SWITCHn
                                ;**
                                ;** if nothing is specified on the command line then the
                                ;** utility goes into a line-by-line command mode by issuing
                                ;** the :V: prompt.
                                ;**
                                ;** On an H89 the executable file must be named "VP89" in order
                                ;** for the software to allocate the appropriate port number.
                                ;**
                                ;** The pseudo-drive specification "USB:" is used to designate
                                ;** the USB-attached device.  HDOS style device specifications
                                ;** (e.g. SY0:, DK1:, etc.) denote system drives.
                                ;**
                                ;** Files may only be copied between the USB device and the
                                ;** system devices.   USB to USB, and system to system copies
                                ;** are not supported.
                                ;**
                                ;**	Glenn Roberts
                                ;**	March 2019
                                ;**
                                ;**	Revisions
                                ;**	0.9.01		Added /T switch
                                ;**				Added option for H89 compile
                                ;**	0.9.02		Added /D switch (debugging)
                                ;**				Added vclf() before any file open or close
                                ;**				Fixed bug - not initializing properly
                                ;**	0.9.03		Automatically set ports based on ABS filename
                                ;**	0.9.04		Fixed bug in listmatch()
                                ;**	0.9.10		Code cleanup & comment; separate compiled modules
	MACRO-80 3.35	22-Mar-19	PAGE	1-1


                                ;**
                                ;********************************************************/
                                ;#define	TRUE	1
                                ;#define	FALSE	0
                                ;#define	NUL		'\0'
                                ;#define	NULSTR	""
                                ;/* default devices if none specified */
                                ;#define	SYSDFLT	"SY0"
                                ;#define	USBDFLT	"USB"
                                ;/* device types set by checkdev() */
                                ;#define	NULLD	0			/* No device given */
                                ;#define	STORD	1			/* storage device */
                                ;#define	USERD	2			/* user io device */
                                ;#define	USBD	3			/* USB device */
                                ;#define	UNKD	4			/* unknown format */
                                ;#define MAXD	256			/* maximum number of directory entries */
                                ;#define DIRBUFF 512			/* buffer space for directory */
                                ;/* default max time (ms) to wait for prompt */
                                ;#define	MAXWAIT	1000
                                ;/* Clock port and register offsets */
                                ;#define CLOCK	0240		/* Clock Base Port	*/
                                ;#define	S1		0			/* Seconds register	*/
                                ;#define	S10		1			/* Tens of Seconds	*/
                                ;#define	MI1		2			/* Minutes register */
                                ;#define	MI10	3			/* Tens of Minutes	*/
                                ;#define	H1		4			/* Hours register	*/
                                ;#define	H10		5			/* Tens of Hours	*/
                                ;#define	D1		6			/* Days register	*/
                                ;#define	D10		7			/* Tens of Days		*/
                                ;#define	MO1		8			/* Months register	*/
                                ;#define	MO10	9			/* Tens of Months	*/
                                ;#define	Y1		10			/* Years register	*/
                                ;#define	Y10		11			/* Tens of Years	*/
                                ;#define	W		12			/* Day of week reg.	*/
                                ;/*********************************************
                                ;**
                                ;**	Key Data Structures
                                ;**
                                ;*********************************************/
                                ;/* union used to dissect long (4 bytes) into pieces */
                                ;union u_fil {
                                ;	long l;			/* long            */
                                ;	unsigned i[2];	/* 2 unsigned ints */
                                ;	char b[4];		/* same as 4 bytes */
                                ;};
                                ;/* destination file specification (name and
                                ;** extension are one extra character to
                                ;** accommodate terminating NUL
                                ;*/
                                ;struct fspec {
                                ;	char fname[9];
                                ;	char fext[4];
                                ;} dstspec;
  0000'                         	DSEG
  0000"   00 00 00 00           dstspec::	DB	0,0,0,0,0,0,0,0,0,0,0,0,0
  0004"   00 00 00 00           
	MACRO-80 3.35	22-Mar-19	PAGE	1-2


  0008"   00 00 00 00           
  000C"   00                    
                                ;/* HDOS file directory entry data structure */
                                ;struct hdinfo {
                                ;	char hdname[8];
                                ;	char hdext[3];
                                ;	char prj;
                                ;	char ver;
                                ;	char clf;
                                ;	char flags;
                                ;	char rsvd;
                                ;	char fgn;
                                ;	char lgn;
                                ;	char lsi;
                                ;	int credate;
                                ;	int moddate;
                                ;} hdosentry;
  000D"   00 00 00 00           hdosent::	DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  0011"   00 00 00 00           
  0015"   00 00 00 00           
  0019"   00 00 00 00           
  001D"   00 00 00              	DB	0,0,0
  0020"   0000 0000             	DW	0,0
                                ;/* Internally-used file directory data structure.
                                ;** The 'tag' field is used to flag entries that
                                ;** match the user-specified criteria.
                                ;*/
                                ;struct finfo {
                                ;	char name[9];
                                ;	char ext[4];
                                ;	int isdir;
                                ;	long size;
                                ;	unsigned mdate;
                                ;	unsigned mtime;
                                ;	char tag;
                                ;}fentry;
  0024"   00 00 00 00           fentry::	DB	0,0,0,0,0,0,0,0,0,0,0,0,0
  0028"   00 00 00 00           
  002C"   00 00 00 00           
  0030"   00                    
  0031"   0000 0000             	DW	0,0,0,0,0
  0035"   0000 0000             
  0039"   0000                  
  003B"   00                    	DB	0
                                ;/* Data structure to hold results from real-time
                                ;** clock query
                                ;*/
                                ;struct datetime {
                                ;	char day;
                                ;	char month;
                                ;	char year;
                                ;	char hours;
                                ;	char minutes;
                                ;	char seconds;
                                ;	char dow;
                                ;} mydate;
	MACRO-80 3.35	22-Mar-19	PAGE	1-3


  003C"   00 00 00 00           mydate::	DB	0,0,0,0,0,0,0
  0040"   00 00 00              
                                ;/*********************************************
                                ;**
                                ;**	Global Static Storage
                                ;**
                                ;*********************************************/
                                ;/* pointers to Active IO Area */
                                ;char *aiospg  = 0x2126;
  0043"                         	CSEG
  0000'   2126                  aiospg::	DW	8486
                                ;char **aiogrt = 0x2124;
  0002'   2124                  aiogrt::	DW	8484
                                ;/* declared in vutil library */
                                ;extern char linebuff[128];		/* I/O line buffer 		*/
                                	EXTRN	linebuf
                                ;extern char td_string[15];		/* time/date hex value */
                                	EXTRN	td_stri
                                ;/* grt (for HDOS directory manipulation) */
                                ;char *grt;				/* Group Reservation Table */
  0004'                         	DSEG
  0043"   0000                  grt::	DW	0
                                ;/* timeout parameter for VDIP protocol */
                                ;int vmaxw;
  0045"   0000                  vmaxw::	DW	0
                                ;/* flag if real time clock detected */
                                ;int havertc;
  0047"   0000                  havertc::	DW	0
                                ;char cmdline[80];
  0049"   00 00 00 00           cmdline::	DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  004D"   00 00 00 00           
  0051"   00 00 00 00           
  0055"   00 00 00 00           
  0059"   00 00 00 00           	DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  005D"   00 00 00 00           
  0061"   00 00 00 00           
  0065"   00 00 00 00           
  0069"   00 00 00 00           	DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  006D"   00 00 00 00           
  0071"   00 00 00 00           
  0075"   00 00 00 00           
  0079"   00 00 00 00           	DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  007D"   00 00 00 00           
  0081"   00 00 00 00           
  0085"   00 00 00 00           
  0089"   00 00 00 00           	DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  008D"   00 00 00 00           
  0091"   00 00 00 00           
  0095"   00 00 00 00           
                                ;char dstfname[15];
  0099"   00 00 00 00           dstfnam::	DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  009D"   00 00 00 00           
  00A1"   00 00 00 00           
  00A5"   00 00 00              
                                ;char srcfname[15];
  00A8"   00 00 00 00           srcfnam::	DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	MACRO-80 3.35	22-Mar-19	PAGE	1-4


  00AC"   00 00 00 00           
  00B0"   00 00 00 00           
  00B4"   00 00 00              
                                ;/* devices for source and destination */
                                ;char srcdev[4], dstdev[4];
  00B7"   00 00 00 00           srcdev::	DB	0,0,0,0
  00BB"   00 00 00 00           dstdev::	DB	0,0,0,0
                                ;int srctype, dsttype;
  00BF"   0000                  srctype::	DW	0
  00C1"   0000                  dsttype::	DW	0
                                ;/* array of pointers to source filespecs */
                                ;struct fspec *src[MAXD];
  00C3"                         src::	DS	512
                                ;int nsrc;
  02C3"   0000                  nsrc::	DW	0
                                ;/* array of pointers to directory entries */
                                ;struct finfo *direntry[MAXD];
  02C5"                         direntr::	DS	512
                                ;int nentries;
  04C5"   0000                  nentrie::	DW	0
                                ;/* buffer space for reading directory */
                                ;char buffer[DIRBUFF];
  04C7"                         buffer::	DS	512
                                ;/* buffer used for read/write */
                                ;#define BUFFSIZE	256
                                ;char rwbuffer[BUFFSIZE];
  06C7"                         rwbuffe::	DS	256
                                ;/* global switch settings */
                                ;int f_list;		/* to list directory, long form */
  07C7"   0000                  f_list::	DW	0
                                ;int f_brief;	/* to list directory, short form */
  07C9"   0000                  f_brief::	DW	0
                                ;int f_help;		/* print help */
  07CB"   0000                  f_help::	DW	0
                                ;int f_debug;	/* debug mode */
  07CD"   0000                  f_debug::	DW	0
                                ;/* FTDI VDIP ports and bits */
                                ;#define H8DATA	0261		/* FTDI Data Port, H8 		*/
                                ;#define H8STAT	0262		/* FTDI Status Port, H8		*/
                                ;#define H89DATA	0331		/* FTDI Data Port, H89 		*/
                                ;#define H89STAT	0332		/* FTDI Status Port, H89 	*/
                                ;/* i/o ports - must be global, used by vutil utilities */
                                ;int p_data;		/* USB data port */
  07CF"   0000                  p_data::	DW	0
                                ;int	p_stat;		/* USB status port */
  07D1"   0000                  p_stat::	DW	0
                                ;/*********************************************
                                ;**
                                ;**	Time and Date Manipulation Functions
                                ;**
                                ;*********************************************/
                                ;/* readdate - reads the date information and fills out the
                                ;** supplied date structure
                                ;*/
                                ;readdate(d)
                                
	MACRO-80 3.35	22-Mar-19	PAGE	1-5


                                	PUBLIC	readdat
                                ;struct datetime *d;
                                ;{
                                ;	/* read from registers - all are 4 bits (mask to lower 4) */
                                ;	d->seconds = (inp(CLOCK+S1)  & 0x0F) + 10 * (inp(CLOCK+S10)  & 0x0F);
  07D3"                         	CSEG
                                
  0004'   21 0002               readdat:	LXI	H,2
  0007'   39                    	DAD	SP
  0008'   CD 0000*              	CALL	h.##
  000B'   11 0005               	LXI	D,5
  000E'   19                    	DAD	D
  000F'   E5                    	PUSH	H
  0010'   21 00A0               	LXI	H,160
  0013'   E5                    	PUSH	H
  0014'   CD 0000*              	CALL	inp
  0017'   C1                    	POP	B
  0018'   26 00                 	MVI	H,0
  001A'   7D                    	MOV	A,L
  001B'   E6 0F                 	ANI	15
  001D'   6F                    	MOV	L,A
  001E'   E5                    	PUSH	H
  001F'   21 00A1               	LXI	H,161
  0022'   E5                    	PUSH	H
  0023'   CD 0000*              	CALL	inp
  0026'   C1                    	POP	B
  0027'   26 00                 	MVI	H,0
  0029'   7D                    	MOV	A,L
  002A'   E6 0F                 	ANI	15
  002C'   6F                    	MOV	L,A
  002D'   11 000A               	LXI	D,10
  0030'   CD 0000*              	CALL	c.mult##
  0033'   D1                    	POP	D
  0034'   19                    	DAD	D
  0035'   D1                    	POP	D
  0036'   7D                    	MOV	A,L
  0037'   12                    	STAX	D
                                ;	d->minutes = (inp(CLOCK+MI1) & 0x0F) + 10 * (inp(CLOCK+MI10) & 0x0F);
  0038'   21 0002               	LXI	H,2
  003B'   39                    	DAD	SP
  003C'   CD 0000*              	CALL	h.##
  003F'   11 0004               	LXI	D,4
  0042'   19                    	DAD	D
  0043'   E5                    	PUSH	H
  0044'   21 00A2               	LXI	H,162
  0047'   E5                    	PUSH	H
  0048'   CD 0000*              	CALL	inp
  004B'   C1                    	POP	B
  004C'   26 00                 	MVI	H,0
  004E'   7D                    	MOV	A,L
  004F'   E6 0F                 	ANI	15
  0051'   6F                    	MOV	L,A
  0052'   E5                    	PUSH	H
  0053'   21 00A3               	LXI	H,163
  0056'   E5                    	PUSH	H
  0057'   CD 0000*              	CALL	inp
	MACRO-80 3.35	22-Mar-19	PAGE	1-6


  005A'   C1                    	POP	B
  005B'   26 00                 	MVI	H,0
  005D'   7D                    	MOV	A,L
  005E'   E6 0F                 	ANI	15
  0060'   6F                    	MOV	L,A
  0061'   11 000A               	LXI	D,10
  0064'   CD 0000*              	CALL	c.mult##
  0067'   D1                    	POP	D
  0068'   19                    	DAD	D
  0069'   D1                    	POP	D
  006A'   7D                    	MOV	A,L
  006B'   12                    	STAX	D
                                ;	d->hours   = (inp(CLOCK+H1)  & 0x0F) + 10 * (inp(CLOCK+H10)  & 0x0F);
  006C'   21 0002               	LXI	H,2
  006F'   39                    	DAD	SP
  0070'   CD 0000*              	CALL	h.##
  0073'   23                    	INX	H
  0074'   23                    	INX	H
  0075'   23                    	INX	H
  0076'   E5                    	PUSH	H
  0077'   21 00A4               	LXI	H,164
  007A'   E5                    	PUSH	H
  007B'   CD 0000*              	CALL	inp
  007E'   C1                    	POP	B
  007F'   26 00                 	MVI	H,0
  0081'   7D                    	MOV	A,L
  0082'   E6 0F                 	ANI	15
  0084'   6F                    	MOV	L,A
  0085'   E5                    	PUSH	H
  0086'   21 00A5               	LXI	H,165
  0089'   E5                    	PUSH	H
  008A'   CD 0000*              	CALL	inp
  008D'   C1                    	POP	B
  008E'   26 00                 	MVI	H,0
  0090'   7D                    	MOV	A,L
  0091'   E6 0F                 	ANI	15
  0093'   6F                    	MOV	L,A
  0094'   11 000A               	LXI	D,10
  0097'   CD 0000*              	CALL	c.mult##
  009A'   D1                    	POP	D
  009B'   19                    	DAD	D
  009C'   D1                    	POP	D
  009D'   7D                    	MOV	A,L
  009E'   12                    	STAX	D
                                ;	d->day     = (inp(CLOCK+D1)  & 0x0F) + 10 * (inp(CLOCK+D10)  & 0x0F);
  009F'   21 0002               	LXI	H,2
  00A2'   39                    	DAD	SP
  00A3'   CD 0000*              	CALL	h.##
  00A6'   E5                    	PUSH	H
  00A7'   21 00A6               	LXI	H,166
  00AA'   E5                    	PUSH	H
  00AB'   CD 0000*              	CALL	inp
  00AE'   C1                    	POP	B
  00AF'   26 00                 	MVI	H,0
  00B1'   7D                    	MOV	A,L
  00B2'   E6 0F                 	ANI	15
	MACRO-80 3.35	22-Mar-19	PAGE	1-7


  00B4'   6F                    	MOV	L,A
  00B5'   E5                    	PUSH	H
  00B6'   21 00A7               	LXI	H,167
  00B9'   E5                    	PUSH	H
  00BA'   CD 0000*              	CALL	inp
  00BD'   C1                    	POP	B
  00BE'   26 00                 	MVI	H,0
  00C0'   7D                    	MOV	A,L
  00C1'   E6 0F                 	ANI	15
  00C3'   6F                    	MOV	L,A
  00C4'   11 000A               	LXI	D,10
  00C7'   CD 0000*              	CALL	c.mult##
  00CA'   D1                    	POP	D
  00CB'   19                    	DAD	D
  00CC'   D1                    	POP	D
  00CD'   7D                    	MOV	A,L
  00CE'   12                    	STAX	D
                                ;	d->month   = (inp(CLOCK+MO1) & 0x0F) + 10 * (inp(CLOCK+MO10) & 0x0F);
  00CF'   21 0002               	LXI	H,2
  00D2'   39                    	DAD	SP
  00D3'   CD 0000*              	CALL	h.##
  00D6'   23                    	INX	H
  00D7'   E5                    	PUSH	H
  00D8'   21 00A8               	LXI	H,168
  00DB'   E5                    	PUSH	H
  00DC'   CD 0000*              	CALL	inp
  00DF'   C1                    	POP	B
  00E0'   26 00                 	MVI	H,0
  00E2'   7D                    	MOV	A,L
  00E3'   E6 0F                 	ANI	15
  00E5'   6F                    	MOV	L,A
  00E6'   E5                    	PUSH	H
  00E7'   21 00A9               	LXI	H,169
  00EA'   E5                    	PUSH	H
  00EB'   CD 0000*              	CALL	inp
  00EE'   C1                    	POP	B
  00EF'   26 00                 	MVI	H,0
  00F1'   7D                    	MOV	A,L
  00F2'   E6 0F                 	ANI	15
  00F4'   6F                    	MOV	L,A
  00F5'   11 000A               	LXI	D,10
  00F8'   CD 0000*              	CALL	c.mult##
  00FB'   D1                    	POP	D
  00FC'   19                    	DAD	D
  00FD'   D1                    	POP	D
  00FE'   7D                    	MOV	A,L
  00FF'   12                    	STAX	D
                                ;	d->year    = (inp(CLOCK+Y1)  & 0x0F) + 10 * (inp(CLOCK+Y10)  & 0x0F);
  0100'   21 0002               	LXI	H,2
  0103'   39                    	DAD	SP
  0104'   CD 0000*              	CALL	h.##
  0107'   23                    	INX	H
  0108'   23                    	INX	H
  0109'   E5                    	PUSH	H
  010A'   21 00AA               	LXI	H,170
  010D'   E5                    	PUSH	H
	MACRO-80 3.35	22-Mar-19	PAGE	1-8


  010E'   CD 0000*              	CALL	inp
  0111'   C1                    	POP	B
  0112'   26 00                 	MVI	H,0
  0114'   7D                    	MOV	A,L
  0115'   E6 0F                 	ANI	15
  0117'   6F                    	MOV	L,A
  0118'   E5                    	PUSH	H
  0119'   21 00AB               	LXI	H,171
  011C'   E5                    	PUSH	H
  011D'   CD 0000*              	CALL	inp
  0120'   C1                    	POP	B
  0121'   26 00                 	MVI	H,0
  0123'   7D                    	MOV	A,L
  0124'   E6 0F                 	ANI	15
  0126'   6F                    	MOV	L,A
  0127'   11 000A               	LXI	D,10
  012A'   CD 0000*              	CALL	c.mult##
  012D'   D1                    	POP	D
  012E'   19                    	DAD	D
  012F'   D1                    	POP	D
  0130'   7D                    	MOV	A,L
  0131'   12                    	STAX	D
                                ;	d->dow     = (inp(CLOCK+W)   & 0x0F);
  0132'   21 0002               	LXI	H,2
  0135'   39                    	DAD	SP
  0136'   CD 0000*              	CALL	h.##
  0139'   11 0006               	LXI	D,6
  013C'   19                    	DAD	D
  013D'   E5                    	PUSH	H
  013E'   21 00AC               	LXI	H,172
  0141'   E5                    	PUSH	H
  0142'   CD 0000*              	CALL	inp
  0145'   C1                    	POP	B
  0146'   26 00                 	MVI	H,0
  0148'   7D                    	MOV	A,L
  0149'   E6 0F                 	ANI	15
  014B'   6F                    	MOV	L,A
  014C'   D1                    	POP	D
  014D'   7D                    	MOV	A,L
  014E'   12                    	STAX	D
                                ;}
  014F'   C9                    	RET
                                ;/*********************************************
                                ;**
                                ;**	Utility Functions
                                ;**
                                ;*********************************************/
                                ;/* gettd - reads time/date from real time clock and turns it
                                ;** into a string in Hex format that is compatible with VDIP/FAT
                                ;** date format, stored in the global td_string
                                ;*/
                                ;gettd(d)
                                
                                	PUBLIC	gettd
                                ;struct datetime *d;
                                ;{
	MACRO-80 3.35	22-Mar-19	PAGE	1-9


                                ;	static unsigned utime, udate;
  0150'                         	DSEG
  07D3"   0000                  .d:	DW	0
  07D5"   0000                  .e:	DW	0
                                ;	
                                ;	/* set date structure to current time & date */
                                ;	readdate(d);
  07D7"                         	CSEG
                                
  0150'   21 0002               gettd:	LXI	H,2
  0153'   39                    	DAD	SP
  0154'   CD 0000*              	CALL	h.##
  0157'   E5                    	PUSH	H
  0158'   CD 0004'              	CALL	readdat
  015B'   C1                    	POP	B
                                ;	
                                ;	/* create the appropriate hexadecimal ASCII string */
                                ;	utime = (d->seconds/2) + (d->minutes << 5) + (d->hours << 11);
  015C'   21 0002               	LXI	H,2
  015F'   39                    	DAD	SP
  0160'   CD 0000*              	CALL	h.##
  0163'   11 0005               	LXI	D,5
  0166'   19                    	DAD	D
  0167'   CD 0000*              	CALL	g.##
  016A'   EB                    	XCHG
  016B'   21 0002               	LXI	H,2
  016E'   CD 0000*              	CALL	c.div##
  0171'   E5                    	PUSH	H
  0172'   21 0004               	LXI	H,4
  0175'   39                    	DAD	SP
  0176'   CD 0000*              	CALL	h.##
  0179'   11 0004               	LXI	D,4
  017C'   19                    	DAD	D
  017D'   CD 0000*              	CALL	g.##
  0180'   29                    	DAD	H
  0181'   29                    	DAD	H
  0182'   29                    	DAD	H
  0183'   29                    	DAD	H
  0184'   29                    	DAD	H
  0185'   D1                    	POP	D
  0186'   19                    	DAD	D
  0187'   E5                    	PUSH	H
  0188'   21 0004               	LXI	H,4
  018B'   39                    	DAD	SP
  018C'   CD 0000*              	CALL	h.##
  018F'   23                    	INX	H
  0190'   23                    	INX	H
  0191'   23                    	INX	H
  0192'   CD 0000*              	CALL	g.##
  0195'   EB                    	XCHG
  0196'   21 000B               	LXI	H,11
  0199'   CD 0000*              	CALL	c.asl##
  019C'   D1                    	POP	D
  019D'   19                    	DAD	D
  019E'   22 07D3"              	SHLD	.d
                                ;	udate = d->day + (d->month << 5) + ((d->year+20)  << 9);
	MACRO-80 3.35	22-Mar-19	PAGE	1-10


  01A1'   21 0002               	LXI	H,2
  01A4'   39                    	DAD	SP
  01A5'   CD 0000*              	CALL	h.##
  01A8'   CD 0000*              	CALL	g.##
  01AB'   E5                    	PUSH	H
  01AC'   21 0004               	LXI	H,4
  01AF'   39                    	DAD	SP
  01B0'   CD 0000*              	CALL	h.##
  01B3'   23                    	INX	H
  01B4'   CD 0000*              	CALL	g.##
  01B7'   29                    	DAD	H
  01B8'   29                    	DAD	H
  01B9'   29                    	DAD	H
  01BA'   29                    	DAD	H
  01BB'   29                    	DAD	H
  01BC'   D1                    	POP	D
  01BD'   19                    	DAD	D
  01BE'   E5                    	PUSH	H
  01BF'   21 0004               	LXI	H,4
  01C2'   39                    	DAD	SP
  01C3'   CD 0000*              	CALL	h.##
  01C6'   23                    	INX	H
  01C7'   23                    	INX	H
  01C8'   CD 0000*              	CALL	g.##
  01CB'   11 0014               	LXI	D,20
  01CE'   19                    	DAD	D
  01CF'   EB                    	XCHG
  01D0'   21 0009               	LXI	H,9
  01D3'   CD 0000*              	CALL	c.asl##
  01D6'   D1                    	POP	D
  01D7'   19                    	DAD	D
  01D8'   22 07D5"              	SHLD	.e
                                ;		
                                ;	td_string[0] = ' ';
  01DB'   21 0020               	LXI	H,32
  01DE'   7D                    	MOV	A,L
  01DF'   32 0000*              	STA	td_stri
                                ;	td_string[1] = '$';
  01E2'   21 0024               	LXI	H,36
  01E5'   7D                    	MOV	A,L
  01E6'   32 0001*              	STA	td_stri+1
                                ;	td_string[2] = NUL;
  01E9'   21 0000               	LXI	H,0
  01EC'   7D                    	MOV	A,L
  01ED'   32 0002*              	STA	td_stri+2
                                ;	hexcat(td_string, udate >> 8);
  01F0'   21 0000*              	LXI	H,td_stri
  01F3'   E5                    	PUSH	H
  01F4'   2A 07D5"              	LHLD	.e
  01F7'   EB                    	XCHG
  01F8'   21 0008               	LXI	H,8
  01FB'   CD 0000*              	CALL	c.usr##
  01FE'   E5                    	PUSH	H
  01FF'   CD 0000*              	CALL	hexcat
  0202'   C1                    	POP	B
  0203'   C1                    	POP	B
	MACRO-80 3.35	22-Mar-19	PAGE	1-11


                                ;	hexcat(td_string, udate & 0xFF);
  0204'   21 0000*              	LXI	H,td_stri
  0207'   E5                    	PUSH	H
  0208'   2A 07D5"              	LHLD	.e
  020B'   26 00                 	MVI	H,0
  020D'   E5                    	PUSH	H
  020E'   CD 0000*              	CALL	hexcat
  0211'   C1                    	POP	B
  0212'   C1                    	POP	B
                                ;	hexcat(td_string, utime >> 8);
  0213'   21 0000*              	LXI	H,td_stri
  0216'   E5                    	PUSH	H
  0217'   2A 07D3"              	LHLD	.d
  021A'   EB                    	XCHG
  021B'   21 0008               	LXI	H,8
  021E'   CD 0000*              	CALL	c.usr##
  0221'   E5                    	PUSH	H
  0222'   CD 0000*              	CALL	hexcat
  0225'   C1                    	POP	B
  0226'   C1                    	POP	B
                                ;	hexcat(td_string, utime & 0xFF);
  0227'   21 0000*              	LXI	H,td_stri
  022A'   E5                    	PUSH	H
  022B'   2A 07D3"              	LHLD	.d
  022E'   26 00                 	MVI	H,0
  0230'   E5                    	PUSH	H
  0231'   CD 0000*              	CALL	hexcat
  0234'   C1                    	POP	B
  0235'   C1                    	POP	B
                                ;}
  0236'   C9                    	RET
                                ;/* swval - extract decimal value from switch
                                ;** Takes a string of the form "X=1234\0" and
                                ;** returns the decimal value 1234 as the result.
                                ;** Returns 0 if no "=" found or if no numeric data or
                                ;** if value is too big for signed int (> 32767)
                                ;*/
                                ;swval(s)
                                
                                	PUBLIC	swval
                                ;char *s;
                                ;{
                                ;	int iv, v;
  0237'                         	DSEG
  07D7"   0000                  .f:	DW	0
  07D9"   0000                  .g:	DW	0
                                ;	v = 0;
  07DB"                         	CSEG
                                
  0237'   2A 07D9"              swval:	LHLD	.g
  023A'   E5                    	PUSH	H
  023B'   2A 07D7"              	LHLD	.f
  023E'   E5                    	PUSH	H
  023F'   21 0000               	LXI	H,0
  0242'   22 07D9"              	SHLD	.g
                                ;	iv = index(s, "=");
	MACRO-80 3.35	22-Mar-19	PAGE	1-12


  0245'   21 0006               	LXI	H,6
  0248'   39                    	DAD	SP
  0249'   CD 0000*              	CALL	h.##
  024C'   E5                    	PUSH	H
  024D'   21 02C4'              	LXI	H,.c
  0250'   E5                    	PUSH	H
  0251'   CD 0000*              	CALL	index
  0254'   C1                    	POP	B
  0255'   C1                    	POP	B
  0256'   22 07D7"              	SHLD	.f
                                ;	if (iv != -1) {
  0259'   2A 07D7"              	LHLD	.f
  025C'   23                    	INX	H
  025D'   7C                    	MOV	A,H
  025E'   B5                    	ORA	L
  025F'   CA 02A4'              	JZ	.h
                                ;		while (isdigit(s[++iv]))
  0262'   2A 07D7"              .i:	LHLD	.f
  0265'   23                    	INX	H
  0266'   22 07D7"              	SHLD	.f
  0269'   EB                    	XCHG
  026A'   21 0006               	LXI	H,6
  026D'   39                    	DAD	SP
  026E'   CD 0000*              	CALL	h.##
  0271'   19                    	DAD	D
  0272'   CD 0000*              	CALL	g.##
  0275'   E5                    	PUSH	H
  0276'   CD 0000*              	CALL	isdigit
  0279'   C1                    	POP	B
  027A'   7C                    	MOV	A,H
  027B'   B5                    	ORA	L
  027C'   CA 02A4'              	JZ	.j
                                ;			v = v * 10 + (s[iv] - '0');
  027F'   2A 07D9"              	LHLD	.g
  0282'   11 000A               	LXI	D,10
  0285'   CD 0000*              	CALL	c.mult##
  0288'   E5                    	PUSH	H
  0289'   21 0008               	LXI	H,8
  028C'   39                    	DAD	SP
  028D'   CD 0000*              	CALL	h.##
  0290'   EB                    	XCHG
  0291'   2A 07D7"              	LHLD	.f
  0294'   19                    	DAD	D
  0295'   CD 0000*              	CALL	g.##
  0298'   11 FFD0               	LXI	D,-48
  029B'   19                    	DAD	D
  029C'   D1                    	POP	D
  029D'   19                    	DAD	D
  029E'   22 07D9"              	SHLD	.g
  02A1'   C3 0262'              	JMP	.i
  02A4'                         .j:	DS	0
                                ;	}
                                ;	if (v < 0)
  02A4'   2A 07D9"              .h:	LHLD	.g
  02A7'   11 8000               	LXI	D,32768
  02AA'   CD 0000*              	CALL	c.tst##
	MACRO-80 3.35	22-Mar-19	PAGE	1-13


  02AD'   DA 02B6'              	JC	.k
                                ;		v = 0;
  02B0'   21 0000               	LXI	H,0
  02B3'   22 07D9"              	SHLD	.g
                                ;	return v;
  02B6'   2A 07D9"              .k:	LHLD	.g
  02B9'   EB                    .l:	XCHG
  02BA'   E1                    	POP	H
  02BB'   22 07D7"              	SHLD	.f
  02BE'   E1                    	POP	H
  02BF'   22 07D9"              	SHLD	.g
  02C2'   EB                    	XCHG
  02C3'   C9                    	RET
                                ;}
  02C4'                         .c:
  02C4'   3D                    	DB	'='
  02C5'   00                    	DB	0
                                ;/* scansw - scan and process switches */
                                ;scansw(s)
                                
                                	PUBLIC	scansw
                                ;char *s;
                                ;{
                                ;	int l;
  02C6'                         	DSEG
  07DB"   0000                  .n:	DW	0
                                ;	char *c;
  07DD"   0000                  .o:	DW	0
                                ;	char *swch;
  07DF"   0000                  .p:	DW	0
                                ;	
                                ;	f_list = FALSE;
  07E1"                         	CSEG
                                
  02C6'   2A 07DF"              scansw:	LHLD	.p
  02C9'   E5                    	PUSH	H
  02CA'   2A 07DD"              	LHLD	.o
  02CD'   E5                    	PUSH	H
  02CE'   2A 07DB"              	LHLD	.n
  02D1'   E5                    	PUSH	H
  02D2'   21 0000               	LXI	H,0
  02D5'   22 07C7"              	SHLD	f_list
                                ;	f_brief = FALSE;
  02D8'   21 0000               	LXI	H,0
  02DB'   22 07C9"              	SHLD	f_brief
                                ;	f_help = FALSE;
  02DE'   21 0000               	LXI	H,0
  02E1'   22 07CB"              	SHLD	f_help
                                ;	
                                ;	l = strlen(s);
  02E4'   21 0008               	LXI	H,8
  02E7'   39                    	DAD	SP
  02E8'   CD 0000*              	CALL	h.##
  02EB'   E5                    	PUSH	H
  02EC'   CD 0000*              	CALL	strlen
  02EF'   C1                    	POP	B
	MACRO-80 3.35	22-Mar-19	PAGE	1-14


  02F0'   22 07DB"              	SHLD	.n
                                ;	if (l>0)
  02F3'   2A 07DB"              	LHLD	.n
  02F6'   11 7FFF               	LXI	D,32767
  02F9'   CD 0000*              	CALL	c.tst##
  02FC'   D2 03C6'              	JNC	.q
                                ;		/* scan backward from last character */
                                ;		for (c=s+l-1; c>=s; c--)
  02FF'   21 0008               	LXI	H,8
  0302'   39                    	DAD	SP
  0303'   CD 0000*              	CALL	h.##
  0306'   EB                    	XCHG
  0307'   2A 07DB"              	LHLD	.n
  030A'   19                    	DAD	D
  030B'   2B                    	DCX	H
  030C'   22 07DD"              	SHLD	.o
  030F'   21 0008               .t:	LXI	H,8
  0312'   39                    	DAD	SP
  0313'   CD 0000*              	CALL	h.##
  0316'   EB                    	XCHG
  0317'   2A 07DD"              	LHLD	.o
  031A'   CD 0000*              	CALL	c.ule##
  031D'   CA 03C6'              	JZ	.s
  0320'   C3 032E'              	JMP	.u
  0323'   2A 07DD"              .r:	LHLD	.o
  0326'   2B                    	DCX	H
  0327'   22 07DD"              	SHLD	.o
  032A'   23                    	INX	H
  032B'   C3 030F'              	JMP	.t
  032E'                         .u:	DS	0
                                ;			if (*c == '/') {
  032E'   2A 07DD"              	LHLD	.o
  0331'   CD 0000*              	CALL	g.##
  0334'   11 FFD1               	LXI	D,-47
  0337'   19                    	DAD	D
  0338'   7C                    	MOV	A,H
  0339'   B5                    	ORA	L
  033A'   C2 03C3'              	JNZ	.v
                                ;				*c = NUL;
  033D'   2A 07DD"              	LHLD	.o
  0340'   36 00                 	MVI	M,0
                                ;				swch = c+1;
  0342'   2A 07DD"              	LHLD	.o
  0345'   23                    	INX	H
  0346'   22 07DF"              	SHLD	.p
                                ;				switch (*swch) {
  0349'   2A 07DF"              	LHLD	.p
  034C'   CD 0000*              	CALL	g.##
  034F'   C3 03A7'              	JMP	.x
                                ;				/* B = brief listing */
                                ;				case 'B':
  0352'                         .y:	DS	0
                                ;					f_brief = TRUE;
  0352'   21 0001               	LXI	H,1
  0355'   22 07C9"              	SHLD	f_brief
                                ;					break;
	MACRO-80 3.35	22-Mar-19	PAGE	1-15


  0358'   C3 03C3'              	JMP	.w
                                ;				/* D = debug mode */
                                ;				case 'D':
  035B'                         .z:	DS	0
                                ;					f_debug = TRUE;
  035B'   21 0001               	LXI	H,1
  035E'   22 07CD"              	SHLD	f_debug
                                ;					printf("DEBUG mode!\n");
  0361'   21 03D3'              	LXI	H,.m
  0364'   E5                    	PUSH	H
  0365'   CD 0000*              	CALL	printf
  0368'   C1                    	POP	B
                                ;					break;
  0369'   C3 03C3'              	JMP	.w
                                ;				/* H = help */
                                ;				case 'H':
  036C'                         .ab:	DS	0
                                ;					f_help = TRUE;
  036C'   21 0001               	LXI	H,1
  036F'   22 07CB"              	SHLD	f_help
                                ;					break;
  0372'   C3 03C3'              	JMP	.w
                                ;				/* L = long form listing */
                                ;				case 'L':
  0375'                         .bb:	DS	0
                                ;					f_list = TRUE;
  0375'   21 0001               	LXI	H,1
  0378'   22 07C7"              	SHLD	f_list
                                ;					break;
  037B'   C3 03C3'              	JMP	.w
                                ;				/* T = set VDIP timeout parameter */
                                ;				case 'T':
  037E'                         .cb:	DS	0
                                ;					vmaxw = swval(swch);
  037E'   2A 07DF"              	LHLD	.p
  0381'   E5                    	PUSH	H
  0382'   CD 0237'              	CALL	swval
  0385'   C1                    	POP	B
  0386'   22 0045"              	SHLD	vmaxw
                                ;					printf("Timeout=%d ms.\n", vmaxw);
  0389'   21 03E0'              	LXI	H,.m+13
  038C'   E5                    	PUSH	H
  038D'   2A 0045"              	LHLD	vmaxw
  0390'   E5                    	PUSH	H
  0391'   CD 0000*              	CALL	printf
  0394'   C1                    	POP	B
  0395'   C1                    	POP	B
                                ;					break;
  0396'   C3 03C3'              	JMP	.w
                                ;				default:
  0399'                         .db:	DS	0
                                ;					printf("Unrecognized option!\n");
  0399'   21 03F0'              	LXI	H,.m+29
  039C'   E5                    	PUSH	H
  039D'   CD 0000*              	CALL	printf
  03A0'   C1                    	POP	B
	MACRO-80 3.35	22-Mar-19	PAGE	1-16


                                ;					break;
  03A1'   C3 03C3'              	JMP	.w
                                ;				}
  03A4'   C3 03C3'              	JMP	.w
  03A7'   CD 0000*              .x:	CALL	.switch##
  03AA'   0352' 0042            	DW	.y,66
  03AE'   035B' 0044            	DW	.z,68
  03B2'   036C' 0048            	DW	.ab,72
  03B6'   0375' 004C            	DW	.bb,76
  03BA'   037E' 0054            	DW	.cb,84
  03BE'   0000                  	DW	0
  03C0'   C3 0399'              	JMP	.db
  03C3'                         .w:	DS	0
                                ;			}
                                ;}
  03C3'   C3 0323'              .v:	JMP	.r
  03C6'                         .s:	DS	0
  03C6'                         .q:	DS	0
  03C6'   E1                    .eb:	POP	H
  03C7'   22 07DB"              	SHLD	.n
  03CA'   E1                    	POP	H
  03CB'   22 07DD"              	SHLD	.o
  03CE'   E1                    	POP	H
  03CF'   22 07DF"              	SHLD	.p
  03D2'   C9                    	RET
  03D3'                         .m:
  03D3'   44 45 42 55           	DB	'DEBUG mode!'
  03D7'   47 20 6D 6F           
  03DB'   64 65 21              
  03DE'   0A                    	DB	10
  03DF'   00                    	DB	0
  03E0'   54 69 6D 65           	DB	'Timeout=%d ms.'
  03E4'   6F 75 74 3D           
  03E8'   25 64 20 6D           
  03EC'   73 2E                 
  03EE'   0A                    	DB	10
  03EF'   00                    	DB	0
  03F0'   55 6E 72 65           	DB	'Unrecognized option!'
  03F4'   63 6F 67 6E           
  03F8'   69 7A 65 64           
  03FC'   20 6F 70 74           
  0400'   69 6F 6E 21           
  0404'   0A                    	DB	10
  0405'   00                    	DB	0
                                ;/* freeall - free dynamically allocated space */
                                ;freeall()
                                ;{
                                
                                	PUBLIC	freeall
                                ;	int i;
  0406'                         	DSEG
  07E1"   0000                  .gb:	DW	0
                                ;	
                                ;	/* free filespec list */
                                ;	for (i=0; i<nsrc; i++)
  07E3"                         	CSEG
	MACRO-80 3.35	22-Mar-19	PAGE	1-17


                                
  0406'   2A 07E1"              freeall:	LHLD	.gb
  0409'   E5                    	PUSH	H
  040A'   21 0000               	LXI	H,0
  040D'   22 07E1"              	SHLD	.gb
  0410'   2A 02C3"              .jb:	LHLD	nsrc
  0413'   EB                    	XCHG
  0414'   2A 07E1"              	LHLD	.gb
  0417'   CD 0000*              	CALL	c.gt##
  041A'   CA 043E'              	JZ	.ib
  041D'   C3 042B'              	JMP	.kb
  0420'   2A 07E1"              .hb:	LHLD	.gb
  0423'   23                    	INX	H
  0424'   22 07E1"              	SHLD	.gb
  0427'   2B                    	DCX	H
  0428'   C3 0410'              	JMP	.jb
  042B'                         .kb:	DS	0
                                ;		free(src[i]);
  042B'   2A 07E1"              	LHLD	.gb
  042E'   29                    	DAD	H
  042F'   11 00C3"              	LXI	D,src
  0432'   19                    	DAD	D
  0433'   CD 0000*              	CALL	h.##
  0436'   E5                    	PUSH	H
  0437'   CD 0000*              	CALL	free
  043A'   C1                    	POP	B
  043B'   C3 0420'              	JMP	.hb
  043E'                         .ib:	DS	0
                                ;	
                                ;	/* free HDOS directory entries */
                                ;	for (i=0; i<nentries; i++)
  043E'   21 0000               	LXI	H,0
  0441'   22 07E1"              	SHLD	.gb
  0444'   2A 04C5"              .nb:	LHLD	nentrie
  0447'   EB                    	XCHG
  0448'   2A 07E1"              	LHLD	.gb
  044B'   CD 0000*              	CALL	c.gt##
  044E'   CA 0472'              	JZ	.mb
  0451'   C3 045F'              	JMP	.ob
  0454'   2A 07E1"              .lb:	LHLD	.gb
  0457'   23                    	INX	H
  0458'   22 07E1"              	SHLD	.gb
  045B'   2B                    	DCX	H
  045C'   C3 0444'              	JMP	.nb
  045F'                         .ob:	DS	0
                                ;		free(direntry[i]);
  045F'   2A 07E1"              	LHLD	.gb
  0462'   29                    	DAD	H
  0463'   11 02C5"              	LXI	D,direntr
  0466'   19                    	DAD	D
  0467'   CD 0000*              	CALL	h.##
  046A'   E5                    	PUSH	H
  046B'   CD 0000*              	CALL	free
  046E'   C1                    	POP	B
  046F'   C3 0454'              	JMP	.lb
  0472'                         .mb:	DS	0
	MACRO-80 3.35	22-Mar-19	PAGE	1-18


                                ;}
  0472'   E1                    .pb:	POP	H
  0473'   22 07E1"              	SHLD	.gb
  0476'   C9                    	RET
                                ;/* wcexpand - expand wild cards in string.  if '*' is first
                                ;** then terminate the string after it, otherwise expand
                                ;** '*' to one or more '?' characters.  no error checking
                                ;** is performed.
                                ;*/
                                ;wcexpand(s, l)
                                
                                	PUBLIC	wcexpan
                                ;char *s;
                                ;int l;
                                ;{
                                ;	int i, havestar;
  0477'                         	DSEG
  07E3"   0000                  .qb:	DW	0
  07E5"   0000                  .rb:	DW	0
                                ;	
                                ;	havestar = FALSE;
  07E7"                         	CSEG
                                
  0477'   2A 07E5"              wcexpan:	LHLD	.rb
  047A'   E5                    	PUSH	H
  047B'   2A 07E3"              	LHLD	.qb
  047E'   E5                    	PUSH	H
  047F'   21 0000               	LXI	H,0
  0482'   22 07E5"              	SHLD	.rb
                                ;	for (i=0; i<l; i++, s++) {
  0485'   21 0000               	LXI	H,0
  0488'   22 07E3"              	SHLD	.qb
  048B'   21 0006               .ub:	LXI	H,6
  048E'   39                    	DAD	SP
  048F'   CD 0000*              	CALL	h.##
  0492'   EB                    	XCHG
  0493'   2A 07E3"              	LHLD	.qb
  0496'   CD 0000*              	CALL	c.gt##
  0499'   CA 04FB'              	JZ	.tb
  049C'   C3 04B7'              	JMP	.vb
  049F'   2A 07E3"              .sb:	LHLD	.qb
  04A2'   23                    	INX	H
  04A3'   22 07E3"              	SHLD	.qb
  04A6'   2B                    	DCX	H
  04A7'   21 0008               	LXI	H,8
  04AA'   39                    	DAD	SP
  04AB'   E5                    	PUSH	H
  04AC'   CD 0000*              	CALL	h.##
  04AF'   23                    	INX	H
  04B0'   CD 0000*              	CALL	q.##
  04B3'   2B                    	DCX	H
  04B4'   C3 048B'              	JMP	.ub
  04B7'                         .vb:	DS	0
                                ;		if (*s == '*') {
  04B7'   21 0008               	LXI	H,8
  04BA'   39                    	DAD	SP
	MACRO-80 3.35	22-Mar-19	PAGE	1-19


  04BB'   CD 0000*              	CALL	h.##
  04BE'   CD 0000*              	CALL	g.##
  04C1'   11 FFD6               	LXI	D,-42
  04C4'   19                    	DAD	D
  04C5'   7C                    	MOV	A,H
  04C6'   B5                    	ORA	L
  04C7'   C2 04E7'              	JNZ	.wb
                                ;			/* if first is '*' we're done */
                                ;			if (i == 0) {
  04CA'   2A 07E3"              	LHLD	.qb
  04CD'   7C                    	MOV	A,H
  04CE'   B5                    	ORA	L
  04CF'   C2 04E1'              	JNZ	.xb
                                ;				++s;
  04D2'   21 0008               	LXI	H,8
  04D5'   39                    	DAD	SP
  04D6'   E5                    	PUSH	H
  04D7'   CD 0000*              	CALL	h.##
  04DA'   23                    	INX	H
  04DB'   CD 0000*              	CALL	q.##
                                ;				break;
  04DE'   C3 04FB'              	JMP	.tb
                                ;			}
                                ;			havestar = TRUE;
  04E1'   21 0001               .xb:	LXI	H,1
  04E4'   22 07E5"              	SHLD	.rb
                                ;		}
                                ;		/* expand '*' into '?'s */
                                ;		if (havestar)
  04E7'   2A 07E5"              .wb:	LHLD	.rb
  04EA'   7C                    	MOV	A,H
  04EB'   B5                    	ORA	L
  04EC'   CA 04F8'              	JZ	.yb
                                ;			*s = '?';
  04EF'   21 0008               	LXI	H,8
  04F2'   39                    	DAD	SP
  04F3'   CD 0000*              	CALL	h.##
  04F6'   36 3F                 	MVI	M,63
                                ;	}
  04F8'   C3 049F'              .yb:	JMP	.sb
  04FB'                         .tb:	DS	0
                                ;	/* now terminate the string */
                                ;	*s = NUL;
  04FB'   21 0008               	LXI	H,8
  04FE'   39                    	DAD	SP
  04FF'   CD 0000*              	CALL	h.##
  0502'   36 00                 	MVI	M,0
                                ;}
  0504'   E1                    .zb:	POP	H
  0505'   22 07E3"              	SHLD	.qb
  0508'   E1                    	POP	H
  0509'   22 07E5"              	SHLD	.rb
  050C'   C9                    	RET
                                ;/* dstexpand - this routine takes a directory entry (file name
                                ;** and extension) and then uses the destination filespec to
                                ;** create a destination file name, which is returned as a
	MACRO-80 3.35	22-Mar-19	PAGE	1-20


                                ;** string.
                                ;*/
                                ;dstexpand(entry, dspec, dname)
                                
                                	PUBLIC	dstexpa
                                ;struct finfo *entry;
                                ;struct fspec *dspec;
                                ;char *dname;
                                ;{
                                ;	int i, wild;
  050D'                         	DSEG
  07E7"   0000                  .ac:	DW	0
  07E9"   0000                  .bc:	DW	0
                                ;	char *d;
  07EB"   0000                  .cc:	DW	0
                                ;	char c, s;
                                ;	
                                ;	d = dname;
  07ED"                         	CSEG
                                
  050D'   C5                    dstexpa:	PUSH	B
  050E'   2A 07EB"              	LHLD	.cc
  0511'   E5                    	PUSH	H
  0512'   2A 07E9"              	LHLD	.bc
  0515'   E5                    	PUSH	H
  0516'   2A 07E7"              	LHLD	.ac
  0519'   E5                    	PUSH	H
  051A'   21 000A               	LXI	H,10
  051D'   39                    	DAD	SP
  051E'   CD 0000*              	CALL	h.##
  0521'   22 07EB"              	SHLD	.cc
                                ;	/* do 8 character file name */
                                ;	wild = (dspec->fname[0] == '*');
  0524'   21 000C               	LXI	H,12
  0527'   39                    	DAD	SP
  0528'   CD 0000*              	CALL	h.##
  052B'   CD 0000*              	CALL	g.##
  052E'   11 FFD6               	LXI	D,-42
  0531'   19                    	DAD	D
  0532'   CD 0000*              	CALL	c.not##
  0535'   22 07E9"              	SHLD	.bc
                                ;	for (i=0; i<8; i++) {
  0538'   21 0000               	LXI	H,0
  053B'   22 07E7"              	SHLD	.ac
  053E'   2A 07E7"              .fc:	LHLD	.ac
  0541'   11 7FF8               	LXI	D,32760
  0544'   CD 0000*              	CALL	c.tst##
  0547'   DA 0614'              	JC	.ec
  054A'   C3 0558'              	JMP	.gc
  054D'   2A 07E7"              .dc:	LHLD	.ac
  0550'   23                    	INX	H
  0551'   22 07E7"              	SHLD	.ac
  0554'   2B                    	DCX	H
  0555'   C3 053E'              	JMP	.fc
  0558'                         .gc:	DS	0
                                ;		s = dspec->fname[i];
	MACRO-80 3.35	22-Mar-19	PAGE	1-21


  0558'   21 0006               	LXI	H,6
  055B'   39                    	DAD	SP
  055C'   E5                    	PUSH	H
  055D'   21 000E               	LXI	H,14
  0560'   39                    	DAD	SP
  0561'   CD 0000*              	CALL	h.##
  0564'   EB                    	XCHG
  0565'   2A 07E7"              	LHLD	.ac
  0568'   19                    	DAD	D
  0569'   CD 0000*              	CALL	g.##
  056C'   D1                    	POP	D
  056D'   7D                    	MOV	A,L
  056E'   12                    	STAX	D
                                ;		if (wild || (s == '?')) {
  056F'   2A 07E9"              	LHLD	.bc
  0572'   7C                    	MOV	A,H
  0573'   B5                    	ORA	L
  0574'   C2 0585'              	JNZ	.ic
  0577'   21 0006               	LXI	H,6
  057A'   39                    	DAD	SP
  057B'   CD 0000*              	CALL	g.##
  057E'   11 FFC1               	LXI	D,-63
  0581'   19                    	DAD	D
  0582'   CD 0000*              	CALL	c.not##
  0585'   CD 0000*              .ic:	CALL	e.0##
  0588'   CA 05DB'              	JZ	.hc
                                ;			c = entry->name[i];
  058B'   21 0007               	LXI	H,7
  058E'   39                    	DAD	SP
  058F'   E5                    	PUSH	H
  0590'   21 0010               	LXI	H,16
  0593'   39                    	DAD	SP
  0594'   CD 0000*              	CALL	h.##
  0597'   EB                    	XCHG
  0598'   2A 07E7"              	LHLD	.ac
  059B'   19                    	DAD	D
  059C'   CD 0000*              	CALL	g.##
  059F'   D1                    	POP	D
  05A0'   7D                    	MOV	A,L
  05A1'   12                    	STAX	D
                                ;			if (isalpha(c) || isdigit(c))
  05A2'   21 0007               	LXI	H,7
  05A5'   39                    	DAD	SP
  05A6'   CD 0000*              	CALL	g.##
  05A9'   E5                    	PUSH	H
  05AA'   CD 0000*              	CALL	isalpha
  05AD'   C1                    	POP	B
  05AE'   7C                    	MOV	A,H
  05AF'   B5                    	ORA	L
  05B0'   C2 05BF'              	JNZ	.kc
  05B3'   21 0007               	LXI	H,7
  05B6'   39                    	DAD	SP
  05B7'   CD 0000*              	CALL	g.##
  05BA'   E5                    	PUSH	H
  05BB'   CD 0000*              	CALL	isdigit
  05BE'   C1                    	POP	B
	MACRO-80 3.35	22-Mar-19	PAGE	1-22


  05BF'   CD 0000*              .kc:	CALL	e.0##
  05C2'   CA 05D8'              	JZ	.jc
                                ;				*d++ = c;
  05C5'   2A 07EB"              	LHLD	.cc
  05C8'   23                    	INX	H
  05C9'   22 07EB"              	SHLD	.cc
  05CC'   2B                    	DCX	H
  05CD'   E5                    	PUSH	H
  05CE'   21 0009               	LXI	H,9
  05D1'   39                    	DAD	SP
  05D2'   CD 0000*              	CALL	g.##
  05D5'   D1                    	POP	D
  05D6'   7D                    	MOV	A,L
  05D7'   12                    	STAX	D
                                ;		}
  05D8'                         .jc:	DS	0
                                ;		else if (isalpha(s) || isdigit(s))
  05D8'   C3 0611'              	JMP	.lc
  05DB'   21 0006               .hc:	LXI	H,6
  05DE'   39                    	DAD	SP
  05DF'   CD 0000*              	CALL	g.##
  05E2'   E5                    	PUSH	H
  05E3'   CD 0000*              	CALL	isalpha
  05E6'   C1                    	POP	B
  05E7'   7C                    	MOV	A,H
  05E8'   B5                    	ORA	L
  05E9'   C2 05F8'              	JNZ	.nc
  05EC'   21 0006               	LXI	H,6
  05EF'   39                    	DAD	SP
  05F0'   CD 0000*              	CALL	g.##
  05F3'   E5                    	PUSH	H
  05F4'   CD 0000*              	CALL	isdigit
  05F7'   C1                    	POP	B
  05F8'   CD 0000*              .nc:	CALL	e.0##
  05FB'   CA 0611'              	JZ	.mc
                                ;			*d++ = s;
  05FE'   2A 07EB"              	LHLD	.cc
  0601'   23                    	INX	H
  0602'   22 07EB"              	SHLD	.cc
  0605'   2B                    	DCX	H
  0606'   E5                    	PUSH	H
  0607'   21 0008               	LXI	H,8
  060A'   39                    	DAD	SP
  060B'   CD 0000*              	CALL	g.##
  060E'   D1                    	POP	D
  060F'   7D                    	MOV	A,L
  0610'   12                    	STAX	D
                                ;	}
  0611'                         .mc:	DS	0
  0611'   C3 054D'              .lc:	JMP	.dc
  0614'                         .ec:	DS	0
                                ;	/* do 3 character file extension */
                                ;	wild = (dspec->fext[0] == '*');
  0614'   21 000C               	LXI	H,12
  0617'   39                    	DAD	SP
  0618'   CD 0000*              	CALL	h.##
	MACRO-80 3.35	22-Mar-19	PAGE	1-23


  061B'   11 0009               	LXI	D,9
  061E'   19                    	DAD	D
  061F'   CD 0000*              	CALL	g.##
  0622'   11 FFD6               	LXI	D,-42
  0625'   19                    	DAD	D
  0626'   CD 0000*              	CALL	c.not##
  0629'   22 07E9"              	SHLD	.bc
                                ;	for (i=0; i<3; i++) {
  062C'   21 0000               	LXI	H,0
  062F'   22 07E7"              	SHLD	.ac
  0632'   2A 07E7"              .qc:	LHLD	.ac
  0635'   11 7FFD               	LXI	D,32765
  0638'   CD 0000*              	CALL	c.tst##
  063B'   DA 0734'              	JC	.pc
  063E'   C3 064C'              	JMP	.rc
  0641'   2A 07E7"              .oc:	LHLD	.ac
  0644'   23                    	INX	H
  0645'   22 07E7"              	SHLD	.ac
  0648'   2B                    	DCX	H
  0649'   C3 0632'              	JMP	.qc
  064C'                         .rc:	DS	0
                                ;		s = dspec->fext[i];
  064C'   21 0006               	LXI	H,6
  064F'   39                    	DAD	SP
  0650'   E5                    	PUSH	H
  0651'   21 000E               	LXI	H,14
  0654'   39                    	DAD	SP
  0655'   CD 0000*              	CALL	h.##
  0658'   11 0009               	LXI	D,9
  065B'   19                    	DAD	D
  065C'   EB                    	XCHG
  065D'   2A 07E7"              	LHLD	.ac
  0660'   19                    	DAD	D
  0661'   CD 0000*              	CALL	g.##
  0664'   D1                    	POP	D
  0665'   7D                    	MOV	A,L
  0666'   12                    	STAX	D
                                ;		if (wild || (s == '?')) {
  0667'   2A 07E9"              	LHLD	.bc
  066A'   7C                    	MOV	A,H
  066B'   B5                    	ORA	L
  066C'   C2 067D'              	JNZ	.tc
  066F'   21 0006               	LXI	H,6
  0672'   39                    	DAD	SP
  0673'   CD 0000*              	CALL	g.##
  0676'   11 FFC1               	LXI	D,-63
  0679'   19                    	DAD	D
  067A'   CD 0000*              	CALL	c.not##
  067D'   CD 0000*              .tc:	CALL	e.0##
  0680'   CA 06E9'              	JZ	.sc
                                ;			c = entry->ext[i];
  0683'   21 0007               	LXI	H,7
  0686'   39                    	DAD	SP
  0687'   E5                    	PUSH	H
  0688'   21 0010               	LXI	H,16
  068B'   39                    	DAD	SP
	MACRO-80 3.35	22-Mar-19	PAGE	1-24


  068C'   CD 0000*              	CALL	h.##
  068F'   11 0009               	LXI	D,9
  0692'   19                    	DAD	D
  0693'   EB                    	XCHG
  0694'   2A 07E7"              	LHLD	.ac
  0697'   19                    	DAD	D
  0698'   CD 0000*              	CALL	g.##
  069B'   D1                    	POP	D
  069C'   7D                    	MOV	A,L
  069D'   12                    	STAX	D
                                ;			if (isalpha(c) || isdigit(c)) {
  069E'   21 0007               	LXI	H,7
  06A1'   39                    	DAD	SP
  06A2'   CD 0000*              	CALL	g.##
  06A5'   E5                    	PUSH	H
  06A6'   CD 0000*              	CALL	isalpha
  06A9'   C1                    	POP	B
  06AA'   7C                    	MOV	A,H
  06AB'   B5                    	ORA	L
  06AC'   C2 06BB'              	JNZ	.vc
  06AF'   21 0007               	LXI	H,7
  06B2'   39                    	DAD	SP
  06B3'   CD 0000*              	CALL	g.##
  06B6'   E5                    	PUSH	H
  06B7'   CD 0000*              	CALL	isdigit
  06BA'   C1                    	POP	B
  06BB'   CD 0000*              .vc:	CALL	e.0##
  06BE'   CA 06E6'              	JZ	.uc
                                ;				if (i == 0)
  06C1'   2A 07E7"              	LHLD	.ac
  06C4'   7C                    	MOV	A,H
  06C5'   B5                    	ORA	L
  06C6'   C2 06D3'              	JNZ	.wc
                                ;					*d++ = '.';
  06C9'   2A 07EB"              	LHLD	.cc
  06CC'   23                    	INX	H
  06CD'   22 07EB"              	SHLD	.cc
  06D0'   2B                    	DCX	H
  06D1'   36 2E                 	MVI	M,46
                                ;				*d++ = c;
  06D3'   2A 07EB"              .wc:	LHLD	.cc
  06D6'   23                    	INX	H
  06D7'   22 07EB"              	SHLD	.cc
  06DA'   2B                    	DCX	H
  06DB'   E5                    	PUSH	H
  06DC'   21 0009               	LXI	H,9
  06DF'   39                    	DAD	SP
  06E0'   CD 0000*              	CALL	g.##
  06E3'   D1                    	POP	D
  06E4'   7D                    	MOV	A,L
  06E5'   12                    	STAX	D
                                ;			}
                                ;		}
  06E6'                         .uc:	DS	0
                                ;		else if (isalpha(s) || isdigit(s)) {
  06E6'   C3 0731'              	JMP	.xc
	MACRO-80 3.35	22-Mar-19	PAGE	1-25


  06E9'   21 0006               .sc:	LXI	H,6
  06EC'   39                    	DAD	SP
  06ED'   CD 0000*              	CALL	g.##
  06F0'   E5                    	PUSH	H
  06F1'   CD 0000*              	CALL	isalpha
  06F4'   C1                    	POP	B
  06F5'   7C                    	MOV	A,H
  06F6'   B5                    	ORA	L
  06F7'   C2 0706'              	JNZ	.zc
  06FA'   21 0006               	LXI	H,6
  06FD'   39                    	DAD	SP
  06FE'   CD 0000*              	CALL	g.##
  0701'   E5                    	PUSH	H
  0702'   CD 0000*              	CALL	isdigit
  0705'   C1                    	POP	B
  0706'   CD 0000*              .zc:	CALL	e.0##
  0709'   CA 0731'              	JZ	.yc
                                ;			if (i == 0)
  070C'   2A 07E7"              	LHLD	.ac
  070F'   7C                    	MOV	A,H
  0710'   B5                    	ORA	L
  0711'   C2 071E'              	JNZ	.ad
                                ;				*d++ = '.';
  0714'   2A 07EB"              	LHLD	.cc
  0717'   23                    	INX	H
  0718'   22 07EB"              	SHLD	.cc
  071B'   2B                    	DCX	H
  071C'   36 2E                 	MVI	M,46
                                ;			*d++ = s;
  071E'   2A 07EB"              .ad:	LHLD	.cc
  0721'   23                    	INX	H
  0722'   22 07EB"              	SHLD	.cc
  0725'   2B                    	DCX	H
  0726'   E5                    	PUSH	H
  0727'   21 0008               	LXI	H,8
  072A'   39                    	DAD	SP
  072B'   CD 0000*              	CALL	g.##
  072E'   D1                    	POP	D
  072F'   7D                    	MOV	A,L
  0730'   12                    	STAX	D
                                ;		}
                                ;	}
  0731'                         .yc:	DS	0
  0731'   C3 0641'              .xc:	JMP	.oc
  0734'                         .pc:	DS	0
                                ;	/* make sure string is terminated! */
                                ;	*d = NUL;
  0734'   2A 07EB"              	LHLD	.cc
  0737'   36 00                 	MVI	M,0
                                ;}
  0739'   E1                    .bd:	POP	H
  073A'   22 07E7"              	SHLD	.ac
  073D'   E1                    	POP	H
  073E'   22 07E9"              	SHLD	.bc
  0741'   E1                    	POP	H
  0742'   22 07EB"              	SHLD	.cc
	MACRO-80 3.35	22-Mar-19	PAGE	1-26


  0745'   C1                    	POP	B
  0746'   C9                    	RET
                                ;/*********************************************
                                ;**
                                ;**	Vinculum (USB) File/Directory Functions
                                ;**
                                ;*********************************************/
                                ;/* bldudir - perform directory on the USB device and
                                ;** populate the directory array, dynamically allocating
                                ;** memory for each entry.
                                ;*/
                                ;bldudir()
                                ;{
                                
                                	PUBLIC	bldudir
                                ;	/* pass 1 - populate the directory array */
                                ;	vdir1();
                                
  0747'   CD 074E'              bldudir:	CALL	vdir1
                                ;	
                                ;	/* pass 2 - look up details on each file */
                                ;	vdir2();
  074A'   CD 0912'              	CALL	vdir2
                                ;}
  074D'   C9                    	RET
                                ;/* vdir1 - This routine does "pass 1" of the directory
                                ;** using the 'dir' command fill out the array of directory 
                                ;** entries (direntry) by allocating space for each one
                                ;*/
                                ;vdir1()
                                ;{
                                
                                	PUBLIC	vdir1
                                ;	int i, ind, done;
  074E'                         	DSEG
  07ED"   0000                  .cd:	DW	0
  07EF"   0000                  .dd:	DW	0
  07F1"   0000                  .ed:	DW	0
                                ;	struct finfo *entry;
  07F3"   0000                  .fd:	DW	0
                                ;	
                                ;	/* Issue directory command */
                                ;	str_send("dir\r");
  07F5"                         	CSEG
                                
  074E'   2A 07F3"              vdir1:	LHLD	.fd
  0751'   E5                    	PUSH	H
  0752'   2A 07F1"              	LHLD	.ed
  0755'   E5                    	PUSH	H
  0756'   2A 07EF"              	LHLD	.dd
  0759'   E5                    	PUSH	H
  075A'   2A 07ED"              	LHLD	.cd
  075D'   E5                    	PUSH	H
  075E'   21 08DE'              	LXI	H,.fb
  0761'   E5                    	PUSH	H
  0762'   CD 0000*              	CALL	str_sen
	MACRO-80 3.35	22-Mar-19	PAGE	1-27


  0765'   C1                    	POP	B
                                ;	
                                ;	/* the first line is always blank - toss it! */
                                ;	str_read(linebuff, '\r');
  0766'   21 0000*              	LXI	H,linebuf
  0769'   E5                    	PUSH	H
  076A'   21 000D               	LXI	H,13
  076D'   E5                    	PUSH	H
  076E'   CD 0000*              	CALL	str_rea
  0771'   C1                    	POP	B
  0772'   C1                    	POP	B
                                ;	done = FALSE;
  0773'   21 0000               	LXI	H,0
  0776'   22 07F1"              	SHLD	.ed
                                ;	nentries = 0;
  0779'   21 0000               	LXI	H,0
  077C'   22 04C5"              	SHLD	nentrie
                                ;	
                                ;	/* read each line and add it to the list,
                                ;	** when the D:\> prompt appears, we're done. the
                                ;	** list entries are dynamically allocated.
                                ;	*/
                                ;	do {
  077F'                         .id:	DS	0
                                ;		str_read(linebuff, '\r');
  077F'   21 0000*              	LXI	H,linebuf
  0782'   E5                    	PUSH	H
  0783'   21 000D               	LXI	H,13
  0786'   E5                    	PUSH	H
  0787'   CD 0000*              	CALL	str_rea
  078A'   C1                    	POP	B
  078B'   C1                    	POP	B
                                ;		if (strcmp(linebuff, "D:\\>") == 0)
  078C'   21 0000*              	LXI	H,linebuf
  078F'   E5                    	PUSH	H
  0790'   21 08E3'              	LXI	H,.fb+5
  0793'   E5                    	PUSH	H
  0794'   CD 0000*              	CALL	strcmp
  0797'   C1                    	POP	B
  0798'   C1                    	POP	B
  0799'   7C                    	MOV	A,H
  079A'   B5                    	ORA	L
  079B'   C2 07A7'              	JNZ	.jd
                                ;			done = TRUE;
  079E'   21 0001               	LXI	H,1
  07A1'   22 07F1"              	SHLD	.ed
                                ;		else if ((entry = alloc(sizeof(fentry))) == 0)
  07A4'   C3 08C4'              	JMP	.kd
  07A7'   21 0018               .jd:	LXI	H,24
  07AA'   E5                    	PUSH	H
  07AB'   CD 0000*              	CALL	alloc
  07AE'   C1                    	POP	B
  07AF'   22 07F3"              	SHLD	.fd
  07B2'   CD 0000*              	CALL	c.not##
  07B5'   CA 07C3'              	JZ	.ld
                                ;			printf("error allocating directory entry!\n");
	MACRO-80 3.35	22-Mar-19	PAGE	1-28


  07B8'   21 08E8'              	LXI	H,.fb+10
  07BB'   E5                    	PUSH	H
  07BC'   CD 0000*              	CALL	printf
  07BF'   C1                    	POP	B
                                ;		else {
  07C0'   C3 08C4'              	JMP	.md
  07C3'                         .ld:	DS	0
                                ;			/* process directory entry */
                                ;			entry->name[0] = NUL;
  07C3'   2A 07F3"              	LHLD	.fd
  07C6'   36 00                 	MVI	M,0
                                ;			entry->ext[0] = NUL;
  07C8'   2A 07F3"              	LHLD	.fd
  07CB'   11 0009               	LXI	D,9
  07CE'   19                    	DAD	D
  07CF'   36 00                 	MVI	M,0
                                ;			entry->tag = FALSE;
  07D1'   2A 07F3"              	LHLD	.fd
  07D4'   11 0017               	LXI	D,23
  07D7'   19                    	DAD	D
  07D8'   36 00                 	MVI	M,0
                                ;			entry->isdir = FALSE;
  07DA'   2A 07F3"              	LHLD	.fd
  07DD'   11 000D               	LXI	D,13
  07E0'   19                    	DAD	D
  07E1'   36 00                 	MVI	M,0
  07E3'   23                    	INX	H
  07E4'   36 00                 	MVI	M,0
                                ;			if ((ind=index(linebuff, " DIR")) != -1) {
  07E6'   21 0000*              	LXI	H,linebuf
  07E9'   E5                    	PUSH	H
  07EA'   21 090B'              	LXI	H,.fb+45
  07ED'   E5                    	PUSH	H
  07EE'   CD 0000*              	CALL	index
  07F1'   C1                    	POP	B
  07F2'   C1                    	POP	B
  07F3'   22 07EF"              	SHLD	.dd
  07F6'   23                    	INX	H
  07F7'   CD 0000*              	CALL	e.0##
  07FA'   CA 0830'              	JZ	.nd
                                ;				/* have a directory entry */
                                ;				entry->isdir = TRUE;
  07FD'   2A 07F3"              	LHLD	.fd
  0800'   11 000D               	LXI	D,13
  0803'   19                    	DAD	D
  0804'   36 01                 	MVI	M,1
  0806'   23                    	INX	H
  0807'   36 00                 	MVI	M,0
                                ;				linebuff[ind] = 0;
  0809'   2A 07EF"              	LHLD	.dd
  080C'   11 0000*              	LXI	D,linebuf
  080F'   19                    	DAD	D
  0810'   36 00                 	MVI	M,0
                                ;				strncpy(entry->name, linebuff, 8);
  0812'   2A 07F3"              	LHLD	.fd
  0815'   E5                    	PUSH	H
	MACRO-80 3.35	22-Mar-19	PAGE	1-29


  0816'   21 0000*              	LXI	H,linebuf
  0819'   E5                    	PUSH	H
  081A'   21 0008               	LXI	H,8
  081D'   E5                    	PUSH	H
  081E'   CD 0000*              	CALL	strncpy
  0821'   C1                    	POP	B
  0822'   C1                    	POP	B
  0823'   C1                    	POP	B
                                ;				entry->name[8] = NUL;
  0824'   2A 07F3"              	LHLD	.fd
  0827'   11 0008               	LXI	D,8
  082A'   19                    	DAD	D
  082B'   36 00                 	MVI	M,0
                                ;			} else if ((ind=index(linebuff, ".")) != -1) {
  082D'   C3 08B0'              	JMP	.od
  0830'   21 0000*              .nd:	LXI	H,linebuf
  0833'   E5                    	PUSH	H
  0834'   21 0910'              	LXI	H,.fb+50
  0837'   E5                    	PUSH	H
  0838'   CD 0000*              	CALL	index
  083B'   C1                    	POP	B
  083C'   C1                    	POP	B
  083D'   22 07EF"              	SHLD	.dd
  0840'   23                    	INX	H
  0841'   CD 0000*              	CALL	e.0##
  0844'   CA 0895'              	JZ	.pd
                                ;				/* NAME.EXT filename */
                                ;				linebuff[ind] = 0;
  0847'   2A 07EF"              	LHLD	.dd
  084A'   11 0000*              	LXI	D,linebuf
  084D'   19                    	DAD	D
  084E'   36 00                 	MVI	M,0
                                ;				strncpy(entry->name, linebuff, 8);
  0850'   2A 07F3"              	LHLD	.fd
  0853'   E5                    	PUSH	H
  0854'   21 0000*              	LXI	H,linebuf
  0857'   E5                    	PUSH	H
  0858'   21 0008               	LXI	H,8
  085B'   E5                    	PUSH	H
  085C'   CD 0000*              	CALL	strncpy
  085F'   C1                    	POP	B
  0860'   C1                    	POP	B
  0861'   C1                    	POP	B
                                ;				entry->name[8] = NUL;
  0862'   2A 07F3"              	LHLD	.fd
  0865'   11 0008               	LXI	D,8
  0868'   19                    	DAD	D
  0869'   36 00                 	MVI	M,0
                                ;				strncpy(entry->ext, linebuff+ind+1, 3);
  086B'   2A 07F3"              	LHLD	.fd
  086E'   11 0009               	LXI	D,9
  0871'   19                    	DAD	D
  0872'   E5                    	PUSH	H
  0873'   2A 07EF"              	LHLD	.dd
  0876'   11 0000*              	LXI	D,linebuf
  0879'   19                    	DAD	D
	MACRO-80 3.35	22-Mar-19	PAGE	1-30


  087A'   23                    	INX	H
  087B'   E5                    	PUSH	H
  087C'   21 0003               	LXI	H,3
  087F'   E5                    	PUSH	H
  0880'   CD 0000*              	CALL	strncpy
  0883'   C1                    	POP	B
  0884'   C1                    	POP	B
  0885'   C1                    	POP	B
                                ;				entry->ext[3] = NUL;
  0886'   2A 07F3"              	LHLD	.fd
  0889'   11 0009               	LXI	D,9
  088C'   19                    	DAD	D
  088D'   23                    	INX	H
  088E'   23                    	INX	H
  088F'   23                    	INX	H
  0890'   36 00                 	MVI	M,0
                                ;			} else {
  0892'   C3 08B0'              	JMP	.qd
  0895'                         .pd:	DS	0
                                ;				/* NAME filename */
                                ;				strncpy(entry->name, linebuff, 8);
  0895'   2A 07F3"              	LHLD	.fd
  0898'   E5                    	PUSH	H
  0899'   21 0000*              	LXI	H,linebuf
  089C'   E5                    	PUSH	H
  089D'   21 0008               	LXI	H,8
  08A0'   E5                    	PUSH	H
  08A1'   CD 0000*              	CALL	strncpy
  08A4'   C1                    	POP	B
  08A5'   C1                    	POP	B
  08A6'   C1                    	POP	B
                                ;				entry->name[8] = NUL;
  08A7'   2A 07F3"              	LHLD	.fd
  08AA'   11 0008               	LXI	D,8
  08AD'   19                    	DAD	D
  08AE'   36 00                 	MVI	M,0
                                ;			}
  08B0'                         .qd:	DS	0
  08B0'                         .od:	DS	0
                                ;			/* now store the entry and bump the count */
                                ;			direntry[nentries++] = entry;
  08B0'   2A 04C5"              	LHLD	nentrie
  08B3'   23                    	INX	H
  08B4'   22 04C5"              	SHLD	nentrie
  08B7'   2B                    	DCX	H
  08B8'   29                    	DAD	H
  08B9'   11 02C5"              	LXI	D,direntr
  08BC'   19                    	DAD	D
  08BD'   E5                    	PUSH	H
  08BE'   2A 07F3"              	LHLD	.fd
  08C1'   CD 0000*              	CALL	q.##
                                ;		}
  08C4'                         .md:	DS	0
  08C4'                         .kd:	DS	0
                                ;	} while (!done);
  08C4'   2A 07F1"              .gd:	LHLD	.ed
	MACRO-80 3.35	22-Mar-19	PAGE	1-31


  08C7'   CD 0000*              	CALL	c.not##
  08CA'   C2 077F'              	JNZ	.id
  08CD'                         .hd:	DS	0
                                ;}
  08CD'   E1                    .rd:	POP	H
  08CE'   22 07ED"              	SHLD	.cd
  08D1'   E1                    	POP	H
  08D2'   22 07EF"              	SHLD	.dd
  08D5'   E1                    	POP	H
  08D6'   22 07F1"              	SHLD	.ed
  08D9'   E1                    	POP	H
  08DA'   22 07F3"              	SHLD	.fd
  08DD'   C9                    	RET
  08DE'                         .fb:
  08DE'   64 69 72              	DB	'dir'
  08E1'   0D                    	DB	13
  08E2'   00                    	DB	0
  08E3'   44 3A                 	DB	'D:'
  08E5'   5C                    	DB	92
  08E6'   3E                    	DB	'>'
  08E7'   00                    	DB	0
  08E8'   65 72 72 6F           	DB	'error allocating directory entry!'
  08EC'   72 20 61 6C           
  08F0'   6C 6F 63 61           
  08F4'   74 69 6E 67           
  08F8'   20 64 69 72           
  08FC'   65 63 74 6F           
  0900'   72 79 20 65           
  0904'   6E 74 72 79           
  0908'   21                    
  0909'   0A                    	DB	10
  090A'   00                    	DB	0
  090B'   20 44 49 52           	DB	' DIR'
  090F'   00                    	DB	0
  0910'   2E                    	DB	'.'
  0911'   00                    	DB	0
                                ;/* vdir2 - This routine does "pass 2" of the directory 
                                ;** for each entry in the table it does a more extensive
                                ;** query gathering file size and other information
                                ;*/
                                ;vdir2()
                                ;{
                                
                                	PUBLIC	vdir2
                                ;	int i;
  0912'                         	DSEG
  07F5"   0000                  .td:	DW	0
                                ;	static char dirtemp[20];
  07F7"   00 00 00 00           .ud:	DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  07FB"   00 00 00 00           
  07FF"   00 00 00 00           
  0803"   00 00 00 00           
  0807"   00 00 00 00           	DB	0,0,0,0
                                ;	for (i=0; i<nentries; i++){
  080B"                         	CSEG
                                
	MACRO-80 3.35	22-Mar-19	PAGE	1-32


  0912'   2A 07F5"              vdir2:	LHLD	.td
  0915'   E5                    	PUSH	H
  0916'   21 0000               	LXI	H,0
  0919'   22 07F5"              	SHLD	.td
  091C'   2A 04C5"              .xd:	LHLD	nentrie
  091F'   EB                    	XCHG
  0920'   2A 07F5"              	LHLD	.td
  0923'   CD 0000*              	CALL	c.gt##
  0926'   CA 09E2'              	JZ	.wd
  0929'   C3 0937'              	JMP	.yd
  092C'   2A 07F5"              .vd:	LHLD	.td
  092F'   23                    	INX	H
  0930'   22 07F5"              	SHLD	.td
  0933'   2B                    	DCX	H
  0934'   C3 091C'              	JMP	.xd
  0937'                         .yd:	DS	0
                                ;		/* return entry as a string, e.g. "HELLO.TXT" */
                                ;		dirstr(i, dirtemp);
  0937'   2A 07F5"              	LHLD	.td
  093A'   E5                    	PUSH	H
  093B'   21 07F7"              	LXI	H,.ud
  093E'   E5                    	PUSH	H
  093F'   CD 0C0D'              	CALL	dirstr
  0942'   C1                    	POP	B
  0943'   C1                    	POP	B
                                ;		
                                ;		/* look up the file size and date modified */
                                ;		if (direntries[i]->isdir) {
  0944'   2A 07F5"              	LHLD	.td
  0947'   29                    	DAD	H
  0948'   11 02C5"              	LXI	D,direntr
  094B'   19                    	DAD	D
  094C'   CD 0000*              	CALL	h.##
  094F'   11 000D               	LXI	D,13
  0952'   19                    	DAD	D
  0953'   CD 0000*              	CALL	h.##
  0956'   7C                    	MOV	A,H
  0957'   B5                    	ORA	L
  0958'   CA 099C'              	JZ	.zd
                                ;			direntries[i]->size  = 0L;
  095B'   2A 07F5"              	LHLD	.td
  095E'   29                    	DAD	H
  095F'   11 02C5"              	LXI	D,direntr
  0962'   19                    	DAD	D
  0963'   CD 0000*              	CALL	h.##
  0966'   11 000F               	LXI	D,15
  0969'   19                    	DAD	D
  096A'   CD 0000*              	CALL	st4.##
  096D'   0000 0000             	DW	0,0
                                ;			direntries[i]->mdate = 0;
  0971'   2A 07F5"              	LHLD	.td
  0974'   29                    	DAD	H
  0975'   11 02C5"              	LXI	D,direntr
  0978'   19                    	DAD	D
  0979'   CD 0000*              	CALL	h.##
  097C'   11 0013               	LXI	D,19
	MACRO-80 3.35	22-Mar-19	PAGE	1-33


  097F'   19                    	DAD	D
  0980'   36 00                 	MVI	M,0
  0982'   23                    	INX	H
  0983'   36 00                 	MVI	M,0
                                ;			direntries[i]->mtime = 0;
  0985'   2A 07F5"              	LHLD	.td
  0988'   29                    	DAD	H
  0989'   11 02C5"              	LXI	D,direntr
  098C'   19                    	DAD	D
  098D'   CD 0000*              	CALL	h.##
  0990'   11 0015               	LXI	D,21
  0993'   19                    	DAD	D
  0994'   36 00                 	MVI	M,0
  0996'   23                    	INX	H
  0997'   36 00                 	MVI	M,0
                                ;		}
                                ;		else {
  0999'   C3 09DF'              	JMP	.ae
  099C'                         .zd:	DS	0
                                ;			vdirf(dirtemp, &direntries[i]->size);
  099C'   21 07F7"              	LXI	H,.ud
  099F'   E5                    	PUSH	H
  09A0'   2A 07F5"              	LHLD	.td
  09A3'   29                    	DAD	H
  09A4'   11 02C5"              	LXI	D,direntr
  09A7'   19                    	DAD	D
  09A8'   CD 0000*              	CALL	h.##
  09AB'   11 000F               	LXI	D,15
  09AE'   19                    	DAD	D
  09AF'   E5                    	PUSH	H
  09B0'   CD 0000*              	CALL	vdirf
  09B3'   C1                    	POP	B
  09B4'   C1                    	POP	B
                                ;			vdird(dirtemp, &direntries[i]->mdate, &direntries[i]->mtime);
  09B5'   21 07F7"              	LXI	H,.ud
  09B8'   E5                    	PUSH	H
  09B9'   2A 07F5"              	LHLD	.td
  09BC'   29                    	DAD	H
  09BD'   11 02C5"              	LXI	D,direntr
  09C0'   19                    	DAD	D
  09C1'   CD 0000*              	CALL	h.##
  09C4'   11 0013               	LXI	D,19
  09C7'   19                    	DAD	D
  09C8'   E5                    	PUSH	H
  09C9'   2A 07F5"              	LHLD	.td
  09CC'   29                    	DAD	H
  09CD'   11 02C5"              	LXI	D,direntr
  09D0'   19                    	DAD	D
  09D1'   CD 0000*              	CALL	h.##
  09D4'   11 0015               	LXI	D,21
  09D7'   19                    	DAD	D
  09D8'   E5                    	PUSH	H
  09D9'   CD 0000*              	CALL	vdird
  09DC'   C1                    	POP	B
  09DD'   C1                    	POP	B
  09DE'   C1                    	POP	B
	MACRO-80 3.35	22-Mar-19	PAGE	1-34


                                ;		}
  09DF'                         .ae:	DS	0
                                ;	}
  09DF'   C3 092C'              	JMP	.vd
  09E2'                         .wd:	DS	0
                                ;}
  09E2'   E1                    .be:	POP	H
  09E3'   22 07F5"              	SHLD	.td
  09E6'   C9                    	RET
                                ;/* vcput - copy from HDOS source file to VDIP dest file 
                                ;** return -1 on error
                                ;*/
                                ;vcput(source, dest)
                                
                                	PUBLIC	vcput
                                ;char *source, *dest;
                                ;{
                                ;	int i, nbytes, channel, done, result, rc;
  09E7'                         	DSEG
  080B"   0000                  .ce:	DW	0
  080D"   0000                  .de:	DW	0
  080F"   0000                  .ee:	DW	0
  0811"   0000                  .fe:	DW	0
  0813"   0000                  .ge:	DW	0
  0815"   0000                  .he:	DW	0
                                ;	static long fsize;
  0817"   0000 0000             .ie:	DW	0,0
                                ;	
                                ;	rc = 0;
  081B"                         	CSEG
                                
  09E7'   2A 0815"              vcput:	LHLD	.he
  09EA'   E5                    	PUSH	H
  09EB'   2A 0813"              	LHLD	.ge
  09EE'   E5                    	PUSH	H
  09EF'   2A 0811"              	LHLD	.fe
  09F2'   E5                    	PUSH	H
  09F3'   2A 080F"              	LHLD	.ee
  09F6'   E5                    	PUSH	H
  09F7'   2A 080D"              	LHLD	.de
  09FA'   E5                    	PUSH	H
  09FB'   2A 080B"              	LHLD	.ce
  09FE'   E5                    	PUSH	H
  09FF'   21 0000               	LXI	H,0
  0A02'   22 0815"              	SHLD	.he
                                ;	if((channel = fopen(source, "rb")) == 0) {
  0A05'   21 0010               	LXI	H,16
  0A08'   39                    	DAD	SP
  0A09'   CD 0000*              	CALL	h.##
  0A0C'   E5                    	PUSH	H
  0A0D'   21 0B91'              	LXI	H,.sd
  0A10'   E5                    	PUSH	H
  0A11'   CD 0000*              	CALL	fopen
  0A14'   C1                    	POP	B
  0A15'   C1                    	POP	B
  0A16'   22 080F"              	SHLD	.ee
	MACRO-80 3.35	22-Mar-19	PAGE	1-35


  0A19'   CD 0000*              	CALL	c.not##
  0A1C'   CA 0A39'              	JZ	.je
                                ;		printf("Unable to open source file %s\n", source);
  0A1F'   21 0B94'              	LXI	H,.sd+3
  0A22'   E5                    	PUSH	H
  0A23'   21 0012               	LXI	H,18
  0A26'   39                    	DAD	SP
  0A27'   CD 0000*              	CALL	h.##
  0A2A'   E5                    	PUSH	H
  0A2B'   CD 0000*              	CALL	printf
  0A2E'   C1                    	POP	B
  0A2F'   C1                    	POP	B
                                ;		rc = -1;
  0A30'   21 FFFF               	LXI	H,-1
  0A33'   22 0815"              	SHLD	.he
                                ;	}
                                ;	else if (vwopen(dest) == -1) {
  0A36'   C3 0B73'              	JMP	.ke
  0A39'   21 000E               .je:	LXI	H,14
  0A3C'   39                    	DAD	SP
  0A3D'   CD 0000*              	CALL	h.##
  0A40'   E5                    	PUSH	H
  0A41'   CD 0000*              	CALL	vwopen
  0A44'   C1                    	POP	B
  0A45'   23                    	INX	H
  0A46'   7C                    	MOV	A,H
  0A47'   B5                    	ORA	L
  0A48'   C2 0A6D'              	JNZ	.le
                                ;		printf("Unable to open destination file %s\n", dest);
  0A4B'   21 0BB3'              	LXI	H,.sd+34
  0A4E'   E5                    	PUSH	H
  0A4F'   21 0010               	LXI	H,16
  0A52'   39                    	DAD	SP
  0A53'   CD 0000*              	CALL	h.##
  0A56'   E5                    	PUSH	H
  0A57'   CD 0000*              	CALL	printf
  0A5A'   C1                    	POP	B
  0A5B'   C1                    	POP	B
                                ;		rc = -1;
  0A5C'   21 FFFF               	LXI	H,-1
  0A5F'   22 0815"              	SHLD	.he
                                ;		fclose(channel);
  0A62'   2A 080F"              	LHLD	.ee
  0A65'   E5                    	PUSH	H
  0A66'   CD 0000*              	CALL	fclose
  0A69'   C1                    	POP	B
                                ;	}
                                ;	else {
  0A6A'   C3 0B73'              	JMP	.me
  0A6D'                         .le:	DS	0
                                ;		/* start writing at beginning of file */
                                ;		vseek(0);
  0A6D'   21 0000               	LXI	H,0
  0A70'   E5                    	PUSH	H
  0A71'   CD 0000*              	CALL	vseek
  0A74'   C1                    	POP	B
	MACRO-80 3.35	22-Mar-19	PAGE	1-36


                                ;		fsize = 0L;
  0A75'   21 0817"              	LXI	H,.ie
  0A78'   CD 0000*              	CALL	st4.##
  0A7B'   0000 0000             	DW	0,0
                                ;		printf("%s --> %s\n", source, dest);
  0A7F'   21 0BD7'              	LXI	H,.sd+70
  0A82'   E5                    	PUSH	H
  0A83'   21 0012               	LXI	H,18
  0A86'   39                    	DAD	SP
  0A87'   CD 0000*              	CALL	h.##
  0A8A'   E5                    	PUSH	H
  0A8B'   21 0012               	LXI	H,18
  0A8E'   39                    	DAD	SP
  0A8F'   CD 0000*              	CALL	h.##
  0A92'   E5                    	PUSH	H
  0A93'   CD 0000*              	CALL	printf
  0A96'   C1                    	POP	B
  0A97'   C1                    	POP	B
  0A98'   C1                    	POP	B
                                ;		for (i=1, done=FALSE; !done; fsize+=nbytes, i++) {
  0A99'   21 0001               	LXI	H,1
  0A9C'   22 080B"              	SHLD	.ce
  0A9F'   21 0000               	LXI	H,0
  0AA2'   22 0811"              	SHLD	.fe
  0AA5'   2A 0811"              .pe:	LHLD	.fe
  0AA8'   CD 0000*              	CALL	c.not##
  0AAB'   CA 0B4D'              	JZ	.oe
  0AAE'   C3 0AD3'              	JMP	.qe
  0AB1'   21 0817"              .ne:	LXI	H,.ie
  0AB4'   CD 0000*              	CALL	llong.##
  0AB7'   C5                    	PUSH	B
  0AB8'   D5                    	PUSH	D
  0AB9'   2A 080D"              	LHLD	.de
  0ABC'   CD 0000*              	CALL	Hi.Bl##
  0ABF'   CD 0000*              	CALL	L.add##
  0AC2'   21 0817"              	LXI	H,.ie
  0AC5'   CD 0000*              	CALL	slong.##
  0AC8'   2A 080B"              	LHLD	.ce
  0ACB'   23                    	INX	H
  0ACC'   22 080B"              	SHLD	.ce
  0ACF'   2B                    	DCX	H
  0AD0'   C3 0AA5'              	JMP	.pe
  0AD3'                         .qe:	DS	0
                                ;			nbytes = read(channel, rwbuffer, BUFFSIZE);
  0AD3'   2A 080F"              	LHLD	.ee
  0AD6'   E5                    	PUSH	H
  0AD7'   21 06C7"              	LXI	H,rwbuffe
  0ADA'   E5                    	PUSH	H
  0ADB'   21 0100               	LXI	H,256
  0ADE'   E5                    	PUSH	H
  0ADF'   CD 0000*              	CALL	read
  0AE2'   C1                    	POP	B
  0AE3'   C1                    	POP	B
  0AE4'   C1                    	POP	B
  0AE5'   22 080D"              	SHLD	.de
                                ;			if (nbytes == 0)
	MACRO-80 3.35	22-Mar-19	PAGE	1-37


  0AE8'   2A 080D"              	LHLD	.de
  0AEB'   7C                    	MOV	A,H
  0AEC'   B5                    	ORA	L
  0AED'   C2 0AF9'              	JNZ	.re
                                ;				done = TRUE;
  0AF0'   21 0001               	LXI	H,1
  0AF3'   22 0811"              	SHLD	.fe
                                ;			else {
  0AF6'   C3 0B4A'              	JMP	.se
  0AF9'                         .re:	DS	0
                                ;				result = vwrite(rwbuffer, nbytes);
  0AF9'   21 06C7"              	LXI	H,rwbuffe
  0AFC'   E5                    	PUSH	H
  0AFD'   2A 080D"              	LHLD	.de
  0B00'   E5                    	PUSH	H
  0B01'   CD 0000*              	CALL	vwrite
  0B04'   C1                    	POP	B
  0B05'   C1                    	POP	B
  0B06'   22 0813"              	SHLD	.ge
                                ;				if (result == -1) {
  0B09'   2A 0813"              	LHLD	.ge
  0B0C'   23                    	INX	H
  0B0D'   7C                    	MOV	A,H
  0B0E'   B5                    	ORA	L
  0B0F'   C2 0B29'              	JNZ	.te
                                ;					printf("\nError writing to VDIP device\n");
  0B12'   21 0BE2'              	LXI	H,.sd+81
  0B15'   E5                    	PUSH	H
  0B16'   CD 0000*              	CALL	printf
  0B19'   C1                    	POP	B
                                ;					rc = -1;
  0B1A'   21 FFFF               	LXI	H,-1
  0B1D'   22 0815"              	SHLD	.he
                                ;					done = TRUE;
  0B20'   21 0001               	LXI	H,1
  0B23'   22 0811"              	SHLD	.fe
                                ;				} else {
  0B26'   C3 0B4A'              	JMP	.ue
  0B29'                         .te:	DS	0
                                ;					/* show user we're working ... */
                                ;					putchar('.');
  0B29'   21 002E               	LXI	H,46
  0B2C'   E5                    	PUSH	H
  0B2D'   CD 0000*              	CALL	putchar
  0B30'   C1                    	POP	B
                                ;					if ((i%60) == 0)
  0B31'   2A 080B"              	LHLD	.ce
  0B34'   EB                    	XCHG
  0B35'   21 003C               	LXI	H,60
  0B38'   CD 0000*              	CALL	c.div##
  0B3B'   EB                    	XCHG
  0B3C'   CD 0000*              	CALL	c.not##
  0B3F'   CA 0B4A'              	JZ	.ve
                                ;						printf("\n");
  0B42'   21 0BB1'              	LXI	H,.sd+32
  0B45'   E5                    	PUSH	H
	MACRO-80 3.35	22-Mar-19	PAGE	1-38


  0B46'   CD 0000*              	CALL	printf
  0B49'   C1                    	POP	B
                                ;				}
  0B4A'                         .ve:	DS	0
  0B4A'                         .ue:	DS	0
                                ;			}
  0B4A'                         .se:	DS	0
                                ;		}
  0B4A'   C3 0AB1'              	JMP	.ne
  0B4D'                         .oe:	DS	0
                                ;		printf("\n%ld bytes\n", fsize);
  0B4D'   21 0C01'              	LXI	H,.sd+112
  0B50'   E5                    	PUSH	H
  0B51'   21 0817"              	LXI	H,.ie
  0B54'   CD 0000*              	CALL	llong.##
  0B57'   C5                    	PUSH	B
  0B58'   D5                    	PUSH	D
  0B59'   CD 0000*              	CALL	printf
  0B5C'   C1                    	POP	B
  0B5D'   C1                    	POP	B
  0B5E'   C1                    	POP	B
                                ;		
                                ;		/* important - close files! */
                                ;		fclose(channel);
  0B5F'   2A 080F"              	LHLD	.ee
  0B62'   E5                    	PUSH	H
  0B63'   CD 0000*              	CALL	fclose
  0B66'   C1                    	POP	B
                                ;		vclose(dest);
  0B67'   21 000E               	LXI	H,14
  0B6A'   39                    	DAD	SP
  0B6B'   CD 0000*              	CALL	h.##
  0B6E'   E5                    	PUSH	H
  0B6F'   CD 0000*              	CALL	vclose
  0B72'   C1                    	POP	B
                                ;	}
  0B73'                         .me:	DS	0
  0B73'                         .ke:	DS	0
                                ;	return rc;
  0B73'   2A 0815"              	LHLD	.he
  0B76'   EB                    .we:	XCHG
  0B77'   E1                    	POP	H
  0B78'   22 080B"              	SHLD	.ce
  0B7B'   E1                    	POP	H
  0B7C'   22 080D"              	SHLD	.de
  0B7F'   E1                    	POP	H
  0B80'   22 080F"              	SHLD	.ee
  0B83'   E1                    	POP	H
  0B84'   22 0811"              	SHLD	.fe
  0B87'   E1                    	POP	H
  0B88'   22 0813"              	SHLD	.ge
  0B8B'   E1                    	POP	H
  0B8C'   22 0815"              	SHLD	.he
  0B8F'   EB                    	XCHG
  0B90'   C9                    	RET
                                ;}
	MACRO-80 3.35	22-Mar-19	PAGE	1-39


  0B91'                         .sd:
  0B91'   72 62                 	DB	'rb'
  0B93'   00                    	DB	0
  0B94'   55 6E 61 62           	DB	'Unable to open source file %s'
  0B98'   6C 65 20 74           
  0B9C'   6F 20 6F 70           
  0BA0'   65 6E 20 73           
  0BA4'   6F 75 72 63           
  0BA8'   65 20 66 69           
  0BAC'   6C 65 20 25           
  0BB0'   73                    
  0BB1'   0A                    	DB	10
  0BB2'   00                    	DB	0
  0BB3'   55 6E 61 62           	DB	'Unable to open destination file %s'
  0BB7'   6C 65 20 74           
  0BBB'   6F 20 6F 70           
  0BBF'   65 6E 20 64           
  0BC3'   65 73 74 69           
  0BC7'   6E 61 74 69           
  0BCB'   6F 6E 20 66           
  0BCF'   69 6C 65 20           
  0BD3'   25 73                 
  0BD5'   0A                    	DB	10
  0BD6'   00                    	DB	0
  0BD7'   25 73 20 2D           	DB	'%s --> %s'
  0BDB'   2D 3E 20 25           
  0BDF'   73                    
  0BE0'   0A                    	DB	10
  0BE1'   00                    	DB	0
  0BE2'   0A                    	DB	10
  0BE3'   45 72 72 6F           	DB	'Error writing to VDIP device'
  0BE7'   72 20 77 72           
  0BEB'   69 74 69 6E           
  0BEF'   67 20 74 6F           
  0BF3'   20 56 44 49           
  0BF7'   50 20 64 65           
  0BFB'   76 69 63 65           
  0BFF'   0A                    	DB	10
  0C00'   00                    	DB	0
  0C01'   0A                    	DB	10
  0C02'   25 6C 64 20           	DB	'%ld bytes'
  0C06'   62 79 74 65           
  0C0A'   73                    
  0C0B'   0A                    	DB	10
  0C0C'   00                    	DB	0
                                ;/* dirstr - return a directory entry as a string 
                                ;** this routine essentially concatenates the name
                                ;** and extension portions with a '.' in the middle
                                ;** returning the result as a nul-terminated string.
                                ;*/
                                ;dirstr(e, s)
                                
                                	PUBLIC	dirstr
                                ;int e;
                                ;char *s;
                                ;{
	MACRO-80 3.35	22-Mar-19	PAGE	1-40


                                ;	strcpy(s,direntry[e]->name);
                                
  0C0D'   21 0002               dirstr:	LXI	H,2
  0C10'   39                    	DAD	SP
  0C11'   CD 0000*              	CALL	h.##
  0C14'   E5                    	PUSH	H
  0C15'   21 0006               	LXI	H,6
  0C18'   39                    	DAD	SP
  0C19'   CD 0000*              	CALL	h.##
  0C1C'   29                    	DAD	H
  0C1D'   11 02C5"              	LXI	D,direntr
  0C20'   19                    	DAD	D
  0C21'   CD 0000*              	CALL	h.##
  0C24'   E5                    	PUSH	H
  0C25'   CD 0000*              	CALL	strcpy
  0C28'   C1                    	POP	B
  0C29'   C1                    	POP	B
                                ;	if (direntry[e]->ext[0] != 0) {
  0C2A'   21 0004               	LXI	H,4
  0C2D'   39                    	DAD	SP
  0C2E'   CD 0000*              	CALL	h.##
  0C31'   29                    	DAD	H
  0C32'   11 02C5"              	LXI	D,direntr
  0C35'   19                    	DAD	D
  0C36'   CD 0000*              	CALL	h.##
  0C39'   11 0009               	LXI	D,9
  0C3C'   19                    	DAD	D
  0C3D'   CD 0000*              	CALL	g.##
  0C40'   7C                    	MOV	A,H
  0C41'   B5                    	ORA	L
  0C42'   CA 0C77'              	JZ	.ye
                                ;		strcat(s,".");
  0C45'   21 0002               	LXI	H,2
  0C48'   39                    	DAD	SP
  0C49'   CD 0000*              	CALL	h.##
  0C4C'   E5                    	PUSH	H
  0C4D'   21 0C78'              	LXI	H,.xe
  0C50'   E5                    	PUSH	H
  0C51'   CD 0000*              	CALL	strcat
  0C54'   C1                    	POP	B
  0C55'   C1                    	POP	B
                                ;		strcat(s,direntry[e]->ext);
  0C56'   21 0002               	LXI	H,2
  0C59'   39                    	DAD	SP
  0C5A'   CD 0000*              	CALL	h.##
  0C5D'   E5                    	PUSH	H
  0C5E'   21 0006               	LXI	H,6
  0C61'   39                    	DAD	SP
  0C62'   CD 0000*              	CALL	h.##
  0C65'   29                    	DAD	H
  0C66'   11 02C5"              	LXI	D,direntr
  0C69'   19                    	DAD	D
  0C6A'   CD 0000*              	CALL	h.##
  0C6D'   11 0009               	LXI	D,9
  0C70'   19                    	DAD	D
  0C71'   E5                    	PUSH	H
	MACRO-80 3.35	22-Mar-19	PAGE	1-41


  0C72'   CD 0000*              	CALL	strcat
  0C75'   C1                    	POP	B
  0C76'   C1                    	POP	B
                                ;	}
                                ;}
  0C77'   C9                    .ye:	RET
  0C78'                         .xe:
  0C78'   2E                    	DB	'.'
  0C79'   00                    	DB	0
                                ;/*********************************************
                                ;**
                                ;**	HDOS File/Directory Functions
                                ;**
                                ;*********************************************/
                                ;/* bldhdir - read HDOS system directory file for specified
                                ;** device and populate directory array, dynamically 
                                ;** allocating memory for each entry.  Device is of the form
                                ;** "SY0", "DK0", etc.
                                ;*/
                                ;bldhdir(device)
                                
                                	PUBLIC	bldhdir
                                ;char *device;
                                ;{	
                                ;	int i, j, cc, channel, done, block, rc;
  0C7A'                         	DSEG
  081B"   0000                  .af:	DW	0
  081D"   0000                  .bf:	DW	0
  081F"   0000                  .cf:	DW	0
  0821"   0000                  .df:	DW	0
  0823"   0000                  .ef:	DW	0
  0825"   0000                  .ff:	DW	0
  0827"   0000                  .gf:	DW	0
                                ;	unsigned clu;
                                ;	struct finfo *entry;
  0829"   0000                  .hf:	DW	0
                                ;	char *src, *dst;
  082B"   0000                  .if:	DW	0
  082D"   0000                  .jf:	DW	0
                                ;	char spg;
                                ;	static char dfname[20];
  082F"   00 00 00 00           .kf:	DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  0833"   00 00 00 00           
  0837"   00 00 00 00           
  083B"   00 00 00 00           
  083F"   00 00 00 00           	DB	0,0,0,0
                                ;	rc = 0;
  0843"                         	CSEG
                                
  0C7A'   3B                    bldhdir:	DCX	SP
  0C7B'   C5                    	PUSH	B
  0C7C'   2A 082D"              	LHLD	.jf
  0C7F'   E5                    	PUSH	H
  0C80'   2A 082B"              	LHLD	.if
  0C83'   E5                    	PUSH	H
  0C84'   2A 0829"              	LHLD	.hf
	MACRO-80 3.35	22-Mar-19	PAGE	1-42


  0C87'   E5                    	PUSH	H
  0C88'   2A 0827"              	LHLD	.gf
  0C8B'   E5                    	PUSH	H
  0C8C'   2A 0825"              	LHLD	.ff
  0C8F'   E5                    	PUSH	H
  0C90'   2A 0823"              	LHLD	.ef
  0C93'   E5                    	PUSH	H
  0C94'   2A 0821"              	LHLD	.df
  0C97'   E5                    	PUSH	H
  0C98'   2A 081F"              	LHLD	.cf
  0C9B'   E5                    	PUSH	H
  0C9C'   2A 081D"              	LHLD	.bf
  0C9F'   E5                    	PUSH	H
  0CA0'   2A 081B"              	LHLD	.af
  0CA3'   E5                    	PUSH	H
  0CA4'   21 0000               	LXI	H,0
  0CA7'   22 0827"              	SHLD	.gf
                                ;	strcpy(dfname, device);
  0CAA'   21 082F"              	LXI	H,.kf
  0CAD'   E5                    	PUSH	H
  0CAE'   21 001B               	LXI	H,27
  0CB1'   39                    	DAD	SP
  0CB2'   CD 0000*              	CALL	h.##
  0CB5'   E5                    	PUSH	H
  0CB6'   CD 0000*              	CALL	strcpy
  0CB9'   C1                    	POP	B
  0CBA'   C1                    	POP	B
                                ;	strcat(dfname, ":DIRECT.SYS");
  0CBB'   21 082F"              	LXI	H,.kf
  0CBE'   E5                    	PUSH	H
  0CBF'   21 0F82'              	LXI	H,.ze
  0CC2'   E5                    	PUSH	H
  0CC3'   CD 0000*              	CALL	strcat
  0CC6'   C1                    	POP	B
  0CC7'   C1                    	POP	B
                                ;	if ((channel = fopen(dfname, "rb")) == 0) {
  0CC8'   21 082F"              	LXI	H,.kf
  0CCB'   E5                    	PUSH	H
  0CCC'   21 0F8E'              	LXI	H,.ze+12
  0CCF'   E5                    	PUSH	H
  0CD0'   CD 0000*              	CALL	fopen
  0CD3'   C1                    	POP	B
  0CD4'   C1                    	POP	B
  0CD5'   22 0821"              	SHLD	.df
  0CD8'   CD 0000*              	CALL	c.not##
  0CDB'   CA 0CF4'              	JZ	.lf
                                ;		printf("Error - unable to open %s\n", dfname);
  0CDE'   21 0F91'              	LXI	H,.ze+15
  0CE1'   E5                    	PUSH	H
  0CE2'   21 082F"              	LXI	H,.kf
  0CE5'   E5                    	PUSH	H
  0CE6'   CD 0000*              	CALL	printf
  0CE9'   C1                    	POP	B
  0CEA'   C1                    	POP	B
                                ;		rc = -1;
  0CEB'   21 FFFF               	LXI	H,-1
	MACRO-80 3.35	22-Mar-19	PAGE	1-43


  0CEE'   22 0827"              	SHLD	.gf
                                ;	}
                                ;	else {
  0CF1'   C3 0F52'              	JMP	.mf
  0CF4'                         .lf:	DS	0
                                ;		/* fetch SPG and GRT from Active I/O area */
                                ;		spg = *aiospg;
  0CF4'   21 0014               	LXI	H,20
  0CF7'   39                    	DAD	SP
  0CF8'   E5                    	PUSH	H
  0CF9'   2A 0000'              	LHLD	aiospg
  0CFC'   CD 0000*              	CALL	g.##
  0CFF'   D1                    	POP	D
  0D00'   7D                    	MOV	A,L
  0D01'   12                    	STAX	D
                                ;		grt = *aiogrt;
  0D02'   2A 0002'              	LHLD	aiogrt
  0D05'   CD 0000*              	CALL	h.##
  0D08'   22 0043"              	SHLD	grt
                                ;		
                                ;		done = FALSE;
  0D0B'   21 0000               	LXI	H,0
  0D0E'   22 0823"              	SHLD	.ef
                                ;		nentries = 0;
  0D11'   21 0000               	LXI	H,0
  0D14'   22 04C5"              	SHLD	nentrie
                                ;		block = 0;
  0D17'   21 0000               	LXI	H,0
  0D1A'   22 0825"              	SHLD	.ff
                                ;		do {
  0D1D'                         .pf:	DS	0
                                ;			/* read a chunk of the directory
                                ;			** (512 bytes at a time)
                                ;			*/
                                ;			if (read(channel, buffer, DIRBUFF) < DIRBUFF)
  0D1D'   2A 0821"              	LHLD	.df
  0D20'   E5                    	PUSH	H
  0D21'   21 04C7"              	LXI	H,buffer
  0D24'   E5                    	PUSH	H
  0D25'   21 0200               	LXI	H,512
  0D28'   E5                    	PUSH	H
  0D29'   CD 0000*              	CALL	read
  0D2C'   C1                    	POP	B
  0D2D'   C1                    	POP	B
  0D2E'   C1                    	POP	B
  0D2F'   11 7E00               	LXI	D,32256
  0D32'   CD 0000*              	CALL	c.tst##
  0D35'   DA 0D41'              	JC	.qf
                                ;				done = TRUE;
  0D38'   21 0001               	LXI	H,1
  0D3B'   22 0823"              	SHLD	.ef
                                ;			else {
  0D3E'   C3 0F41'              	JMP	.rf
  0D41'                         .qf:	DS	0
                                ;				++block;
  0D41'   2A 0825"              	LHLD	.ff
	MACRO-80 3.35	22-Mar-19	PAGE	1-44


  0D44'   23                    	INX	H
  0D45'   22 0825"              	SHLD	.ff
                                ;				
                                ;				/* each of these chunks holds 22 directory
                                ;				** entries. loop over them and store them
                                ;				** in the array (allocating space as we go
                                ;				*/
                                ;				src = buffer;
  0D48'   21 04C7"              	LXI	H,buffer
  0D4B'   22 082B"              	SHLD	.if
                                ;				for (i=0; ((i<22) && (!done)); i++) {
  0D4E'   21 0000               	LXI	H,0
  0D51'   22 081B"              	SHLD	.af
  0D54'   2A 081B"              .uf:	LHLD	.af
  0D57'   11 0016               	LXI	D,22
  0D5A'   CD 0000*              	CALL	c.gt##
  0D5D'   CA 0D66'              	JZ	.vf
  0D60'   2A 0823"              	LHLD	.ef
  0D63'   CD 0000*              	CALL	c.not##
  0D66'   CD 0000*              .vf:	CALL	e.0##
  0D69'   CA 0F41'              	JZ	.tf
  0D6C'   C3 0D7A'              	JMP	.wf
  0D6F'   2A 081B"              .sf:	LHLD	.af
  0D72'   23                    	INX	H
  0D73'   22 081B"              	SHLD	.af
  0D76'   2B                    	DCX	H
  0D77'   C3 0D54'              	JMP	.uf
  0D7A'                         .wf:	DS	0
                                ;					if (isprint(*src)){
  0D7A'   2A 082B"              	LHLD	.if
  0D7D'   CD 0000*              	CALL	g.##
  0D80'   E5                    	PUSH	H
  0D81'   CD 0000*              	CALL	isprint
  0D84'   C1                    	POP	B
  0D85'   7C                    	MOV	A,H
  0D86'   B5                    	ORA	L
  0D87'   CA 0F34'              	JZ	.xf
                                ;						/* fill out the HDOS file entry */
                                ;						dst = (char *) &hdosentry;
  0D8A'   21 000D"              	LXI	H,hdosent
  0D8D'   22 082D"              	SHLD	.jf
                                ;						for (j=0; j<sizeof(hdosentry); j++)
  0D90'   21 0000               	LXI	H,0
  0D93'   22 081D"              	SHLD	.bf
  0D96'   2A 081D"              .ag:	LHLD	.bf
  0D99'   11 7FE9               	LXI	D,32745
  0D9C'   CD 0000*              	CALL	c.tst##
  0D9F'   DA 0DCA'              	JC	.zf
  0DA2'   C3 0DB0'              	JMP	.bg
  0DA5'   2A 081D"              .yf:	LHLD	.bf
  0DA8'   23                    	INX	H
  0DA9'   22 081D"              	SHLD	.bf
  0DAC'   2B                    	DCX	H
  0DAD'   C3 0D96'              	JMP	.ag
  0DB0'                         .bg:	DS	0
                                ;							*dst++ = *src++;
	MACRO-80 3.35	22-Mar-19	PAGE	1-45


  0DB0'   2A 082D"              	LHLD	.jf
  0DB3'   23                    	INX	H
  0DB4'   22 082D"              	SHLD	.jf
  0DB7'   2B                    	DCX	H
  0DB8'   E5                    	PUSH	H
  0DB9'   2A 082B"              	LHLD	.if
  0DBC'   23                    	INX	H
  0DBD'   22 082B"              	SHLD	.if
  0DC0'   2B                    	DCX	H
  0DC1'   CD 0000*              	CALL	g.##
  0DC4'   D1                    	POP	D
  0DC5'   7D                    	MOV	A,L
  0DC6'   12                    	STAX	D
  0DC7'   C3 0DA5'              	JMP	.yf
  0DCA'                         .zf:	DS	0
                                ;								
                                ;						/* trace cluster chain to compute cluster count */
                                ;						clu = hdosentry.fgn & 0xFF;
  0DCA'   21 0015               	LXI	H,21
  0DCD'   39                    	DAD	SP
  0DCE'   E5                    	PUSH	H
  0DCF'   3A 001D"              	LDA	hdosent+16
  0DD2'   CD 0000*              	CALL	c.sxt##
  0DD5'   26 00                 	MVI	H,0
  0DD7'   CD 0000*              	CALL	q.##
                                ;						cc = 0;
  0DDA'   21 0000               	LXI	H,0
  0DDD'   22 081F"              	SHLD	.cf
                                ;						do {
  0DE0'                         .eg:	DS	0
                                ;							++cc;
  0DE0'   2A 081F"              	LHLD	.cf
  0DE3'   23                    	INX	H
  0DE4'   22 081F"              	SHLD	.cf
                                ;							clu = grt[clu] & 0xFF;
  0DE7'   21 0015               	LXI	H,21
  0DEA'   39                    	DAD	SP
  0DEB'   E5                    	PUSH	H
  0DEC'   2A 0043"              	LHLD	grt
  0DEF'   EB                    	XCHG
  0DF0'   21 0017               	LXI	H,23
  0DF3'   39                    	DAD	SP
  0DF4'   CD 0000*              	CALL	h.##
  0DF7'   19                    	DAD	D
  0DF8'   CD 0000*              	CALL	g.##
  0DFB'   26 00                 	MVI	H,0
  0DFD'   CD 0000*              	CALL	q.##
                                ;						} while (clu != 0);
  0E00'   21 0015               .cg:	LXI	H,21
  0E03'   39                    	DAD	SP
  0E04'   CD 0000*              	CALL	h.##
  0E07'   7C                    	MOV	A,H
  0E08'   B5                    	ORA	L
  0E09'   C2 0DE0'              	JNZ	.eg
  0E0C'                         .dg:	DS	0
                                ;							
	MACRO-80 3.35	22-Mar-19	PAGE	1-46


                                ;						/* allocate an entry for our directory */
                                ;						if ((entry = alloc(sizeof(fentry))) == 0) {
  0E0C'   21 0018               	LXI	H,24
  0E0F'   E5                    	PUSH	H
  0E10'   CD 0000*              	CALL	alloc
  0E13'   C1                    	POP	B
  0E14'   22 0829"              	SHLD	.hf
  0E17'   CD 0000*              	CALL	c.not##
  0E1A'   CA 0E2E'              	JZ	.fg
                                ;							printf("Error allocating directory entry!\n");
  0E1D'   21 0FAC'              	LXI	H,.ze+42
  0E20'   E5                    	PUSH	H
  0E21'   CD 0000*              	CALL	printf
  0E24'   C1                    	POP	B
                                ;							done = TRUE;
  0E25'   21 0001               	LXI	H,1
  0E28'   22 0823"              	SHLD	.ef
                                ;							break;
  0E2B'   C3 0F41'              	JMP	.tf
                                ;						}
                                ;						/* copy pertinent HDOS fields to our entry */
                                ;						for (j=0; j<8; j++)
  0E2E'   21 0000               .fg:	LXI	H,0
  0E31'   22 081D"              	SHLD	.bf
  0E34'   2A 081D"              .ig:	LHLD	.bf
  0E37'   11 7FF8               	LXI	D,32760
  0E3A'   CD 0000*              	CALL	c.tst##
  0E3D'   DA 0E67'              	JC	.hg
  0E40'   C3 0E4E'              	JMP	.jg
  0E43'   2A 081D"              .gg:	LHLD	.bf
  0E46'   23                    	INX	H
  0E47'   22 081D"              	SHLD	.bf
  0E4A'   2B                    	DCX	H
  0E4B'   C3 0E34'              	JMP	.ig
  0E4E'                         .jg:	DS	0
                                ;							entry->name[j] = hdosentry.hdname[j];
  0E4E'   2A 0829"              	LHLD	.hf
  0E51'   EB                    	XCHG
  0E52'   2A 081D"              	LHLD	.bf
  0E55'   19                    	DAD	D
  0E56'   E5                    	PUSH	H
  0E57'   2A 081D"              	LHLD	.bf
  0E5A'   11 000D"              	LXI	D,hdosent
  0E5D'   19                    	DAD	D
  0E5E'   CD 0000*              	CALL	g.##
  0E61'   D1                    	POP	D
  0E62'   7D                    	MOV	A,L
  0E63'   12                    	STAX	D
  0E64'   C3 0E43'              	JMP	.gg
  0E67'                         .hg:	DS	0
                                ;						entry->name[8] = NUL;
  0E67'   2A 0829"              	LHLD	.hf
  0E6A'   11 0008               	LXI	D,8
  0E6D'   19                    	DAD	D
  0E6E'   36 00                 	MVI	M,0
                                ;						for (j=0; j<3; j++)
	MACRO-80 3.35	22-Mar-19	PAGE	1-47


  0E70'   21 0000               	LXI	H,0
  0E73'   22 081D"              	SHLD	.bf
  0E76'   2A 081D"              .mg:	LHLD	.bf
  0E79'   11 7FFD               	LXI	D,32765
  0E7C'   CD 0000*              	CALL	c.tst##
  0E7F'   DA 0EAD'              	JC	.lg
  0E82'   C3 0E90'              	JMP	.ng
  0E85'   2A 081D"              .kg:	LHLD	.bf
  0E88'   23                    	INX	H
  0E89'   22 081D"              	SHLD	.bf
  0E8C'   2B                    	DCX	H
  0E8D'   C3 0E76'              	JMP	.mg
  0E90'                         .ng:	DS	0
                                ;							entry->ext[j] = hdosentry.hdext[j];
  0E90'   2A 0829"              	LHLD	.hf
  0E93'   11 0009               	LXI	D,9
  0E96'   19                    	DAD	D
  0E97'   EB                    	XCHG
  0E98'   2A 081D"              	LHLD	.bf
  0E9B'   19                    	DAD	D
  0E9C'   E5                    	PUSH	H
  0E9D'   2A 081D"              	LHLD	.bf
  0EA0'   11 0015"              	LXI	D,hdosent+8
  0EA3'   19                    	DAD	D
  0EA4'   CD 0000*              	CALL	g.##
  0EA7'   D1                    	POP	D
  0EA8'   7D                    	MOV	A,L
  0EA9'   12                    	STAX	D
  0EAA'   C3 0E85'              	JMP	.kg
  0EAD'                         .lg:	DS	0
                                ;						entry->ext[3] = NUL;
  0EAD'   2A 0829"              	LHLD	.hf
  0EB0'   11 0009               	LXI	D,9
  0EB3'   19                    	DAD	D
  0EB4'   23                    	INX	H
  0EB5'   23                    	INX	H
  0EB6'   23                    	INX	H
  0EB7'   36 00                 	MVI	M,0
                                ;						/* convert file size to bytes */
                                ;						entry->size = 256L * ((cc-1)*spg + hdosentry.lsi);
  0EB9'   2A 0829"              	LHLD	.hf
  0EBC'   11 000F               	LXI	D,15
  0EBF'   19                    	DAD	D
  0EC0'   E5                    	PUSH	H
  0EC1'   2A 081F"              	LHLD	.cf
  0EC4'   2B                    	DCX	H
  0EC5'   EB                    	XCHG
  0EC6'   21 0016               	LXI	H,22
  0EC9'   39                    	DAD	SP
  0ECA'   CD 0000*              	CALL	g.##
  0ECD'   CD 0000*              	CALL	c.mult##
  0ED0'   EB                    	XCHG
  0ED1'   3A 001F"              	LDA	hdosent+18
  0ED4'   CD 0000*              	CALL	c.sxt##
  0ED7'   19                    	DAD	D
  0ED8'   CD 0000*              	CALL	Hi.Bl##
	MACRO-80 3.35	22-Mar-19	PAGE	1-48


  0EDB'   C5                    	PUSH	B
  0EDC'   D5                    	PUSH	D
  0EDD'   11 0100               	LXI	D,256
  0EE0'   01 0000               	LXI	B,0
  0EE3'   CD 0000*              	CALL	L.mul##
  0EE6'   E1                    	POP	H
  0EE7'   CD 0000*              	CALL	slong.##
                                ;						
                                ;						/* convert HDOS date */
                                ;						/* (HDOS uses 1970 as base year, adjust down by 10 */
                                ;						entry->mdate = hdosentry.moddate - 0x1400;
  0EEA'   2A 0829"              	LHLD	.hf
  0EED'   11 0013               	LXI	D,19
  0EF0'   19                    	DAD	D
  0EF1'   E5                    	PUSH	H
  0EF2'   2A 0022"              	LHLD	hdosent+21
  0EF5'   11 EC00               	LXI	D,-5120
  0EF8'   19                    	DAD	D
  0EF9'   CD 0000*              	CALL	q.##
                                ;						
                                ;						/* clear other fields */
                                ;						entry->mtime = 0;
  0EFC'   2A 0829"              	LHLD	.hf
  0EFF'   11 0015               	LXI	D,21
  0F02'   19                    	DAD	D
  0F03'   36 00                 	MVI	M,0
  0F05'   23                    	INX	H
  0F06'   36 00                 	MVI	M,0
                                ;						entry->isdir = FALSE;
  0F08'   2A 0829"              	LHLD	.hf
  0F0B'   11 000D               	LXI	D,13
  0F0E'   19                    	DAD	D
  0F0F'   36 00                 	MVI	M,0
  0F11'   23                    	INX	H
  0F12'   36 00                 	MVI	M,0
                                ;						entry->tag = FALSE;
  0F14'   2A 0829"              	LHLD	.hf
  0F17'   11 0017               	LXI	D,23
  0F1A'   19                    	DAD	D
  0F1B'   36 00                 	MVI	M,0
                                ;						
                                ;						/* now store it in our directory list */
                                ;						direntry[nentries++] = entry;
  0F1D'   2A 04C5"              	LHLD	nentrie
  0F20'   23                    	INX	H
  0F21'   22 04C5"              	SHLD	nentrie
  0F24'   2B                    	DCX	H
  0F25'   29                    	DAD	H
  0F26'   11 02C5"              	LXI	D,direntr
  0F29'   19                    	DAD	D
  0F2A'   E5                    	PUSH	H
  0F2B'   2A 0829"              	LHLD	.hf
  0F2E'   CD 0000*              	CALL	q.##
                                ;					}
                                ;					else
  0F31'   C3 0F3E'              	JMP	.og
	MACRO-80 3.35	22-Mar-19	PAGE	1-49


  0F34'                         .xf:	DS	0
                                ;						/* deleted entry, skip to next */
                                ;						src += sizeof(hdosentry);
  0F34'   2A 082B"              	LHLD	.if
  0F37'   11 0017               	LXI	D,23
  0F3A'   19                    	DAD	D
  0F3B'   22 082B"              	SHLD	.if
  0F3E'                         .og:	DS	0
                                ;				}
  0F3E'   C3 0D6F'              	JMP	.sf
  0F41'                         .tf:	DS	0
                                ;			}
  0F41'                         .rf:	DS	0
                                ;		} while (!done);
  0F41'   2A 0823"              .nf:	LHLD	.ef
  0F44'   CD 0000*              	CALL	c.not##
  0F47'   C2 0D1D'              	JNZ	.pf
  0F4A'                         .of:	DS	0
                                ;		fclose(channel);
  0F4A'   2A 0821"              	LHLD	.df
  0F4D'   E5                    	PUSH	H
  0F4E'   CD 0000*              	CALL	fclose
  0F51'   C1                    	POP	B
                                ;	}
  0F52'                         .mf:	DS	0
                                ;	return rc;
  0F52'   2A 0827"              	LHLD	.gf
  0F55'   EB                    .pg:	XCHG
  0F56'   E1                    	POP	H
  0F57'   22 081B"              	SHLD	.af
  0F5A'   E1                    	POP	H
  0F5B'   22 081D"              	SHLD	.bf
  0F5E'   E1                    	POP	H
  0F5F'   22 081F"              	SHLD	.cf
  0F62'   E1                    	POP	H
  0F63'   22 0821"              	SHLD	.df
  0F66'   E1                    	POP	H
  0F67'   22 0823"              	SHLD	.ef
  0F6A'   E1                    	POP	H
  0F6B'   22 0825"              	SHLD	.ff
  0F6E'   E1                    	POP	H
  0F6F'   22 0827"              	SHLD	.gf
  0F72'   E1                    	POP	H
  0F73'   22 0829"              	SHLD	.hf
  0F76'   E1                    	POP	H
  0F77'   22 082B"              	SHLD	.if
  0F7A'   E1                    	POP	H
  0F7B'   22 082D"              	SHLD	.jf
  0F7E'   33                    	INX	SP
  0F7F'   C1                    	POP	B
  0F80'   EB                    	XCHG
  0F81'   C9                    	RET
                                ;}
  0F82'                         .ze:
  0F82'   3A 44 49 52           	DB	':DIRECT.SYS'
  0F86'   45 43 54 2E           
	MACRO-80 3.35	22-Mar-19	PAGE	1-50


  0F8A'   53 59 53              
  0F8D'   00                    	DB	0
  0F8E'   72 62                 	DB	'rb'
  0F90'   00                    	DB	0
  0F91'   45 72 72 6F           	DB	'Error - unable to open %s'
  0F95'   72 20 2D 20           
  0F99'   75 6E 61 62           
  0F9D'   6C 65 20 74           
  0FA1'   6F 20 6F 70           
  0FA5'   65 6E 20 25           
  0FA9'   73                    
  0FAA'   0A                    	DB	10
  0FAB'   00                    	DB	0
  0FAC'   45 72 72 6F           	DB	'Error allocating directory entry!'
  0FB0'   72 20 61 6C           
  0FB4'   6C 6F 63 61           
  0FB8'   74 69 6E 67           
  0FBC'   20 64 69 72           
  0FC0'   65 63 74 6F           
  0FC4'   72 79 20 65           
  0FC8'   6E 74 72 79           
  0FCC'   21                    
  0FCD'   0A                    	DB	10
  0FCE'   00                    	DB	0
                                ;/* vcp - copy from USB source file to system dest file
                                ;** return -1 on error
                                ;*/
                                ;vcp(source, dest)
                                
                                	PUBLIC	vcp
                                ;char *source, *dest;
                                ;{
                                ;	int nblocks, nbytes, i, channel, rc, done;
  0FCF'                         	DSEG
  0843"   0000                  .rg:	DW	0
  0845"   0000                  .sg:	DW	0
  0847"   0000                  .tg:	DW	0
  0849"   0000                  .ug:	DW	0
  084B"   0000                  .vg:	DW	0
  084D"   0000                  .wg:	DW	0
                                ;	static long filesize;
  084F"   0000 0000             .xg:	DW	0,0
                                ;	
                                ;	rc = 0;
  0853"                         	CSEG
                                
  0FCF'   2A 084D"              vcp:	LHLD	.wg
  0FD2'   E5                    	PUSH	H
  0FD3'   2A 084B"              	LHLD	.vg
  0FD6'   E5                    	PUSH	H
  0FD7'   2A 0849"              	LHLD	.ug
  0FDA'   E5                    	PUSH	H
  0FDB'   2A 0847"              	LHLD	.tg
  0FDE'   E5                    	PUSH	H
  0FDF'   2A 0845"              	LHLD	.sg
  0FE2'   E5                    	PUSH	H
	MACRO-80 3.35	22-Mar-19	PAGE	1-51


  0FE3'   2A 0843"              	LHLD	.rg
  0FE6'   E5                    	PUSH	H
  0FE7'   21 0000               	LXI	H,0
  0FEA'   22 084B"              	SHLD	.vg
                                ;	if (vdirf(source, &filesize) == -1) {
  0FED'   21 0010               	LXI	H,16
  0FF0'   39                    	DAD	SP
  0FF1'   CD 0000*              	CALL	h.##
  0FF4'   E5                    	PUSH	H
  0FF5'   21 084F"              	LXI	H,.xg
  0FF8'   E5                    	PUSH	H
  0FF9'   CD 0000*              	CALL	vdirf
  0FFC'   C1                    	POP	B
  0FFD'   C1                    	POP	B
  0FFE'   23                    	INX	H
  0FFF'   7C                    	MOV	A,H
  1000'   B5                    	ORA	L
  1001'   C2 101E'              	JNZ	.yg
                                ;		printf("Unable to open file %s\n", source);
  1004'   21 125A'              	LXI	H,.qg
  1007'   E5                    	PUSH	H
  1008'   21 0012               	LXI	H,18
  100B'   39                    	DAD	SP
  100C'   CD 0000*              	CALL	h.##
  100F'   E5                    	PUSH	H
  1010'   CD 0000*              	CALL	printf
  1013'   C1                    	POP	B
  1014'   C1                    	POP	B
                                ;		rc = -1;
  1015'   21 FFFF               	LXI	H,-1
  1018'   22 084B"              	SHLD	.vg
                                ;	}
                                ;	else {
  101B'   C3 123C'              	JMP	.zg
  101E'                         .yg:	DS	0
                                ;		/* assumes file size < 8 meg */
                                ;		nblocks = filesize/BUFFSIZE;
  101E'   21 084F"              	LXI	H,.xg
  1021'   CD 0000*              	CALL	llong.##
  1024'   C5                    	PUSH	B
  1025'   D5                    	PUSH	D
  1026'   21 0100               	LXI	H,256
  1029'   CD 0000*              	CALL	Hi.Bl##
  102C'   CD 0000*              	CALL	L.div##
  102F'   EB                    	XCHG
  1030'   22 0843"              	SHLD	.rg
                                ;		nbytes = filesize % BUFFSIZE;
  1033'   21 084F"              	LXI	H,.xg
  1036'   CD 0000*              	CALL	llong.##
  1039'   C5                    	PUSH	B
  103A'   D5                    	PUSH	D
  103B'   21 0100               	LXI	H,256
  103E'   CD 0000*              	CALL	Hi.Bl##
  1041'   CD 0000*              	CALL	L.mod##
  1044'   EB                    	XCHG
  1045'   22 0845"              	SHLD	.sg
	MACRO-80 3.35	22-Mar-19	PAGE	1-52


                                ;		
                                ;		/* open source file on flash device for read */
                                ;		if (vropen(source) == -1) {
  1048'   21 0010               	LXI	H,16
  104B'   39                    	DAD	SP
  104C'   CD 0000*              	CALL	h.##
  104F'   E5                    	PUSH	H
  1050'   CD 0000*              	CALL	vropen
  1053'   C1                    	POP	B
  1054'   23                    	INX	H
  1055'   7C                    	MOV	A,H
  1056'   B5                    	ORA	L
  1057'   C2 1074'              	JNZ	.ah
                                ;			printf("Unable to open source file %s\n", source);
  105A'   21 1272'              	LXI	H,.qg+24
  105D'   E5                    	PUSH	H
  105E'   21 0012               	LXI	H,18
  1061'   39                    	DAD	SP
  1062'   CD 0000*              	CALL	h.##
  1065'   E5                    	PUSH	H
  1066'   CD 0000*              	CALL	printf
  1069'   C1                    	POP	B
  106A'   C1                    	POP	B
                                ;			rc = -1;
  106B'   21 FFFF               	LXI	H,-1
  106E'   22 084B"              	SHLD	.vg
                                ;		}
                                ;		else if	((channel = fopen(dest, "wb")) == 0) {
  1071'   C3 123C'              	JMP	.bh
  1074'   21 000E               .ah:	LXI	H,14
  1077'   39                    	DAD	SP
  1078'   CD 0000*              	CALL	h.##
  107B'   E5                    	PUSH	H
  107C'   21 1291'              	LXI	H,.qg+55
  107F'   E5                    	PUSH	H
  1080'   CD 0000*              	CALL	fopen
  1083'   C1                    	POP	B
  1084'   C1                    	POP	B
  1085'   22 0849"              	SHLD	.ug
  1088'   CD 0000*              	CALL	c.not##
  108B'   CA 10A8'              	JZ	.ch
                                ;			printf("\nError opening destination file %s\n", dest);
  108E'   21 1294'              	LXI	H,.qg+58
  1091'   E5                    	PUSH	H
  1092'   21 0010               	LXI	H,16
  1095'   39                    	DAD	SP
  1096'   CD 0000*              	CALL	h.##
  1099'   E5                    	PUSH	H
  109A'   CD 0000*              	CALL	printf
  109D'   C1                    	POP	B
  109E'   C1                    	POP	B
                                ;			rc = -1;
  109F'   21 FFFF               	LXI	H,-1
  10A2'   22 084B"              	SHLD	.vg
                                ;		}
                                ;		else {
	MACRO-80 3.35	22-Mar-19	PAGE	1-53


  10A5'   C3 123C'              	JMP	.dh
  10A8'                         .ch:	DS	0
                                ;			printf("%s --> %s\n", source, dest);
  10A8'   21 12B8'              	LXI	H,.qg+94
  10AB'   E5                    	PUSH	H
  10AC'   21 0012               	LXI	H,18
  10AF'   39                    	DAD	SP
  10B0'   CD 0000*              	CALL	h.##
  10B3'   E5                    	PUSH	H
  10B4'   21 0012               	LXI	H,18
  10B7'   39                    	DAD	SP
  10B8'   CD 0000*              	CALL	h.##
  10BB'   E5                    	PUSH	H
  10BC'   CD 0000*              	CALL	printf
  10BF'   C1                    	POP	B
  10C0'   C1                    	POP	B
  10C1'   C1                    	POP	B
                                ;			/* copy one block at a time */
                                ;			for (done = FALSE, i=1; ((i<=nblocks) && (!done)); i++) {
  10C2'   21 0000               	LXI	H,0
  10C5'   22 084D"              	SHLD	.wg
  10C8'   21 0001               	LXI	H,1
  10CB'   22 0847"              	SHLD	.tg
  10CE'   2A 0843"              .gh:	LHLD	.rg
  10D1'   EB                    	XCHG
  10D2'   2A 0847"              	LHLD	.tg
  10D5'   CD 0000*              	CALL	c.ge##
  10D8'   CA 10E1'              	JZ	.hh
  10DB'   2A 084D"              	LHLD	.wg
  10DE'   CD 0000*              	CALL	c.not##
  10E1'   CD 0000*              .hh:	CALL	e.0##
  10E4'   CA 117E'              	JZ	.fh
  10E7'   C3 10F5'              	JMP	.ih
  10EA'   2A 0847"              .eh:	LHLD	.tg
  10ED'   23                    	INX	H
  10EE'   22 0847"              	SHLD	.tg
  10F1'   2B                    	DCX	H
  10F2'   C3 10CE'              	JMP	.gh
  10F5'                         .ih:	DS	0
                                ;				/* read a block from input file */
                                ;				if (vread(rwbuffer, BUFFSIZE) == -1) {
  10F5'   21 06C7"              	LXI	H,rwbuffe
  10F8'   E5                    	PUSH	H
  10F9'   21 0100               	LXI	H,256
  10FC'   E5                    	PUSH	H
  10FD'   CD 0000*              	CALL	vread
  1100'   C1                    	POP	B
  1101'   C1                    	POP	B
  1102'   23                    	INX	H
  1103'   7C                    	MOV	A,H
  1104'   B5                    	ORA	L
  1105'   C2 1124'              	JNZ	.jh
                                ;					printf("\nError reading block %d\n", i);
  1108'   21 12C3'              	LXI	H,.qg+105
  110B'   E5                    	PUSH	H
  110C'   2A 0847"              	LHLD	.tg
	MACRO-80 3.35	22-Mar-19	PAGE	1-54


  110F'   E5                    	PUSH	H
  1110'   CD 0000*              	CALL	printf
  1113'   C1                    	POP	B
  1114'   C1                    	POP	B
                                ;					done = TRUE;
  1115'   21 0001               	LXI	H,1
  1118'   22 084D"              	SHLD	.wg
                                ;					rc = -1;
  111B'   21 FFFF               	LXI	H,-1
  111E'   22 084B"              	SHLD	.vg
                                ;				}
                                ;				else {
  1121'   C3 117B'              	JMP	.kh
  1124'                         .jh:	DS	0
                                ;					if ((write(channel, rwbuffer, BUFFSIZE)) == -1) {
  1124'   2A 0849"              	LHLD	.ug
  1127'   E5                    	PUSH	H
  1128'   21 06C7"              	LXI	H,rwbuffe
  112B'   E5                    	PUSH	H
  112C'   21 0100               	LXI	H,256
  112F'   E5                    	PUSH	H
  1130'   CD 0000*              	CALL	write
  1133'   C1                    	POP	B
  1134'   C1                    	POP	B
  1135'   C1                    	POP	B
  1136'   23                    	INX	H
  1137'   CD 0000*              	CALL	c.not##
  113A'   CA 115A'              	JZ	.lh
                                ;						printf("\nError writing to %s\n", dest);
  113D'   21 12DC'              	LXI	H,.qg+130
  1140'   E5                    	PUSH	H
  1141'   21 0010               	LXI	H,16
  1144'   39                    	DAD	SP
  1145'   CD 0000*              	CALL	h.##
  1148'   E5                    	PUSH	H
  1149'   CD 0000*              	CALL	printf
  114C'   C1                    	POP	B
  114D'   C1                    	POP	B
                                ;						rc = -1;
  114E'   21 FFFF               	LXI	H,-1
  1151'   22 084B"              	SHLD	.vg
                                ;						done = TRUE;
  1154'   21 0001               	LXI	H,1
  1157'   22 084D"              	SHLD	.wg
                                ;					}
                                ;					/* show user we're working ... */
                                ;					putchar('.');
  115A'   21 002E               .lh:	LXI	H,46
  115D'   E5                    	PUSH	H
  115E'   CD 0000*              	CALL	putchar
  1161'   C1                    	POP	B
                                ;					if ((i%60) == 0)
  1162'   2A 0847"              	LHLD	.tg
  1165'   EB                    	XCHG
  1166'   21 003C               	LXI	H,60
  1169'   CD 0000*              	CALL	c.div##
	MACRO-80 3.35	22-Mar-19	PAGE	1-55


  116C'   EB                    	XCHG
  116D'   CD 0000*              	CALL	c.not##
  1170'   CA 117B'              	JZ	.mh
                                ;						printf("\n");
  1173'   21 1270'              	LXI	H,.qg+22
  1176'   E5                    	PUSH	H
  1177'   CD 0000*              	CALL	printf
  117A'   C1                    	POP	B
                                ;				}
  117B'                         .mh:	DS	0
  117B'                         .kh:	DS	0
                                ;			}
  117B'   C3 10EA'              	JMP	.eh
  117E'                         .fh:	DS	0
                                ;			/* NUL fill the buffer before last write */
                                ;			for (i=0; i<BUFFSIZE; i++)
  117E'   21 0000               	LXI	H,0
  1181'   22 0847"              	SHLD	.tg
  1184'   2A 0847"              .ph:	LHLD	.tg
  1187'   11 7F00               	LXI	D,32512
  118A'   CD 0000*              	CALL	c.tst##
  118D'   DA 11AA'              	JC	.oh
  1190'   C3 119E'              	JMP	.qh
  1193'   2A 0847"              .nh:	LHLD	.tg
  1196'   23                    	INX	H
  1197'   22 0847"              	SHLD	.tg
  119A'   2B                    	DCX	H
  119B'   C3 1184'              	JMP	.ph
  119E'                         .qh:	DS	0
                                ;				rwbuffer[i]=0;
  119E'   2A 0847"              	LHLD	.tg
  11A1'   11 06C7"              	LXI	D,rwbuffe
  11A4'   19                    	DAD	D
  11A5'   36 00                 	MVI	M,0
  11A7'   C3 1193'              	JMP	.nh
  11AA'                         .oh:	DS	0
                                ;	
                                ;			/* if any extra bytes process them ... */
                                ;			if ((nbytes > 0) && !done) {
  11AA'   2A 0845"              	LHLD	.sg
  11AD'   11 0000               	LXI	D,0
  11B0'   CD 0000*              	CALL	c.lt##
  11B3'   CA 11BC'              	JZ	.sh
  11B6'   2A 084D"              	LHLD	.wg
  11B9'   CD 0000*              	CALL	c.not##
  11BC'   CD 0000*              .sh:	CALL	e.0##
  11BF'   CA 1216'              	JZ	.rh
                                ;				/* read final remaining bytes */
                                ;				if (vread(rwbuffer, nbytes) == -1) {
  11C2'   21 06C7"              	LXI	H,rwbuffe
  11C5'   E5                    	PUSH	H
  11C6'   2A 0845"              	LHLD	.sg
  11C9'   E5                    	PUSH	H
  11CA'   CD 0000*              	CALL	vread
  11CD'   C1                    	POP	B
  11CE'   C1                    	POP	B
	MACRO-80 3.35	22-Mar-19	PAGE	1-56


  11CF'   23                    	INX	H
  11D0'   7C                    	MOV	A,H
  11D1'   B5                    	ORA	L
  11D2'   C2 11E6'              	JNZ	.th
                                ;					printf("\nError reading final block\n");
  11D5'   21 12F2'              	LXI	H,.qg+152
  11D8'   E5                    	PUSH	H
  11D9'   CD 0000*              	CALL	printf
  11DC'   C1                    	POP	B
                                ;					rc = -1;
  11DD'   21 FFFF               	LXI	H,-1
  11E0'   22 084B"              	SHLD	.vg
                                ;				}
                                ;				else if((write(channel, rwbuffer, BUFFSIZE)) == -1) {
  11E3'   C3 1216'              	JMP	.uh
  11E6'   2A 0849"              .th:	LHLD	.ug
  11E9'   E5                    	PUSH	H
  11EA'   21 06C7"              	LXI	H,rwbuffe
  11ED'   E5                    	PUSH	H
  11EE'   21 0100               	LXI	H,256
  11F1'   E5                    	PUSH	H
  11F2'   CD 0000*              	CALL	write
  11F5'   C1                    	POP	B
  11F6'   C1                    	POP	B
  11F7'   C1                    	POP	B
  11F8'   23                    	INX	H
  11F9'   CD 0000*              	CALL	c.not##
  11FC'   CA 1216'              	JZ	.vh
                                ;					printf("\nError writing to %s\n", dest);
  11FF'   21 12DC'              	LXI	H,.qg+130
  1202'   E5                    	PUSH	H
  1203'   21 0010               	LXI	H,16
  1206'   39                    	DAD	SP
  1207'   CD 0000*              	CALL	h.##
  120A'   E5                    	PUSH	H
  120B'   CD 0000*              	CALL	printf
  120E'   C1                    	POP	B
  120F'   C1                    	POP	B
                                ;					rc = -1;
  1210'   21 FFFF               	LXI	H,-1
  1213'   22 084B"              	SHLD	.vg
                                ;				}
                                ;			}	
  1216'                         .vh:	DS	0
  1216'                         .uh:	DS	0
                                ;			printf("\n%ld bytes\n", filesize);
  1216'   21 130E'              .rh:	LXI	H,.qg+180
  1219'   E5                    	PUSH	H
  121A'   21 084F"              	LXI	H,.xg
  121D'   CD 0000*              	CALL	llong.##
  1220'   C5                    	PUSH	B
  1221'   D5                    	PUSH	D
  1222'   CD 0000*              	CALL	printf
  1225'   C1                    	POP	B
  1226'   C1                    	POP	B
  1227'   C1                    	POP	B
	MACRO-80 3.35	22-Mar-19	PAGE	1-57


                                ;			/* important - close files! */
                                ;			fclose(channel);
  1228'   2A 0849"              	LHLD	.ug
  122B'   E5                    	PUSH	H
  122C'   CD 0000*              	CALL	fclose
  122F'   C1                    	POP	B
                                ;			vclose(source);
  1230'   21 0010               	LXI	H,16
  1233'   39                    	DAD	SP
  1234'   CD 0000*              	CALL	h.##
  1237'   E5                    	PUSH	H
  1238'   CD 0000*              	CALL	vclose
  123B'   C1                    	POP	B
                                ;		}
  123C'                         .dh:	DS	0
  123C'                         .bh:	DS	0
                                ;	}
  123C'                         .zg:	DS	0
                                ;	return rc;
  123C'   2A 084B"              	LHLD	.vg
  123F'   EB                    .wh:	XCHG
  1240'   E1                    	POP	H
  1241'   22 0843"              	SHLD	.rg
  1244'   E1                    	POP	H
  1245'   22 0845"              	SHLD	.sg
  1248'   E1                    	POP	H
  1249'   22 0847"              	SHLD	.tg
  124C'   E1                    	POP	H
  124D'   22 0849"              	SHLD	.ug
  1250'   E1                    	POP	H
  1251'   22 084B"              	SHLD	.vg
  1254'   E1                    	POP	H
  1255'   22 084D"              	SHLD	.wg
  1258'   EB                    	XCHG
  1259'   C9                    	RET
                                ;}
  125A'                         .qg:
  125A'   55 6E 61 62           	DB	'Unable to open file %s'
  125E'   6C 65 20 74           
  1262'   6F 20 6F 70           
  1266'   65 6E 20 66           
  126A'   69 6C 65 20           
  126E'   25 73                 
  1270'   0A                    	DB	10
  1271'   00                    	DB	0
  1272'   55 6E 61 62           	DB	'Unable to open source file %s'
  1276'   6C 65 20 74           
  127A'   6F 20 6F 70           
  127E'   65 6E 20 73           
  1282'   6F 75 72 63           
  1286'   65 20 66 69           
  128A'   6C 65 20 25           
  128E'   73                    
  128F'   0A                    	DB	10
  1290'   00                    	DB	0
  1291'   77 62                 	DB	'wb'
	MACRO-80 3.35	22-Mar-19	PAGE	1-58


  1293'   00                    	DB	0
  1294'   0A                    	DB	10
  1295'   45 72 72 6F           	DB	'Error opening destination file %s'
  1299'   72 20 6F 70           
  129D'   65 6E 69 6E           
  12A1'   67 20 64 65           
  12A5'   73 74 69 6E           
  12A9'   61 74 69 6F           
  12AD'   6E 20 66 69           
  12B1'   6C 65 20 25           
  12B5'   73                    
  12B6'   0A                    	DB	10
  12B7'   00                    	DB	0
  12B8'   25 73 20 2D           	DB	'%s --> %s'
  12BC'   2D 3E 20 25           
  12C0'   73                    
  12C1'   0A                    	DB	10
  12C2'   00                    	DB	0
  12C3'   0A                    	DB	10
  12C4'   45 72 72 6F           	DB	'Error reading block %d'
  12C8'   72 20 72 65           
  12CC'   61 64 69 6E           
  12D0'   67 20 62 6C           
  12D4'   6F 63 6B 20           
  12D8'   25 64                 
  12DA'   0A                    	DB	10
  12DB'   00                    	DB	0
  12DC'   0A                    	DB	10
  12DD'   45 72 72 6F           	DB	'Error writing to %s'
  12E1'   72 20 77 72           
  12E5'   69 74 69 6E           
  12E9'   67 20 74 6F           
  12ED'   20 25 73              
  12F0'   0A                    	DB	10
  12F1'   00                    	DB	0
  12F2'   0A                    	DB	10
  12F3'   45 72 72 6F           	DB	'Error reading final block'
  12F7'   72 20 72 65           
  12FB'   61 64 69 6E           
  12FF'   67 20 66 69           
  1303'   6E 61 6C 20           
  1307'   62 6C 6F 63           
  130B'   6B                    
  130C'   0A                    	DB	10
  130D'   00                    	DB	0
  130E'   0A                    	DB	10
  130F'   25 6C 64 20           	DB	'%ld bytes'
  1313'   62 79 74 65           
  1317'   73                    
  1318'   0A                    	DB	10
  1319'   00                    	DB	0
                                ;/* listmatch - print device directory listing from
                                ;** stored array.  Lists only entries with the "tag"
                                ;** field set to TRUE.  if the argument "brief" is TRUE
                                ;** then just do an abbreviated listing.
                                ;*/
	MACRO-80 3.35	22-Mar-19	PAGE	1-59


                                ;listmatch(brief)
                                
                                	PUBLIC	listmat
                                ;int brief;
                                ;{
                                ;	int i, j, n;
  131A'                         	DSEG
  0853"   0000                  .yh:	DW	0
  0855"   0000                  .zh:	DW	0
  0857"   0000                  .ai:	DW	0
                                ;	char *c;
  0859"   0000                  .bi:	DW	0
                                ;	static char fsize[15];
  085B"   00 00 00 00           .ci:	DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  085F"   00 00 00 00           
  0863"   00 00 00 00           
  0867"   00 00 00              
                                ;	
                                ;	n = 0;
  086A"                         	CSEG
                                
  131A'   2A 0859"              listmat:	LHLD	.bi
  131D'   E5                    	PUSH	H
  131E'   2A 0857"              	LHLD	.ai
  1321'   E5                    	PUSH	H
  1322'   2A 0855"              	LHLD	.zh
  1325'   E5                    	PUSH	H
  1326'   2A 0853"              	LHLD	.yh
  1329'   E5                    	PUSH	H
  132A'   21 0000               	LXI	H,0
  132D'   22 0857"              	SHLD	.ai
                                ;	for (i=0; i<nentries; i++) {
  1330'   21 0000               	LXI	H,0
  1333'   22 0853"              	SHLD	.yh
  1336'   2A 04C5"              .fi:	LHLD	nentrie
  1339'   EB                    	XCHG
  133A'   2A 0853"              	LHLD	.yh
  133D'   CD 0000*              	CALL	c.gt##
  1340'   CA 1474'              	JZ	.ei
  1343'   C3 1351'              	JMP	.gi
  1346'   2A 0853"              .di:	LHLD	.yh
  1349'   23                    	INX	H
  134A'   22 0853"              	SHLD	.yh
  134D'   2B                    	DCX	H
  134E'   C3 1336'              	JMP	.fi
  1351'                         .gi:	DS	0
                                ;		if(direntry[i]->tag) {
  1351'   2A 0853"              	LHLD	.yh
  1354'   29                    	DAD	H
  1355'   11 02C5"              	LXI	D,direntr
  1358'   19                    	DAD	D
  1359'   CD 0000*              	CALL	h.##
  135C'   11 0017               	LXI	D,23
  135F'   19                    	DAD	D
  1360'   7E                    	MOV	A,M
  1361'   B7                    	ORA	A
	MACRO-80 3.35	22-Mar-19	PAGE	1-60


  1362'   CA 1471'              	JZ	.hi
                                ;			++n;
  1365'   2A 0857"              	LHLD	.ai
  1368'   23                    	INX	H
  1369'   22 0857"              	SHLD	.ai
                                ;			printf("%-8s", direntry[i]->name);
  136C'   21 1492'              	LXI	H,.xh
  136F'   E5                    	PUSH	H
  1370'   2A 0853"              	LHLD	.yh
  1373'   29                    	DAD	H
  1374'   11 02C5"              	LXI	D,direntr
  1377'   19                    	DAD	D
  1378'   CD 0000*              	CALL	h.##
  137B'   E5                    	PUSH	H
  137C'   CD 0000*              	CALL	printf
  137F'   C1                    	POP	B
  1380'   C1                    	POP	B
                                ;			if (direntry[i]->isdir)
  1381'   2A 0853"              	LHLD	.yh
  1384'   29                    	DAD	H
  1385'   11 02C5"              	LXI	D,direntr
  1388'   19                    	DAD	D
  1389'   CD 0000*              	CALL	h.##
  138C'   11 000D               	LXI	D,13
  138F'   19                    	DAD	D
  1390'   CD 0000*              	CALL	h.##
  1393'   7C                    	MOV	A,H
  1394'   B5                    	ORA	L
  1395'   CA 13A3'              	JZ	.ii
                                ;				printf(" <DIR>  ");
  1398'   21 1497'              	LXI	H,.xh+5
  139B'   E5                    	PUSH	H
  139C'   CD 0000*              	CALL	printf
  139F'   C1                    	POP	B
                                ;			else {
  13A0'   C3 13C4'              	JMP	.ji
  13A3'                         .ii:	DS	0
                                ;				putchar('.');
  13A3'   21 002E               	LXI	H,46
  13A6'   E5                    	PUSH	H
  13A7'   CD 0000*              	CALL	putchar
  13AA'   C1                    	POP	B
                                ;				printf("%-3s    ", direntry[i]->ext);
  13AB'   21 14A0'              	LXI	H,.xh+14
  13AE'   E5                    	PUSH	H
  13AF'   2A 0853"              	LHLD	.yh
  13B2'   29                    	DAD	H
  13B3'   11 02C5"              	LXI	D,direntr
  13B6'   19                    	DAD	D
  13B7'   CD 0000*              	CALL	h.##
  13BA'   11 0009               	LXI	D,9
  13BD'   19                    	DAD	D
  13BE'   E5                    	PUSH	H
  13BF'   CD 0000*              	CALL	printf
  13C2'   C1                    	POP	B
  13C3'   C1                    	POP	B
	MACRO-80 3.35	22-Mar-19	PAGE	1-61


                                ;			}
  13C4'                         .ji:	DS	0
                                ;			if (brief) {
  13C4'   21 000A               	LXI	H,10
  13C7'   39                    	DAD	SP
  13C8'   CD 0000*              	CALL	h.##
  13CB'   7C                    	MOV	A,H
  13CC'   B5                    	ORA	L
  13CD'   CA 13EC'              	JZ	.ki
                                ;				/* brief form */
                                ;				if ((n % 4) == 0)
  13D0'   2A 0857"              	LHLD	.ai
  13D3'   EB                    	XCHG
  13D4'   21 0004               	LXI	H,4
  13D7'   CD 0000*              	CALL	c.div##
  13DA'   EB                    	XCHG
  13DB'   CD 0000*              	CALL	c.not##
  13DE'   CA 13E9'              	JZ	.li
                                ;					printf("\n");
  13E1'   21 14A9'              	LXI	H,.xh+23
  13E4'   E5                    	PUSH	H
  13E5'   CD 0000*              	CALL	printf
  13E8'   C1                    	POP	B
                                ;			}
  13E9'                         .li:	DS	0
                                ;			else {
  13E9'   C3 1471'              	JMP	.mi
  13EC'                         .ki:	DS	0
                                ;				/* long form - print size */
                                ;				commafmt(direntry[i]->size, fsize, 15);
  13EC'   2A 0853"              	LHLD	.yh
  13EF'   29                    	DAD	H
  13F0'   11 02C5"              	LXI	D,direntr
  13F3'   19                    	DAD	D
  13F4'   CD 0000*              	CALL	h.##
  13F7'   11 000F               	LXI	D,15
  13FA'   19                    	DAD	D
  13FB'   CD 0000*              	CALL	llong.##
  13FE'   C5                    	PUSH	B
  13FF'   D5                    	PUSH	D
  1400'   21 085B"              	LXI	H,.ci
  1403'   E5                    	PUSH	H
  1404'   21 000F               	LXI	H,15
  1407'   E5                    	PUSH	H
  1408'   CD 0000*              	CALL	commafm
  140B'   C1                    	POP	B
  140C'   C1                    	POP	B
  140D'   C1                    	POP	B
  140E'   C1                    	POP	B
                                ;				printf("%s  ", fsize);
  140F'   21 14AB'              	LXI	H,.xh+25
  1412'   E5                    	PUSH	H
  1413'   21 085B"              	LXI	H,.ci
  1416'   E5                    	PUSH	H
  1417'   CD 0000*              	CALL	printf
  141A'   C1                    	POP	B
	MACRO-80 3.35	22-Mar-19	PAGE	1-62


  141B'   C1                    	POP	B
                                ;				/* print date and (if non zero) time */
                                ;				prndate(direntry[i]->mdate);
  141C'   2A 0853"              	LHLD	.yh
  141F'   29                    	DAD	H
  1420'   11 02C5"              	LXI	D,direntr
  1423'   19                    	DAD	D
  1424'   CD 0000*              	CALL	h.##
  1427'   11 0013               	LXI	D,19
  142A'   19                    	DAD	D
  142B'   CD 0000*              	CALL	h.##
  142E'   E5                    	PUSH	H
  142F'   CD 0000*              	CALL	prndate
  1432'   C1                    	POP	B
                                ;				if (direntry[i]->mtime) {
  1433'   2A 0853"              	LHLD	.yh
  1436'   29                    	DAD	H
  1437'   11 02C5"              	LXI	D,direntr
  143A'   19                    	DAD	D
  143B'   CD 0000*              	CALL	h.##
  143E'   11 0015               	LXI	D,21
  1441'   19                    	DAD	D
  1442'   CD 0000*              	CALL	h.##
  1445'   7C                    	MOV	A,H
  1446'   B5                    	ORA	L
  1447'   CA 1469'              	JZ	.ni
                                ;					printf("  ");
  144A'   21 149D'              	LXI	H,.xh+11
  144D'   E5                    	PUSH	H
  144E'   CD 0000*              	CALL	printf
  1451'   C1                    	POP	B
                                ;					prntime(direntry[i]->mtime);
  1452'   2A 0853"              	LHLD	.yh
  1455'   29                    	DAD	H
  1456'   11 02C5"              	LXI	D,direntr
  1459'   19                    	DAD	D
  145A'   CD 0000*              	CALL	h.##
  145D'   11 0015               	LXI	D,21
  1460'   19                    	DAD	D
  1461'   CD 0000*              	CALL	h.##
  1464'   E5                    	PUSH	H
  1465'   CD 0000*              	CALL	prntime
  1468'   C1                    	POP	B
                                ;				}
                                ;				printf("\n");
  1469'   21 14A9'              .ni:	LXI	H,.xh+23
  146C'   E5                    	PUSH	H
  146D'   CD 0000*              	CALL	printf
  1470'   C1                    	POP	B
                                ;			}
  1471'                         .mi:	DS	0
                                ;		}
                                ;	}
  1471'   C3 1346'              .hi:	JMP	.di
  1474'                         .ei:	DS	0
                                ;	printf("\n%d Files\n", n);
	MACRO-80 3.35	22-Mar-19	PAGE	1-63


  1474'   21 14B0'              	LXI	H,.xh+30
  1477'   E5                    	PUSH	H
  1478'   2A 0857"              	LHLD	.ai
  147B'   E5                    	PUSH	H
  147C'   CD 0000*              	CALL	printf
  147F'   C1                    	POP	B
  1480'   C1                    	POP	B
                                ;}
  1481'   E1                    .oi:	POP	H
  1482'   22 0853"              	SHLD	.yh
  1485'   E1                    	POP	H
  1486'   22 0855"              	SHLD	.zh
  1489'   E1                    	POP	H
  148A'   22 0857"              	SHLD	.ai
  148D'   E1                    	POP	H
  148E'   22 0859"              	SHLD	.bi
  1491'   C9                    	RET
  1492'                         .xh:
  1492'   25 2D 38 73           	DB	'%-8s'
  1496'   00                    	DB	0
  1497'   20 3C 44 49           	DB	' <DIR>  '
  149B'   52 3E 20 20           
  149F'   00                    	DB	0
  14A0'   25 2D 33 73           	DB	'%-3s    '
  14A4'   20 20 20 20           
  14A8'   00                    	DB	0
  14A9'   0A                    	DB	10
  14AA'   00                    	DB	0
  14AB'   25 73 20 20           	DB	'%s  '
  14AF'   00                    	DB	0
  14B0'   0A                    	DB	10
  14B1'   25 64 20 46           	DB	'%d Files'
  14B5'   69 6C 65 73           
  14B9'   0A                    	DB	10
  14BA'   00                    	DB	0
                                ;/* copyfiles - copy files from source device to
                                ;** destination.  Copies only entries with the "tag"
                                ;** field set to TRUE.
                                ;**
                                ;** NOTE to be added: If destination is a single unique
                                ;** file then just concatenate all files to that, otherwise
                                ;** open source and destination files in pairs.
                                ;*/
                                ;copyfiles()
                                ;{
                                
                                	PUBLIC	copyfil
                                ;	int i, ncp;
  14BB'                         	DSEG
  086A"   0000                  .qi:	DW	0
  086C"   0000                  .ri:	DW	0
                                ;	static char fullname[20];
  086E"   00 00 00 00           .si:	DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  0872"   00 00 00 00           
  0876"   00 00 00 00           
  087A"   00 00 00 00           
	MACRO-80 3.35	22-Mar-19	PAGE	1-64


  087E"   00 00 00 00           	DB	0,0,0,0
                                ;	
                                ;	/* check if destination is single file or wildcard filespec */
                                ;/*	if ((index(dstspec.fname, "*") != -1) || (index(dstspec.fname, "?") != -1) ||
                                ;		(index(dstspec.fext, "*")  != -1) || (index(dstspec.fext, "?")  != -1))
                                ;		onedest = FALSE;
                                ;	else
                                ;		onedest = TRUE;
                                ;	
                                ;	if (onedest)
                                ;		printf("Concatenating to single file %s.%s\n", dstspec.fname,dstspec.fext);
                                ;*/
                                ;	
                                ;	/* loop over entries and perform copy */
                                ;	for (i=0, ncp=0; i<nentries; i++) {
  0882"                         	CSEG
                                
  14BB'   2A 086C"              copyfil:	LHLD	.ri
  14BE'   E5                    	PUSH	H
  14BF'   2A 086A"              	LHLD	.qi
  14C2'   E5                    	PUSH	H
  14C3'   21 0000               	LXI	H,0
  14C6'   22 086A"              	SHLD	.qi
  14C9'   21 0000               	LXI	H,0
  14CC'   22 086C"              	SHLD	.ri
  14CF'   2A 04C5"              .vi:	LHLD	nentrie
  14D2'   EB                    	XCHG
  14D3'   2A 086A"              	LHLD	.qi
  14D6'   CD 0000*              	CALL	c.gt##
  14D9'   CA 162F'              	JZ	.ui
  14DC'   C3 14EA'              	JMP	.wi
  14DF'   2A 086A"              .ti:	LHLD	.qi
  14E2'   23                    	INX	H
  14E3'   22 086A"              	SHLD	.qi
  14E6'   2B                    	DCX	H
  14E7'   C3 14CF'              	JMP	.vi
  14EA'                         .wi:	DS	0
                                ;		/* copy tagged files (but not directories!) */
                                ;		if(direntry[i]->tag && !direntry[i]->isdir) {
  14EA'   2A 086A"              	LHLD	.qi
  14ED'   29                    	DAD	H
  14EE'   11 02C5"              	LXI	D,direntr
  14F1'   19                    	DAD	D
  14F2'   CD 0000*              	CALL	h.##
  14F5'   11 0017               	LXI	D,23
  14F8'   19                    	DAD	D
  14F9'   CD 0000*              	CALL	g.##
  14FC'   7C                    	MOV	A,H
  14FD'   B5                    	ORA	L
  14FE'   CA 1516'              	JZ	.yi
  1501'   2A 086A"              	LHLD	.qi
  1504'   29                    	DAD	H
  1505'   11 02C5"              	LXI	D,direntr
  1508'   19                    	DAD	D
  1509'   CD 0000*              	CALL	h.##
  150C'   11 000D               	LXI	D,13
	MACRO-80 3.35	22-Mar-19	PAGE	1-65


  150F'   19                    	DAD	D
  1510'   CD 0000*              	CALL	h.##
  1513'   CD 0000*              	CALL	c.not##
  1516'   CD 0000*              .yi:	CALL	e.0##
  1519'   CA 162C'              	JZ	.xi
                                ;			/* get current time & date */
                                ;			gettd(&mydate);
  151C'   21 003C"              	LXI	H,mydate
  151F'   E5                    	PUSH	H
  1520'   CD 0150'              	CALL	gettd
  1523'   C1                    	POP	B
                                ;			dirstr(i, srcfname);
  1524'   2A 086A"              	LHLD	.qi
  1527'   E5                    	PUSH	H
  1528'   21 00A8"              	LXI	H,srcfnam
  152B'   E5                    	PUSH	H
  152C'   CD 0C0D'              	CALL	dirstr
  152F'   C1                    	POP	B
  1530'   C1                    	POP	B
                                ;/*			if (onedest)
                                ;				printf("--> %s:%s\n", srcdev, srcfname);
                                ;			else  */
                                ;			if ((srctype == STORD) && (dsttype == USBD)) {
  1531'   2A 00BF"              	LHLD	srctype
  1534'   2B                    	DCX	H
  1535'   CD 0000*              	CALL	c.not##
  1538'   CA 1544'              	JZ	.aj
  153B'   2A 00C1"              	LHLD	dsttype
  153E'   2B                    	DCX	H
  153F'   2B                    	DCX	H
  1540'   2B                    	DCX	H
  1541'   CD 0000*              	CALL	c.not##
  1544'   CD 0000*              .aj:	CALL	e.0##
  1547'   CA 15B0'              	JZ	.zi
                                ;				fullname[0] = NUL;
  154A'   21 0000               	LXI	H,0
  154D'   7D                    	MOV	A,L
  154E'   32 086E"              	STA	.si
                                ;				strcat(fullname, srcdev);
  1551'   21 086E"              	LXI	H,.si
  1554'   E5                    	PUSH	H
  1555'   21 00B7"              	LXI	H,srcdev
  1558'   E5                    	PUSH	H
  1559'   CD 0000*              	CALL	strcat
  155C'   C1                    	POP	B
  155D'   C1                    	POP	B
                                ;				strcat(fullname,":");
  155E'   21 086E"              	LXI	H,.si
  1561'   E5                    	PUSH	H
  1562'   21 1645'              	LXI	H,.pi
  1565'   E5                    	PUSH	H
  1566'   CD 0000*              	CALL	strcat
  1569'   C1                    	POP	B
  156A'   C1                    	POP	B
                                ;				strcat(fullname, srcfname);
  156B'   21 086E"              	LXI	H,.si
	MACRO-80 3.35	22-Mar-19	PAGE	1-66


  156E'   E5                    	PUSH	H
  156F'   21 00A8"              	LXI	H,srcfnam
  1572'   E5                    	PUSH	H
  1573'   CD 0000*              	CALL	strcat
  1576'   C1                    	POP	B
  1577'   C1                    	POP	B
                                ;				dstexpand(direntry[i], &dstspec, dstfname);
  1578'   2A 086A"              	LHLD	.qi
  157B'   29                    	DAD	H
  157C'   11 02C5"              	LXI	D,direntr
  157F'   19                    	DAD	D
  1580'   CD 0000*              	CALL	h.##
  1583'   E5                    	PUSH	H
  1584'   21 0000"              	LXI	H,dstspec
  1587'   E5                    	PUSH	H
  1588'   21 0099"              	LXI	H,dstfnam
  158B'   E5                    	PUSH	H
  158C'   CD 050D'              	CALL	dstexpa
  158F'   C1                    	POP	B
  1590'   C1                    	POP	B
  1591'   C1                    	POP	B
                                ;				if ((vcput(fullname, dstfname)) != -1);
  1592'   21 086E"              	LXI	H,.si
  1595'   E5                    	PUSH	H
  1596'   21 0099"              	LXI	H,dstfnam
  1599'   E5                    	PUSH	H
  159A'   CD 09E7'              	CALL	vcput
  159D'   C1                    	POP	B
  159E'   C1                    	POP	B
  159F'   23                    	INX	H
  15A0'   CD 0000*              	CALL	e.0##
  15A3'   CA 15A6'              	JZ	.bj
                                ;					++ncp;
  15A6'   2A 086C"              .bj:	LHLD	.ri
  15A9'   23                    	INX	H
  15AA'   22 086C"              	SHLD	.ri
                                ;			}
                                ;			else if ((srctype == USBD) && (dsttype == STORD)){
  15AD'   C3 162C'              	JMP	.cj
  15B0'   2A 00BF"              .zi:	LHLD	srctype
  15B3'   2B                    	DCX	H
  15B4'   2B                    	DCX	H
  15B5'   2B                    	DCX	H
  15B6'   CD 0000*              	CALL	c.not##
  15B9'   CA 15C3'              	JZ	.ej
  15BC'   2A 00C1"              	LHLD	dsttype
  15BF'   2B                    	DCX	H
  15C0'   CD 0000*              	CALL	c.not##
  15C3'   CD 0000*              .ej:	CALL	e.0##
  15C6'   CA 162C'              	JZ	.dj
                                ;				fullname[0] = NUL;
  15C9'   21 0000               	LXI	H,0
  15CC'   7D                    	MOV	A,L
  15CD'   32 086E"              	STA	.si
                                ;				strcat(fullname, dstdev);
  15D0'   21 086E"              	LXI	H,.si
	MACRO-80 3.35	22-Mar-19	PAGE	1-67


  15D3'   E5                    	PUSH	H
  15D4'   21 00BB"              	LXI	H,dstdev
  15D7'   E5                    	PUSH	H
  15D8'   CD 0000*              	CALL	strcat
  15DB'   C1                    	POP	B
  15DC'   C1                    	POP	B
                                ;				strcat(fullname,":");
  15DD'   21 086E"              	LXI	H,.si
  15E0'   E5                    	PUSH	H
  15E1'   21 1645'              	LXI	H,.pi
  15E4'   E5                    	PUSH	H
  15E5'   CD 0000*              	CALL	strcat
  15E8'   C1                    	POP	B
  15E9'   C1                    	POP	B
                                ;				dstexpand(direntry[i], &dstspec, dstfname);
  15EA'   2A 086A"              	LHLD	.qi
  15ED'   29                    	DAD	H
  15EE'   11 02C5"              	LXI	D,direntr
  15F1'   19                    	DAD	D
  15F2'   CD 0000*              	CALL	h.##
  15F5'   E5                    	PUSH	H
  15F6'   21 0000"              	LXI	H,dstspec
  15F9'   E5                    	PUSH	H
  15FA'   21 0099"              	LXI	H,dstfnam
  15FD'   E5                    	PUSH	H
  15FE'   CD 050D'              	CALL	dstexpa
  1601'   C1                    	POP	B
  1602'   C1                    	POP	B
  1603'   C1                    	POP	B
                                ;				strcat(fullname, dstfname);
  1604'   21 086E"              	LXI	H,.si
  1607'   E5                    	PUSH	H
  1608'   21 0099"              	LXI	H,dstfnam
  160B'   E5                    	PUSH	H
  160C'   CD 0000*              	CALL	strcat
  160F'   C1                    	POP	B
  1610'   C1                    	POP	B
                                ;				if ((vcp(srcfname, fullname)) != -1)
  1611'   21 00A8"              	LXI	H,srcfnam
  1614'   E5                    	PUSH	H
  1615'   21 086E"              	LXI	H,.si
  1618'   E5                    	PUSH	H
  1619'   CD 0FCF'              	CALL	vcp
  161C'   C1                    	POP	B
  161D'   C1                    	POP	B
  161E'   23                    	INX	H
  161F'   CD 0000*              	CALL	e.0##
  1622'   CA 162C'              	JZ	.fj
                                ;					++ncp;
  1625'   2A 086C"              	LHLD	.ri
  1628'   23                    	INX	H
  1629'   22 086C"              	SHLD	.ri
                                ;			}
  162C'                         .fj:	DS	0
                                ;		}
  162C'                         .dj:	DS	0
	MACRO-80 3.35	22-Mar-19	PAGE	1-68


  162C'                         .cj:	DS	0
                                ;	}
  162C'   C3 14DF'              .xi:	JMP	.ti
  162F'                         .ui:	DS	0
                                ;	printf("\n%d Files Copied\n", ncp);
  162F'   21 1647'              	LXI	H,.pi+2
  1632'   E5                    	PUSH	H
  1633'   2A 086C"              	LHLD	.ri
  1636'   E5                    	PUSH	H
  1637'   CD 0000*              	CALL	printf
  163A'   C1                    	POP	B
  163B'   C1                    	POP	B
                                ;}
  163C'   E1                    .gj:	POP	H
  163D'   22 086A"              	SHLD	.qi
  1640'   E1                    	POP	H
  1641'   22 086C"              	SHLD	.ri
  1644'   C9                    	RET
  1645'                         .pi:
  1645'   3A                    	DB	':'
  1646'   00                    	DB	0
  1647'   0A                    	DB	10
  1648'   25 64 20 46           	DB	'%d Files Copied'
  164C'   69 6C 65 73           
  1650'   20 43 6F 70           
  1654'   69 65 64              
  1657'   0A                    	DB	10
  1658'   00                    	DB	0
                                ;/* parsefs - parse a string into a file spec data structure
                                ;**
                                ;** s is of the form xxx:yyyyyyyy.zzz where xxx is a 
                                ;** device specification and yyyyyyyy.zzz is a standard
                                ;** "8.3" file name specification.  '*' wild cards are 
                                ;** expanded.  The device is returned in dev while the
                                ;** file name is returned in sfs.
                                ;**
                                ;*/
                                ;parsefs(sfs, dev, s)
                                
                                	PUBLIC	parsefs
                                ;struct fspec *sfs;
                                ;char *dev, *s;
                                ;{
                                ;	int i, iscan;
  1659'                         	DSEG
  0882"   0000                  .ij:	DW	0
  0884"   0000                  .jj:	DW	0
                                ;	
                                ;	/* first zero the contents */
                                ;	for (i=0; i<9; i++)
  0886"                         	CSEG
                                
  1659'   2A 0884"              parsefs:	LHLD	.jj
  165C'   E5                    	PUSH	H
  165D'   2A 0882"              	LHLD	.ij
  1660'   E5                    	PUSH	H
	MACRO-80 3.35	22-Mar-19	PAGE	1-69


  1661'   21 0000               	LXI	H,0
  1664'   22 0882"              	SHLD	.ij
  1667'   2A 0882"              .mj:	LHLD	.ij
  166A'   11 7FF7               	LXI	D,32759
  166D'   CD 0000*              	CALL	c.tst##
  1670'   DA 1692'              	JC	.lj
  1673'   C3 1681'              	JMP	.nj
  1676'   2A 0882"              .kj:	LHLD	.ij
  1679'   23                    	INX	H
  167A'   22 0882"              	SHLD	.ij
  167D'   2B                    	DCX	H
  167E'   C3 1667'              	JMP	.mj
  1681'                         .nj:	DS	0
                                ;		sfs->fname[i] = NUL;
  1681'   21 000A               	LXI	H,10
  1684'   39                    	DAD	SP
  1685'   CD 0000*              	CALL	h.##
  1688'   EB                    	XCHG
  1689'   2A 0882"              	LHLD	.ij
  168C'   19                    	DAD	D
  168D'   36 00                 	MVI	M,0
  168F'   C3 1676'              	JMP	.kj
  1692'                         .lj:	DS	0
                                ;	for (i=0; i<4; i++)
  1692'   21 0000               	LXI	H,0
  1695'   22 0882"              	SHLD	.ij
  1698'   2A 0882"              .qj:	LHLD	.ij
  169B'   11 7FFC               	LXI	D,32764
  169E'   CD 0000*              	CALL	c.tst##
  16A1'   DA 16C7'              	JC	.pj
  16A4'   C3 16B2'              	JMP	.rj
  16A7'   2A 0882"              .oj:	LHLD	.ij
  16AA'   23                    	INX	H
  16AB'   22 0882"              	SHLD	.ij
  16AE'   2B                    	DCX	H
  16AF'   C3 1698'              	JMP	.qj
  16B2'                         .rj:	DS	0
                                ;		sfs->fext[i] = NUL;
  16B2'   21 000A               	LXI	H,10
  16B5'   39                    	DAD	SP
  16B6'   CD 0000*              	CALL	h.##
  16B9'   11 0009               	LXI	D,9
  16BC'   19                    	DAD	D
  16BD'   EB                    	XCHG
  16BE'   2A 0882"              	LHLD	.ij
  16C1'   19                    	DAD	D
  16C2'   36 00                 	MVI	M,0
  16C4'   C3 16A7'              	JMP	.oj
  16C7'                         .pj:	DS	0
                                ;	
                                ;	/* scan for source drive specification and save it */
                                ;	iscan = index(s, ":");
  16C7'   21 0006               	LXI	H,6
  16CA'   39                    	DAD	SP
  16CB'   CD 0000*              	CALL	h.##
  16CE'   E5                    	PUSH	H
	MACRO-80 3.35	22-Mar-19	PAGE	1-70


  16CF'   21 17FF'              	LXI	H,.hj
  16D2'   E5                    	PUSH	H
  16D3'   CD 0000*              	CALL	index
  16D6'   C1                    	POP	B
  16D7'   C1                    	POP	B
  16D8'   22 0884"              	SHLD	.jj
                                ;	if (iscan != -1) {
  16DB'   2A 0884"              	LHLD	.jj
  16DE'   23                    	INX	H
  16DF'   7C                    	MOV	A,H
  16E0'   B5                    	ORA	L
  16E1'   CA 172A'              	JZ	.sj
                                ;		s[iscan] = NUL;
  16E4'   21 0006               	LXI	H,6
  16E7'   39                    	DAD	SP
  16E8'   CD 0000*              	CALL	h.##
  16EB'   EB                    	XCHG
  16EC'   2A 0884"              	LHLD	.jj
  16EF'   19                    	DAD	D
  16F0'   36 00                 	MVI	M,0
                                ;		/* take only at most first 3 chars, null terminate */
                                ;		strncpy(dev, s, 3);
  16F2'   21 0008               	LXI	H,8
  16F5'   39                    	DAD	SP
  16F6'   CD 0000*              	CALL	h.##
  16F9'   E5                    	PUSH	H
  16FA'   21 0008               	LXI	H,8
  16FD'   39                    	DAD	SP
  16FE'   CD 0000*              	CALL	h.##
  1701'   E5                    	PUSH	H
  1702'   21 0003               	LXI	H,3
  1705'   E5                    	PUSH	H
  1706'   CD 0000*              	CALL	strncpy
  1709'   C1                    	POP	B
  170A'   C1                    	POP	B
  170B'   C1                    	POP	B
                                ;		dev[3] = NUL;
  170C'   21 0008               	LXI	H,8
  170F'   39                    	DAD	SP
  1710'   CD 0000*              	CALL	h.##
  1713'   23                    	INX	H
  1714'   23                    	INX	H
  1715'   23                    	INX	H
  1716'   36 00                 	MVI	M,0
                                ;		s += iscan + 1;
  1718'   21 0006               	LXI	H,6
  171B'   39                    	DAD	SP
  171C'   E5                    	PUSH	H
  171D'   CD 0000*              	CALL	h.##
  1720'   E5                    	PUSH	H
  1721'   2A 0884"              	LHLD	.jj
  1724'   23                    	INX	H
  1725'   D1                    	POP	D
  1726'   19                    	DAD	D
  1727'   CD 0000*              	CALL	q.##
                                ;	}
	MACRO-80 3.35	22-Mar-19	PAGE	1-71


                                ;	
                                ;	/* scan for file extension, if any */
                                ;	iscan = index(s, ".");
  172A'   21 0006               .sj:	LXI	H,6
  172D'   39                    	DAD	SP
  172E'   CD 0000*              	CALL	h.##
  1731'   E5                    	PUSH	H
  1732'   21 1801'              	LXI	H,.hj+2
  1735'   E5                    	PUSH	H
  1736'   CD 0000*              	CALL	index
  1739'   C1                    	POP	B
  173A'   C1                    	POP	B
  173B'   22 0884"              	SHLD	.jj
                                ;	if (iscan != -1) {
  173E'   2A 0884"              	LHLD	.jj
  1741'   23                    	INX	H
  1742'   7C                    	MOV	A,H
  1743'   B5                    	ORA	L
  1744'   CA 1779'              	JZ	.tj
                                ;		s[iscan] = NUL;
  1747'   21 0006               	LXI	H,6
  174A'   39                    	DAD	SP
  174B'   CD 0000*              	CALL	h.##
  174E'   EB                    	XCHG
  174F'   2A 0884"              	LHLD	.jj
  1752'   19                    	DAD	D
  1753'   36 00                 	MVI	M,0
                                ;		strncpy(sfs->fext, (s + iscan + 1), 3);
  1755'   21 000A               	LXI	H,10
  1758'   39                    	DAD	SP
  1759'   CD 0000*              	CALL	h.##
  175C'   11 0009               	LXI	D,9
  175F'   19                    	DAD	D
  1760'   E5                    	PUSH	H
  1761'   21 0008               	LXI	H,8
  1764'   39                    	DAD	SP
  1765'   CD 0000*              	CALL	h.##
  1768'   EB                    	XCHG
  1769'   2A 0884"              	LHLD	.jj
  176C'   19                    	DAD	D
  176D'   23                    	INX	H
  176E'   E5                    	PUSH	H
  176F'   21 0003               	LXI	H,3
  1772'   E5                    	PUSH	H
  1773'   CD 0000*              	CALL	strncpy
  1776'   C1                    	POP	B
  1777'   C1                    	POP	B
  1778'   C1                    	POP	B
                                ;	}
                                ;	
                                ;	/* now go back and copy file name portion */
                                ;	strncpy(sfs->fname, s, 8);
  1779'   21 000A               .tj:	LXI	H,10
  177C'   39                    	DAD	SP
  177D'   CD 0000*              	CALL	h.##
  1780'   E5                    	PUSH	H
	MACRO-80 3.35	22-Mar-19	PAGE	1-72


  1781'   21 0008               	LXI	H,8
  1784'   39                    	DAD	SP
  1785'   CD 0000*              	CALL	h.##
  1788'   E5                    	PUSH	H
  1789'   21 0008               	LXI	H,8
  178C'   E5                    	PUSH	H
  178D'   CD 0000*              	CALL	strncpy
  1790'   C1                    	POP	B
  1791'   C1                    	POP	B
  1792'   C1                    	POP	B
                                ;	
                                ;	/* check for xxx: -> make it xxx:*.* */
                                ;	if ((sfs->fname[0] == NUL) && (sfs->fext[0] == NUL)) {
  1793'   21 000A               	LXI	H,10
  1796'   39                    	DAD	SP
  1797'   CD 0000*              	CALL	h.##
  179A'   CD 0000*              	CALL	g.##
  179D'   CD 0000*              	CALL	c.not##
  17A0'   CA 17B4'              	JZ	.vj
  17A3'   21 000A               	LXI	H,10
  17A6'   39                    	DAD	SP
  17A7'   CD 0000*              	CALL	h.##
  17AA'   11 0009               	LXI	D,9
  17AD'   19                    	DAD	D
  17AE'   CD 0000*              	CALL	g.##
  17B1'   CD 0000*              	CALL	c.not##
  17B4'   CD 0000*              .vj:	CALL	e.0##
  17B7'   CA 17D0'              	JZ	.uj
                                ;		sfs->fname[0] = '*';
  17BA'   21 000A               	LXI	H,10
  17BD'   39                    	DAD	SP
  17BE'   CD 0000*              	CALL	h.##
  17C1'   36 2A                 	MVI	M,42
                                ;		sfs->fext[0] = '*';
  17C3'   21 000A               	LXI	H,10
  17C6'   39                    	DAD	SP
  17C7'   CD 0000*              	CALL	h.##
  17CA'   11 0009               	LXI	D,9
  17CD'   19                    	DAD	D
  17CE'   36 2A                 	MVI	M,42
                                ;	}
                                ;	/* expand any wild cards in name or extension */
                                ;	wcexpand(sfs->fname, 8);
  17D0'   21 000A               .uj:	LXI	H,10
  17D3'   39                    	DAD	SP
  17D4'   CD 0000*              	CALL	h.##
  17D7'   E5                    	PUSH	H
  17D8'   21 0008               	LXI	H,8
  17DB'   E5                    	PUSH	H
  17DC'   CD 0477'              	CALL	wcexpan
  17DF'   C1                    	POP	B
  17E0'   C1                    	POP	B
                                ;	wcexpand(sfs->fext, 3);
  17E1'   21 000A               	LXI	H,10
  17E4'   39                    	DAD	SP
  17E5'   CD 0000*              	CALL	h.##
	MACRO-80 3.35	22-Mar-19	PAGE	1-73


  17E8'   11 0009               	LXI	D,9
  17EB'   19                    	DAD	D
  17EC'   E5                    	PUSH	H
  17ED'   21 0003               	LXI	H,3
  17F0'   E5                    	PUSH	H
  17F1'   CD 0477'              	CALL	wcexpan
  17F4'   C1                    	POP	B
  17F5'   C1                    	POP	B
                                ;}
  17F6'   E1                    .wj:	POP	H
  17F7'   22 0882"              	SHLD	.ij
  17FA'   E1                    	POP	H
  17FB'   22 0884"              	SHLD	.jj
  17FE'   C9                    	RET
  17FF'                         .hj:
  17FF'   3A                    	DB	':'
  1800'   00                    	DB	0
  1801'   2E                    	DB	'.'
  1802'   00                    	DB	0
                                ;/* devtype - returns type code based on device specified */
                                ;devtype(d)
                                
                                	PUBLIC	devtype
                                ;char *d;
                                ;{
                                ;	int dtype;
  1803'                         	DSEG
  0886"   0000                  .yj:	DW	0
                                ;	
                                ;	if (strlen(d) == 0)
  0888"                         	CSEG
                                
  1803'   2A 0886"              devtype:	LHLD	.yj
  1806'   E5                    	PUSH	H
  1807'   21 0004               	LXI	H,4
  180A'   39                    	DAD	SP
  180B'   CD 0000*              	CALL	h.##
  180E'   E5                    	PUSH	H
  180F'   CD 0000*              	CALL	strlen
  1812'   C1                    	POP	B
  1813'   7C                    	MOV	A,H
  1814'   B5                    	ORA	L
  1815'   C2 1821'              	JNZ	.zj
                                ;		dtype = NULLD;
  1818'   21 0000               	LXI	H,0
  181B'   22 0886"              	SHLD	.yj
                                ;	else if (strcmp(d, "USB") == 0)
  181E'   C3 18EE'              	JMP	.ak
  1821'   21 0004               .zj:	LXI	H,4
  1824'   39                    	DAD	SP
  1825'   CD 0000*              	CALL	h.##
  1828'   E5                    	PUSH	H
  1829'   21 18F8'              	LXI	H,.xj
  182C'   E5                    	PUSH	H
  182D'   CD 0000*              	CALL	strcmp
  1830'   C1                    	POP	B
	MACRO-80 3.35	22-Mar-19	PAGE	1-74


  1831'   C1                    	POP	B
  1832'   7C                    	MOV	A,H
  1833'   B5                    	ORA	L
  1834'   C2 1840'              	JNZ	.bk
                                ;		dtype = USBD;
  1837'   21 0003               	LXI	H,3
  183A'   22 0886"              	SHLD	.yj
                                ;	else if ((strlen(d) == 2) && isalpha(d[0]) && isalpha(d[1]))
  183D'   C3 18EE'              	JMP	.ck
  1840'   21 0004               .bk:	LXI	H,4
  1843'   39                    	DAD	SP
  1844'   CD 0000*              	CALL	h.##
  1847'   E5                    	PUSH	H
  1848'   CD 0000*              	CALL	strlen
  184B'   C1                    	POP	B
  184C'   2B                    	DCX	H
  184D'   2B                    	DCX	H
  184E'   CD 0000*              	CALL	c.not##
  1851'   CA 1863'              	JZ	.ek
  1854'   21 0004               	LXI	H,4
  1857'   39                    	DAD	SP
  1858'   CD 0000*              	CALL	h.##
  185B'   CD 0000*              	CALL	g.##
  185E'   E5                    	PUSH	H
  185F'   CD 0000*              	CALL	isalpha
  1862'   C1                    	POP	B
  1863'   CD 0000*              .ek:	CALL	e.0##
  1866'   CA 1879'              	JZ	.fk
  1869'   21 0004               	LXI	H,4
  186C'   39                    	DAD	SP
  186D'   CD 0000*              	CALL	h.##
  1870'   23                    	INX	H
  1871'   CD 0000*              	CALL	g.##
  1874'   E5                    	PUSH	H
  1875'   CD 0000*              	CALL	isalpha
  1878'   C1                    	POP	B
  1879'   CD 0000*              .fk:	CALL	e.0##
  187C'   CA 1888'              	JZ	.dk
                                ;		dtype = USERD;
  187F'   21 0002               	LXI	H,2
  1882'   22 0886"              	SHLD	.yj
                                ;	else if ((strlen(d) == 3) && isalpha(d[0]) && isalpha(d[1]) && isdigit(d[2]))
  1885'   C3 18EE'              	JMP	.gk
  1888'   21 0004               .dk:	LXI	H,4
  188B'   39                    	DAD	SP
  188C'   CD 0000*              	CALL	h.##
  188F'   E5                    	PUSH	H
  1890'   CD 0000*              	CALL	strlen
  1893'   C1                    	POP	B
  1894'   2B                    	DCX	H
  1895'   2B                    	DCX	H
  1896'   2B                    	DCX	H
  1897'   CD 0000*              	CALL	c.not##
  189A'   CA 18AC'              	JZ	.ik
  189D'   21 0004               	LXI	H,4
  18A0'   39                    	DAD	SP
	MACRO-80 3.35	22-Mar-19	PAGE	1-75


  18A1'   CD 0000*              	CALL	h.##
  18A4'   CD 0000*              	CALL	g.##
  18A7'   E5                    	PUSH	H
  18A8'   CD 0000*              	CALL	isalpha
  18AB'   C1                    	POP	B
  18AC'   CD 0000*              .ik:	CALL	e.0##
  18AF'   CA 18C2'              	JZ	.jk
  18B2'   21 0004               	LXI	H,4
  18B5'   39                    	DAD	SP
  18B6'   CD 0000*              	CALL	h.##
  18B9'   23                    	INX	H
  18BA'   CD 0000*              	CALL	g.##
  18BD'   E5                    	PUSH	H
  18BE'   CD 0000*              	CALL	isalpha
  18C1'   C1                    	POP	B
  18C2'   CD 0000*              .jk:	CALL	e.0##
  18C5'   CA 18D9'              	JZ	.kk
  18C8'   21 0004               	LXI	H,4
  18CB'   39                    	DAD	SP
  18CC'   CD 0000*              	CALL	h.##
  18CF'   23                    	INX	H
  18D0'   23                    	INX	H
  18D1'   CD 0000*              	CALL	g.##
  18D4'   E5                    	PUSH	H
  18D5'   CD 0000*              	CALL	isdigit
  18D8'   C1                    	POP	B
  18D9'   CD 0000*              .kk:	CALL	e.0##
  18DC'   CA 18E8'              	JZ	.hk
                                ;		dtype = STORD;
  18DF'   21 0001               	LXI	H,1
  18E2'   22 0886"              	SHLD	.yj
                                ;	else
  18E5'   C3 18EE'              	JMP	.lk
  18E8'                         .hk:	DS	0
                                ;		dtype = UNKD;
  18E8'   21 0004               	LXI	H,4
  18EB'   22 0886"              	SHLD	.yj
  18EE'                         .lk:	DS	0
  18EE'                         .gk:	DS	0
  18EE'                         .ck:	DS	0
  18EE'                         .ak:	DS	0
                                ;	
                                ;	return dtype;
  18EE'   2A 0886"              	LHLD	.yj
  18F1'   EB                    .mk:	XCHG
  18F2'   E1                    	POP	H
  18F3'   22 0886"              	SHLD	.yj
  18F6'   EB                    	XCHG
  18F7'   C9                    	RET
                                ;}
  18F8'                         .xj:
  18F8'   55 53 42              	DB	'USB'
  18FB'   00                    	DB	0
                                ;/* checkdev - do validation check on specified devices
                                ;**
                                ;**	Return codes:
	MACRO-80 3.35	22-Mar-19	PAGE	1-76


                                ;**		0: normal return, no error
                                ;**		1: one or more unknown devices specified
                                ;**		2: no USB device specified
                                ;**		3: both source and dest are USB (not allowed)
                                ;**		4: one or both devices are user devices (e.g. TT: LP:, etc.)
                                ;*/
                                ;checkdev()
                                ;{
                                
                                	PUBLIC	checkde
                                ;	int rc;
  18FC'                         	DSEG
  0888"   0000                  .ok:	DW	0
                                ;	
                                ;	rc = 0;
  088A"                         	CSEG
                                
  18FC'   2A 0888"              checkde:	LHLD	.ok
  18FF'   E5                    	PUSH	H
  1900'   21 0000               	LXI	H,0
  1903'   22 0888"              	SHLD	.ok
                                ;	
                                ;	/* identify types of devices specified */
                                ;	dsttype = devtype(dstdev);
  1906'   21 00BB"              	LXI	H,dstdev
  1909'   E5                    	PUSH	H
  190A'   CD 1803'              	CALL	devtype
  190D'   C1                    	POP	B
  190E'   22 00C1"              	SHLD	dsttype
                                ;	srctype = devtype(srcdev);
  1911'   21 00B7"              	LXI	H,srcdev
  1914'   E5                    	PUSH	H
  1915'   CD 1803'              	CALL	devtype
  1918'   C1                    	POP	B
  1919'   22 00BF"              	SHLD	srctype
                                ;	
                                ;	if ((dsttype == UNKD) || (srctype == UNKD))
  191C'   2A 00C1"              	LHLD	dsttype
  191F'   11 FFFC               	LXI	D,-4
  1922'   19                    	DAD	D
  1923'   CD 0000*              	CALL	c.not##
  1926'   C2 1933'              	JNZ	.qk
  1929'   2A 00BF"              	LHLD	srctype
  192C'   11 FFFC               	LXI	D,-4
  192F'   19                    	DAD	D
  1930'   CD 0000*              	CALL	c.not##
  1933'   CD 0000*              .qk:	CALL	e.0##
  1936'   CA 1942'              	JZ	.pk
                                ;		rc = 1;
  1939'   21 0001               	LXI	H,1
  193C'   22 0888"              	SHLD	.ok
                                ;	/* otherwise replace NULL devices with something appropriate */
                                ;	else if (srctype == NULLD) {
  193F'   C3 19EE'              	JMP	.rk
  1942'   2A 00BF"              .pk:	LHLD	srctype
  1945'   7C                    	MOV	A,H
	MACRO-80 3.35	22-Mar-19	PAGE	1-77


  1946'   B5                    	ORA	L
  1947'   C2 19B2'              	JNZ	.sk
                                ;		/* no source device specified */
                                ;		if (dsttype == NULLD) {
  194A'   2A 00C1"              	LHLD	dsttype
  194D'   7C                    	MOV	A,H
  194E'   B5                    	ORA	L
  194F'   C2 197B'              	JNZ	.tk
                                ;			/* neither specified, use appropriate defaults */
                                ;			dsttype = STORD;
  1952'   21 0001               	LXI	H,1
  1955'   22 00C1"              	SHLD	dsttype
                                ;			strcpy(dstdev, SYSDFLT);
  1958'   21 00BB"              	LXI	H,dstdev
  195B'   E5                    	PUSH	H
  195C'   21 1A59'              	LXI	H,.nk
  195F'   E5                    	PUSH	H
  1960'   CD 0000*              	CALL	strcpy
  1963'   C1                    	POP	B
  1964'   C1                    	POP	B
                                ;			srctype = USBD;
  1965'   21 0003               	LXI	H,3
  1968'   22 00BF"              	SHLD	srctype
                                ;			strcpy(srcdev, USBDFLT);
  196B'   21 00B7"              	LXI	H,srcdev
  196E'   E5                    	PUSH	H
  196F'   21 1A5D'              	LXI	H,.nk+4
  1972'   E5                    	PUSH	H
  1973'   CD 0000*              	CALL	strcpy
  1976'   C1                    	POP	B
  1977'   C1                    	POP	B
                                ;		}
                                ;		else if (dsttype == USBD) {
  1978'   C3 19AF'              	JMP	.uk
  197B'   2A 00C1"              .tk:	LHLD	dsttype
  197E'   2B                    	DCX	H
  197F'   2B                    	DCX	H
  1980'   2B                    	DCX	H
  1981'   7C                    	MOV	A,H
  1982'   B5                    	ORA	L
  1983'   C2 199C'              	JNZ	.vk
                                ;			/* destination is USB but source unspecified */
                                ;			srctype = STORD;
  1986'   21 0001               	LXI	H,1
  1989'   22 00BF"              	SHLD	srctype
                                ;			strcpy(srcdev, SYSDFLT);
  198C'   21 00B7"              	LXI	H,srcdev
  198F'   E5                    	PUSH	H
  1990'   21 1A59'              	LXI	H,.nk
  1993'   E5                    	PUSH	H
  1994'   CD 0000*              	CALL	strcpy
  1997'   C1                    	POP	B
  1998'   C1                    	POP	B
                                ;		} else {
  1999'   C3 19AF'              	JMP	.wk
  199C'                         .vk:	DS	0
	MACRO-80 3.35	22-Mar-19	PAGE	1-78


                                ;			/* destination not USB but source unspecified */
                                ;			srctype = USBD;
  199C'   21 0003               	LXI	H,3
  199F'   22 00BF"              	SHLD	srctype
                                ;			strcpy(srcdev, USBDFLT);
  19A2'   21 00B7"              	LXI	H,srcdev
  19A5'   E5                    	PUSH	H
  19A6'   21 1A5D'              	LXI	H,.nk+4
  19A9'   E5                    	PUSH	H
  19AA'   CD 0000*              	CALL	strcpy
  19AD'   C1                    	POP	B
  19AE'   C1                    	POP	B
                                ;		}
  19AF'                         .wk:	DS	0
  19AF'                         .uk:	DS	0
                                ;	
                                ;	} else if (dsttype == NULLD) {
  19AF'   C3 19EE'              	JMP	.xk
  19B2'   2A 00C1"              .sk:	LHLD	dsttype
  19B5'   7C                    	MOV	A,H
  19B6'   B5                    	ORA	L
  19B7'   C2 19EE'              	JNZ	.yk
                                ;		/* source type specified but not dest type */
                                ;		if (srctype == USBD) {
  19BA'   2A 00BF"              	LHLD	srctype
  19BD'   2B                    	DCX	H
  19BE'   2B                    	DCX	H
  19BF'   2B                    	DCX	H
  19C0'   7C                    	MOV	A,H
  19C1'   B5                    	ORA	L
  19C2'   C2 19DB'              	JNZ	.zk
                                ;			/* source is USB but dest unspecified */
                                ;			dsttype = STORD;
  19C5'   21 0001               	LXI	H,1
  19C8'   22 00C1"              	SHLD	dsttype
                                ;			strcpy(dstdev, SYSDFLT);
  19CB'   21 00BB"              	LXI	H,dstdev
  19CE'   E5                    	PUSH	H
  19CF'   21 1A59'              	LXI	H,.nk
  19D2'   E5                    	PUSH	H
  19D3'   CD 0000*              	CALL	strcpy
  19D6'   C1                    	POP	B
  19D7'   C1                    	POP	B
                                ;		}
                                ;		else {
  19D8'   C3 19EE'              	JMP	.al
  19DB'                         .zk:	DS	0
                                ;			/* source not USB but dest unspecified */
                                ;			dsttype = USBD;
  19DB'   21 0003               	LXI	H,3
  19DE'   22 00C1"              	SHLD	dsttype
                                ;			strcpy(dstdev, USBDFLT);
  19E1'   21 00BB"              	LXI	H,dstdev
  19E4'   E5                    	PUSH	H
  19E5'   21 1A5D'              	LXI	H,.nk+4
  19E8'   E5                    	PUSH	H
	MACRO-80 3.35	22-Mar-19	PAGE	1-79


  19E9'   CD 0000*              	CALL	strcpy
  19EC'   C1                    	POP	B
  19ED'   C1                    	POP	B
                                ;		}
  19EE'                         .al:	DS	0
                                ;	}
                                ;	
                                ;	/* at least one device needs to be USB: */
                                ;	if ((dsttype != USBD) && (srctype != USBD))
  19EE'                         .yk:	DS	0
  19EE'                         .xk:	DS	0
  19EE'   2A 00C1"              .rk:	LHLD	dsttype
  19F1'   2B                    	DCX	H
  19F2'   2B                    	DCX	H
  19F3'   2B                    	DCX	H
  19F4'   CD 0000*              	CALL	e.0##
  19F7'   CA 1A03'              	JZ	.cl
  19FA'   2A 00BF"              	LHLD	srctype
  19FD'   2B                    	DCX	H
  19FE'   2B                    	DCX	H
  19FF'   2B                    	DCX	H
  1A00'   CD 0000*              	CALL	e.0##
  1A03'   CD 0000*              .cl:	CALL	e.0##
  1A06'   CA 1A0F'              	JZ	.bl
                                ;		rc = 2;
  1A09'   21 0002               	LXI	H,2
  1A0C'   22 0888"              	SHLD	.ok
                                ;	
                                ;	/* USB to USB copies not supported */
                                ;	if ((dsttype == USBD) && (srctype == USBD))
  1A0F'   2A 00C1"              .bl:	LHLD	dsttype
  1A12'   2B                    	DCX	H
  1A13'   2B                    	DCX	H
  1A14'   2B                    	DCX	H
  1A15'   CD 0000*              	CALL	c.not##
  1A18'   CA 1A24'              	JZ	.el
  1A1B'   2A 00BF"              	LHLD	srctype
  1A1E'   2B                    	DCX	H
  1A1F'   2B                    	DCX	H
  1A20'   2B                    	DCX	H
  1A21'   CD 0000*              	CALL	c.not##
  1A24'   CD 0000*              .el:	CALL	e.0##
  1A27'   CA 1A30'              	JZ	.dl
                                ;		rc = 3;
  1A2A'   21 0003               	LXI	H,3
  1A2D'   22 0888"              	SHLD	.ok
                                ;	
                                ;	/* currently only disk devices allowed */
                                ;	if ((dsttype == USERD) || (srctype == USERD))
  1A30'   2A 00C1"              .dl:	LHLD	dsttype
  1A33'   2B                    	DCX	H
  1A34'   2B                    	DCX	H
  1A35'   CD 0000*              	CALL	c.not##
  1A38'   C2 1A43'              	JNZ	.gl
  1A3B'   2A 00BF"              	LHLD	srctype
  1A3E'   2B                    	DCX	H
	MACRO-80 3.35	22-Mar-19	PAGE	1-80


  1A3F'   2B                    	DCX	H
  1A40'   CD 0000*              	CALL	c.not##
  1A43'   CD 0000*              .gl:	CALL	e.0##
  1A46'   CA 1A4F'              	JZ	.fl
                                ;		rc = 4;
  1A49'   21 0004               	LXI	H,4
  1A4C'   22 0888"              	SHLD	.ok
                                ;		
                                ;	return rc;
  1A4F'   2A 0888"              .fl:	LHLD	.ok
  1A52'   EB                    .hl:	XCHG
  1A53'   E1                    	POP	H
  1A54'   22 0888"              	SHLD	.ok
  1A57'   EB                    	XCHG
  1A58'   C9                    	RET
                                ;}
  1A59'                         .nk:
  1A59'   53 59 30              	DB	'SY0'
  1A5C'   00                    	DB	0
  1A5D'   55 53 42              	DB	'USB'
  1A60'   00                    	DB	0
                                ;/* domatch - tag files that match a filespec
                                ;**
                                ;** the 'cname' and 'cext' strings contain file name
                                ;** and extension specifications including possible
                                ;** '*' and '?' wild cards.  if '*' is the first 
                                ;** char then anything matches.  '?' matches any
                                ;** single character.  the 'tag' field in the
                                ;** directory is updated to indicate any matches.
                                ;** wild cards never match directory entries for 
                                ;** subdirectories ("<DIR>").
                                ;*/
                                ;domatch(cname, cext)
                                
                                	PUBLIC	domatch
                                ;char *cname, *cext;
                                ;{
                                ;	int i, j;
  1A61'                         	DSEG
  088A"   0000                  .jl:	DW	0
  088C"   0000                  .kl:	DW	0
                                ;	char match;
                                ;	
                                ;	for (i=0; i<nentries; i++) {
  088E"                         	CSEG
                                
  1A61'   3B                    domatch:	DCX	SP
  1A62'   2A 088C"              	LHLD	.kl
  1A65'   E5                    	PUSH	H
  1A66'   2A 088A"              	LHLD	.jl
  1A69'   E5                    	PUSH	H
  1A6A'   21 0000               	LXI	H,0
  1A6D'   22 088A"              	SHLD	.jl
  1A70'   2A 04C5"              .nl:	LHLD	nentrie
  1A73'   EB                    	XCHG
  1A74'   2A 088A"              	LHLD	.jl
	MACRO-80 3.35	22-Mar-19	PAGE	1-81


  1A77'   CD 0000*              	CALL	c.gt##
  1A7A'   CA 1BE5'              	JZ	.ml
  1A7D'   C3 1A8B'              	JMP	.ol
  1A80'   2A 088A"              .ll:	LHLD	.jl
  1A83'   23                    	INX	H
  1A84'   22 088A"              	SHLD	.jl
  1A87'   2B                    	DCX	H
  1A88'   C3 1A70'              	JMP	.nl
  1A8B'                         .ol:	DS	0
                                ;		match = TRUE;
  1A8B'   21 0004               	LXI	H,4
  1A8E'   39                    	DAD	SP
  1A8F'   36 01                 	MVI	M,1
                                ;		if (cname[0] != '*') {
  1A91'   21 0009               	LXI	H,9
  1A94'   39                    	DAD	SP
  1A95'   CD 0000*              	CALL	h.##
  1A98'   CD 0000*              	CALL	g.##
  1A9B'   11 FFD6               	LXI	D,-42
  1A9E'   19                    	DAD	D
  1A9F'   7C                    	MOV	A,H
  1AA0'   B5                    	ORA	L
  1AA1'   CA 1B1F'              	JZ	.pl
                                ;			for (j=0; (j<8) && match; j++) {
  1AA4'   21 0000               	LXI	H,0
  1AA7'   22 088C"              	SHLD	.kl
  1AAA'   2A 088C"              .sl:	LHLD	.kl
  1AAD'   11 0008               	LXI	D,8
  1AB0'   CD 0000*              	CALL	c.gt##
  1AB3'   CA 1ABD'              	JZ	.tl
  1AB6'   21 0004               	LXI	H,4
  1AB9'   39                    	DAD	SP
  1ABA'   CD 0000*              	CALL	g.##
  1ABD'   CD 0000*              .tl:	CALL	e.0##
  1AC0'   CA 1B1F'              	JZ	.rl
  1AC3'   C3 1AD1'              	JMP	.ul
  1AC6'   2A 088C"              .ql:	LHLD	.kl
  1AC9'   23                    	INX	H
  1ACA'   22 088C"              	SHLD	.kl
  1ACD'   2B                    	DCX	H
  1ACE'   C3 1AAA'              	JMP	.sl
  1AD1'                         .ul:	DS	0
                                ;				if ((cname[j] != '?') && (cname[j] != direntry[i]->name[j]))
  1AD1'   21 0009               	LXI	H,9
  1AD4'   39                    	DAD	SP
  1AD5'   CD 0000*              	CALL	h.##
  1AD8'   EB                    	XCHG
  1AD9'   2A 088C"              	LHLD	.kl
  1ADC'   19                    	DAD	D
  1ADD'   CD 0000*              	CALL	g.##
  1AE0'   11 FFC1               	LXI	D,-63
  1AE3'   19                    	DAD	D
  1AE4'   CD 0000*              	CALL	e.0##
  1AE7'   CA 1B10'              	JZ	.wl
  1AEA'   21 0009               	LXI	H,9
  1AED'   39                    	DAD	SP
	MACRO-80 3.35	22-Mar-19	PAGE	1-82


  1AEE'   CD 0000*              	CALL	h.##
  1AF1'   EB                    	XCHG
  1AF2'   2A 088C"              	LHLD	.kl
  1AF5'   19                    	DAD	D
  1AF6'   CD 0000*              	CALL	g.##
  1AF9'   E5                    	PUSH	H
  1AFA'   2A 088A"              	LHLD	.jl
  1AFD'   29                    	DAD	H
  1AFE'   11 02C5"              	LXI	D,direntr
  1B01'   19                    	DAD	D
  1B02'   CD 0000*              	CALL	h.##
  1B05'   EB                    	XCHG
  1B06'   2A 088C"              	LHLD	.kl
  1B09'   19                    	DAD	D
  1B0A'   CD 0000*              	CALL	g.##
  1B0D'   CD 0000*              	CALL	n.##
  1B10'   CD 0000*              .wl:	CALL	e.0##
  1B13'   CA 1B1C'              	JZ	.vl
                                ;					match = FALSE;
  1B16'   21 0004               	LXI	H,4
  1B19'   39                    	DAD	SP
  1B1A'   36 00                 	MVI	M,0
                                ;			}
  1B1C'   C3 1AC6'              .vl:	JMP	.ql
  1B1F'                         .rl:	DS	0
                                ;		}
                                ;		if ((cext[0] != '*') && match) {
  1B1F'   21 0007               .pl:	LXI	H,7
  1B22'   39                    	DAD	SP
  1B23'   CD 0000*              	CALL	h.##
  1B26'   CD 0000*              	CALL	g.##
  1B29'   11 FFD6               	LXI	D,-42
  1B2C'   19                    	DAD	D
  1B2D'   CD 0000*              	CALL	e.0##
  1B30'   CA 1B3A'              	JZ	.yl
  1B33'   21 0004               	LXI	H,4
  1B36'   39                    	DAD	SP
  1B37'   CD 0000*              	CALL	g.##
  1B3A'   CD 0000*              .yl:	CALL	e.0##
  1B3D'   CA 1BBF'              	JZ	.xl
                                ;			for (j=0; (j<3) && match; j++){
  1B40'   21 0000               	LXI	H,0
  1B43'   22 088C"              	SHLD	.kl
  1B46'   2A 088C"              .bm:	LHLD	.kl
  1B49'   11 0003               	LXI	D,3
  1B4C'   CD 0000*              	CALL	c.gt##
  1B4F'   CA 1B59'              	JZ	.cm
  1B52'   21 0004               	LXI	H,4
  1B55'   39                    	DAD	SP
  1B56'   CD 0000*              	CALL	g.##
  1B59'   CD 0000*              .cm:	CALL	e.0##
  1B5C'   CA 1BBF'              	JZ	.am
  1B5F'   C3 1B6D'              	JMP	.dm
  1B62'   2A 088C"              .zl:	LHLD	.kl
  1B65'   23                    	INX	H
  1B66'   22 088C"              	SHLD	.kl
	MACRO-80 3.35	22-Mar-19	PAGE	1-83


  1B69'   2B                    	DCX	H
  1B6A'   C3 1B46'              	JMP	.bm
  1B6D'                         .dm:	DS	0
                                ;				if ((cext[j] != '?') && (cext[j] != direntry[i]->ext[j]))
  1B6D'   21 0007               	LXI	H,7
  1B70'   39                    	DAD	SP
  1B71'   CD 0000*              	CALL	h.##
  1B74'   EB                    	XCHG
  1B75'   2A 088C"              	LHLD	.kl
  1B78'   19                    	DAD	D
  1B79'   CD 0000*              	CALL	g.##
  1B7C'   11 FFC1               	LXI	D,-63
  1B7F'   19                    	DAD	D
  1B80'   CD 0000*              	CALL	e.0##
  1B83'   CA 1BB0'              	JZ	.fm
  1B86'   21 0007               	LXI	H,7
  1B89'   39                    	DAD	SP
  1B8A'   CD 0000*              	CALL	h.##
  1B8D'   EB                    	XCHG
  1B8E'   2A 088C"              	LHLD	.kl
  1B91'   19                    	DAD	D
  1B92'   CD 0000*              	CALL	g.##
  1B95'   E5                    	PUSH	H
  1B96'   2A 088A"              	LHLD	.jl
  1B99'   29                    	DAD	H
  1B9A'   11 02C5"              	LXI	D,direntr
  1B9D'   19                    	DAD	D
  1B9E'   CD 0000*              	CALL	h.##
  1BA1'   11 0009               	LXI	D,9
  1BA4'   19                    	DAD	D
  1BA5'   EB                    	XCHG
  1BA6'   2A 088C"              	LHLD	.kl
  1BA9'   19                    	DAD	D
  1BAA'   CD 0000*              	CALL	g.##
  1BAD'   CD 0000*              	CALL	n.##
  1BB0'   CD 0000*              .fm:	CALL	e.0##
  1BB3'   CA 1BBC'              	JZ	.em
                                ;					match = FALSE;
  1BB6'   21 0004               	LXI	H,4
  1BB9'   39                    	DAD	SP
  1BBA'   36 00                 	MVI	M,0
                                ;			}
  1BBC'   C3 1B62'              .em:	JMP	.zl
  1BBF'                         .am:	DS	0
                                ;		}
                                ;		/* mark only the matches */
                                ;		if (match)
  1BBF'   21 0004               .xl:	LXI	H,4
  1BC2'   39                    	DAD	SP
  1BC3'   7E                    	MOV	A,M
  1BC4'   B7                    	ORA	A
  1BC5'   CA 1BE2'              	JZ	.gm
                                ;			direntry[i]->tag = match;
  1BC8'   2A 088A"              	LHLD	.jl
  1BCB'   29                    	DAD	H
  1BCC'   11 02C5"              	LXI	D,direntr
	MACRO-80 3.35	22-Mar-19	PAGE	1-84


  1BCF'   19                    	DAD	D
  1BD0'   CD 0000*              	CALL	h.##
  1BD3'   11 0017               	LXI	D,23
  1BD6'   19                    	DAD	D
  1BD7'   E5                    	PUSH	H
  1BD8'   21 0006               	LXI	H,6
  1BDB'   39                    	DAD	SP
  1BDC'   CD 0000*              	CALL	g.##
  1BDF'   D1                    	POP	D
  1BE0'   7D                    	MOV	A,L
  1BE1'   12                    	STAX	D
                                ;	}
  1BE2'   C3 1A80'              .gm:	JMP	.ll
  1BE5'                         .ml:	DS	0
                                ;}
  1BE5'   E1                    .hm:	POP	H
  1BE6'   22 088A"              	SHLD	.jl
  1BE9'   E1                    	POP	H
  1BEA'   22 088C"              	SHLD	.kl
  1BED'   33                    	INX	SP
  1BEE'   C9                    	RET
                                ;/* showhelp - print help screen */
                                ;showhelp()
                                ;{
                                
                                	PUBLIC	showhel
                                ;	printf("Usage: VPIP DEST=SOURCE1,...SOURCEn/SWITCH1.../SWITCHn\n");
                                
  1BEF'   21 1BF8'              showhel:	LXI	H,.il
  1BF2'   E5                    	PUSH	H
  1BF3'   CD 0000*              	CALL	printf
  1BF6'   C1                    	POP	B
                                ;}
  1BF7'   C9                    	RET
  1BF8'                         .il:
  1BF8'   55 73 61 67           	DB	'Usage: VPIP DEST=SOURCE1,...SOURCEn/SWITCH1.../SWITCHn'
  1BFC'   65 3A 20 56           
  1C00'   50 49 50 20           
  1C04'   44 45 53 54           
  1C08'   3D 53 4F 55           
  1C0C'   52 43 45 31           
  1C10'   2C 2E 2E 2E           
  1C14'   53 4F 55 52           
  1C18'   43 45 6E 2F           
  1C1C'   53 57 49 54           
  1C20'   43 48 31 2E           
  1C24'   2E 2E 2F 53           
  1C28'   57 49 54 43           
  1C2C'   48 6E                 
  1C2E'   0A                    	DB	10
  1C2F'   00                    	DB	0
                                ;/* docmd - execute a command string */
                                ;docmd(s)
                                
                                	PUBLIC	docmd
                                ;char *s;
	MACRO-80 3.35	22-Mar-19	PAGE	1-85


                                ;{
                                ;	char *srcstr, *dststr;
  1C30'                         	DSEG
  088E"   0000                  .jm:	DW	0
  0890"   0000                  .km:	DW	0
                                ;	int i, iscan, rc;
  0892"   0000                  .lm:	DW	0
  0894"   0000                  .mm:	DW	0
  0896"   0000                  .nm:	DW	0
                                ;	struct fspec *entry;
  0898"   0000                  .om:	DW	0
                                ;	char tmpdev[4];
                                ;	*dstdev = NUL;
  089A"                         	CSEG
                                
  1C30'   C5                    docmd:	PUSH	B
  1C31'   C5                    	PUSH	B
  1C32'   2A 0898"              	LHLD	.om
  1C35'   E5                    	PUSH	H
  1C36'   2A 0896"              	LHLD	.nm
  1C39'   E5                    	PUSH	H
  1C3A'   2A 0894"              	LHLD	.mm
  1C3D'   E5                    	PUSH	H
  1C3E'   2A 0892"              	LHLD	.lm
  1C41'   E5                    	PUSH	H
  1C42'   2A 0890"              	LHLD	.km
  1C45'   E5                    	PUSH	H
  1C46'   2A 088E"              	LHLD	.jm
  1C49'   E5                    	PUSH	H
  1C4A'   21 0000               	LXI	H,0
  1C4D'   7D                    	MOV	A,L
  1C4E'   32 00BB"              	STA	dstdev
                                ;	*srcdev = NUL;
  1C51'   21 0000               	LXI	H,0
  1C54'   7D                    	MOV	A,L
  1C55'   32 00B7"              	STA	srcdev
                                ;	*tmpdev = NUL;
  1C58'   21 000C               	LXI	H,12
  1C5B'   39                    	DAD	SP
  1C5C'   36 00                 	MVI	M,0
                                ;	dststr  = NULSTR;
  1C5E'   21 1FA0'              	LXI	H,.im
  1C61'   22 0890"              	SHLD	.km
                                ;	dstspec.fname[0] = NUL;
  1C64'   21 0000"              	LXI	H,dstspec
  1C67'   36 00                 	MVI	M,0
                                ;	dstspec.fext[0] = NUL;
  1C69'   21 0009"              	LXI	H,dstspec+9
  1C6C'   36 00                 	MVI	M,0
                                ;	srcstr = s;
  1C6E'   21 0012               	LXI	H,18
  1C71'   39                    	DAD	SP
  1C72'   CD 0000*              	CALL	h.##
  1C75'   22 088E"              	SHLD	.jm
                                ;	nentries = 0;
  1C78'   21 0000               	LXI	H,0
	MACRO-80 3.35	22-Mar-19	PAGE	1-86


  1C7B'   22 04C5"              	SHLD	nentrie
                                ;	nsrc = 0;
  1C7E'   21 0000               	LXI	H,0
  1C81'   22 02C3"              	SHLD	nsrc
                                ;	vmaxw = MAXWAIT;
  1C84'   21 03E8               	LXI	H,1000
  1C87'   22 0045"              	SHLD	vmaxw
                                ;	f_debug = FALSE;
  1C8A'   21 0000               	LXI	H,0
  1C8D'   22 07CD"              	SHLD	f_debug
                                ;	/* scan for, process, and remove switches */
                                ;	scansw(s);
  1C90'   21 0012               	LXI	H,18
  1C93'   39                    	DAD	SP
  1C94'   CD 0000*              	CALL	h.##
  1C97'   E5                    	PUSH	H
  1C98'   CD 02C6'              	CALL	scansw
  1C9B'   C1                    	POP	B
                                ;	
                                ;	/* If "help" then do now and exit */
                                ;	if (f_help) {
  1C9C'   2A 07CB"              	LHLD	f_help
  1C9F'   7C                    	MOV	A,H
  1CA0'   B5                    	ORA	L
  1CA1'   CA 1CC2'              	JZ	.pm
                                ;		showhelp();
  1CA4'   CD 1BEF'              	CALL	showhel
                                ;		return;
  1CA7'   E1                    .qm:	POP	H
  1CA8'   22 088E"              	SHLD	.jm
  1CAB'   E1                    	POP	H
  1CAC'   22 0890"              	SHLD	.km
  1CAF'   E1                    	POP	H
  1CB0'   22 0892"              	SHLD	.lm
  1CB3'   E1                    	POP	H
  1CB4'   22 0894"              	SHLD	.mm
  1CB7'   E1                    	POP	H
  1CB8'   22 0896"              	SHLD	.nm
  1CBB'   E1                    	POP	H
  1CBC'   22 0898"              	SHLD	.om
  1CBF'   C1                    	POP	B
  1CC0'   C1                    	POP	B
  1CC1'   C9                    	RET
                                ;	}
                                ;	
                                ;	/* spaces not allowed - truncate at first one! */
                                ;	if ((iscan = index(s, " "))!= -1)
  1CC2'   21 0012               .pm:	LXI	H,18
  1CC5'   39                    	DAD	SP
  1CC6'   CD 0000*              	CALL	h.##
  1CC9'   E5                    	PUSH	H
  1CCA'   21 1FA1'              	LXI	H,.im+1
  1CCD'   E5                    	PUSH	H
  1CCE'   CD 0000*              	CALL	index
  1CD1'   C1                    	POP	B
  1CD2'   C1                    	POP	B
	MACRO-80 3.35	22-Mar-19	PAGE	1-87


  1CD3'   22 0894"              	SHLD	.mm
  1CD6'   23                    	INX	H
  1CD7'   CD 0000*              	CALL	e.0##
  1CDA'   CA 1CEB'              	JZ	.rm
                                ;		s[iscan] = NUL;
  1CDD'   21 0012               	LXI	H,18
  1CE0'   39                    	DAD	SP
  1CE1'   CD 0000*              	CALL	h.##
  1CE4'   EB                    	XCHG
  1CE5'   2A 0894"              	LHLD	.mm
  1CE8'   19                    	DAD	D
  1CE9'   36 00                 	MVI	M,0
                                ;	/* process destination, if specified */
                                ;	iscan = index(s, "=");
  1CEB'   21 0012               .rm:	LXI	H,18
  1CEE'   39                    	DAD	SP
  1CEF'   CD 0000*              	CALL	h.##
  1CF2'   E5                    	PUSH	H
  1CF3'   21 1FA3'              	LXI	H,.im+3
  1CF6'   E5                    	PUSH	H
  1CF7'   CD 0000*              	CALL	index
  1CFA'   C1                    	POP	B
  1CFB'   C1                    	POP	B
  1CFC'   22 0894"              	SHLD	.mm
                                ;	if (iscan != -1) {
  1CFF'   2A 0894"              	LHLD	.mm
  1D02'   23                    	INX	H
  1D03'   7C                    	MOV	A,H
  1D04'   B5                    	ORA	L
  1D05'   CA 1D42'              	JZ	.sm
                                ;		dststr = s;
  1D08'   21 0012               	LXI	H,18
  1D0B'   39                    	DAD	SP
  1D0C'   CD 0000*              	CALL	h.##
  1D0F'   22 0890"              	SHLD	.km
                                ;		s[iscan] = NUL;
  1D12'   21 0012               	LXI	H,18
  1D15'   39                    	DAD	SP
  1D16'   CD 0000*              	CALL	h.##
  1D19'   EB                    	XCHG
  1D1A'   2A 0894"              	LHLD	.mm
  1D1D'   19                    	DAD	D
  1D1E'   36 00                 	MVI	M,0
                                ;		srcstr = s + iscan + 1;
  1D20'   21 0012               	LXI	H,18
  1D23'   39                    	DAD	SP
  1D24'   CD 0000*              	CALL	h.##
  1D27'   EB                    	XCHG
  1D28'   2A 0894"              	LHLD	.mm
  1D2B'   19                    	DAD	D
  1D2C'   23                    	INX	H
  1D2D'   22 088E"              	SHLD	.jm
                                ;		parsefs(&dstspec, dstdev, dststr);
  1D30'   21 0000"              	LXI	H,dstspec
  1D33'   E5                    	PUSH	H
  1D34'   21 00BB"              	LXI	H,dstdev
	MACRO-80 3.35	22-Mar-19	PAGE	1-88


  1D37'   E5                    	PUSH	H
  1D38'   2A 0890"              	LHLD	.km
  1D3B'   E5                    	PUSH	H
  1D3C'   CD 1659'              	CALL	parsefs
  1D3F'   C1                    	POP	B
  1D40'   C1                    	POP	B
  1D41'   C1                    	POP	B
                                ;	}
                                ;		
                                ;	/* now process comma-separated source filespec list */
                                ;	do {
  1D42'                         .sm:	DS	0
  1D42'                         .vm:	DS	0
                                ;		iscan = index(srcstr, ",");
  1D42'   2A 088E"              	LHLD	.jm
  1D45'   E5                    	PUSH	H
  1D46'   21 1FA5'              	LXI	H,.im+5
  1D49'   E5                    	PUSH	H
  1D4A'   CD 0000*              	CALL	index
  1D4D'   C1                    	POP	B
  1D4E'   C1                    	POP	B
  1D4F'   22 0894"              	SHLD	.mm
                                ;		if (iscan != -1)
  1D52'   2A 0894"              	LHLD	.mm
  1D55'   23                    	INX	H
  1D56'   7C                    	MOV	A,H
  1D57'   B5                    	ORA	L
  1D58'   CA 1D65'              	JZ	.wm
                                ;			/* found comma, terminate string there */
                                ;			srcstr[iscan] = NUL;
  1D5B'   2A 088E"              	LHLD	.jm
  1D5E'   EB                    	XCHG
  1D5F'   2A 0894"              	LHLD	.mm
  1D62'   19                    	DAD	D
  1D63'   36 00                 	MVI	M,0
                                ;		if ((entry = alloc(sizeof(dstspec))) == NUL) {
  1D65'   21 000D               .wm:	LXI	H,13
  1D68'   E5                    	PUSH	H
  1D69'   CD 0000*              	CALL	alloc
  1D6C'   C1                    	POP	B
  1D6D'   22 0898"              	SHLD	.om
  1D70'   CD 0000*              	CALL	c.not##
  1D73'   CA 1D81'              	JZ	.xm
                                ;			printf("ERROR allocating memory for entry!\n");
  1D76'   21 1FA7'              	LXI	H,.im+7
  1D79'   E5                    	PUSH	H
  1D7A'   CD 0000*              	CALL	printf
  1D7D'   C1                    	POP	B
                                ;			break;
  1D7E'   C3 1E10'              	JMP	.um
                                ;		}
                                ;		src[nsrc] = entry;
  1D81'   2A 02C3"              .xm:	LHLD	nsrc
  1D84'   29                    	DAD	H
  1D85'   11 00C3"              	LXI	D,src
  1D88'   19                    	DAD	D
	MACRO-80 3.35	22-Mar-19	PAGE	1-89


  1D89'   E5                    	PUSH	H
  1D8A'   2A 0898"              	LHLD	.om
  1D8D'   CD 0000*              	CALL	q.##
                                ;		parsefs(src[nsrc], tmpdev, srcstr);
  1D90'   2A 02C3"              	LHLD	nsrc
  1D93'   29                    	DAD	H
  1D94'   11 00C3"              	LXI	D,src
  1D97'   19                    	DAD	D
  1D98'   CD 0000*              	CALL	h.##
  1D9B'   E5                    	PUSH	H
  1D9C'   21 000E               	LXI	H,14
  1D9F'   39                    	DAD	SP
  1DA0'   E5                    	PUSH	H
  1DA1'   2A 088E"              	LHLD	.jm
  1DA4'   E5                    	PUSH	H
  1DA5'   CD 1659'              	CALL	parsefs
  1DA8'   C1                    	POP	B
  1DA9'   C1                    	POP	B
  1DAA'   C1                    	POP	B
                                ;		nsrc++;
  1DAB'   2A 02C3"              	LHLD	nsrc
  1DAE'   23                    	INX	H
  1DAF'   22 02C3"              	SHLD	nsrc
  1DB2'   2B                    	DCX	H
                                ;		/* If source device is specified it must be the same for all */
                                ;		if (*tmpdev != NUL) {
  1DB3'   21 000C               	LXI	H,12
  1DB6'   39                    	DAD	SP
  1DB7'   CD 0000*              	CALL	g.##
  1DBA'   7C                    	MOV	A,H
  1DBB'   B5                    	ORA	L
  1DBC'   CA 1DFB'              	JZ	.ym
                                ;			/* source device specified, make sure same as before */
                                ;			if (*srcdev == NUL)
  1DBF'   3A 00B7"              	LDA	srcdev
  1DC2'   CD 0000*              	CALL	c.sxt##
  1DC5'   7C                    	MOV	A,H
  1DC6'   B5                    	ORA	L
  1DC7'   C2 1DDB'              	JNZ	.zm
                                ;				/* first one we've seen so take it */
                                ;				strcpy(srcdev, tmpdev);
  1DCA'   21 00B7"              	LXI	H,srcdev
  1DCD'   E5                    	PUSH	H
  1DCE'   21 000E               	LXI	H,14
  1DD1'   39                    	DAD	SP
  1DD2'   E5                    	PUSH	H
  1DD3'   CD 0000*              	CALL	strcpy
  1DD6'   C1                    	POP	B
  1DD7'   C1                    	POP	B
                                ;			else if (strcmp(srcdev, tmpdev) != 0)
  1DD8'   C3 1DFB'              	JMP	.an
  1DDB'   21 00B7"              .zm:	LXI	H,srcdev
  1DDE'   E5                    	PUSH	H
  1DDF'   21 000E               	LXI	H,14
  1DE2'   39                    	DAD	SP
  1DE3'   E5                    	PUSH	H
	MACRO-80 3.35	22-Mar-19	PAGE	1-90


  1DE4'   CD 0000*              	CALL	strcmp
  1DE7'   C1                    	POP	B
  1DE8'   C1                    	POP	B
  1DE9'   7C                    	MOV	A,H
  1DEA'   B5                    	ORA	L
  1DEB'   CA 1DFB'              	JZ	.bn
                                ;				printf("Only one source device allowed! - assuming %s\n", srcdev);
  1DEE'   21 1FCB'              	LXI	H,.im+43
  1DF1'   E5                    	PUSH	H
  1DF2'   21 00B7"              	LXI	H,srcdev
  1DF5'   E5                    	PUSH	H
  1DF6'   CD 0000*              	CALL	printf
  1DF9'   C1                    	POP	B
  1DFA'   C1                    	POP	B
                                ;		}
  1DFB'                         .bn:	DS	0
  1DFB'                         .an:	DS	0
                                ;		/* now look for next source */
                                ;		srcstr += (iscan + 1);
  1DFB'   2A 0894"              .ym:	LHLD	.mm
  1DFE'   23                    	INX	H
  1DFF'   EB                    	XCHG
  1E00'   2A 088E"              	LHLD	.jm
  1E03'   19                    	DAD	D
  1E04'   22 088E"              	SHLD	.jm
                                ;	} while (iscan != -1);
  1E07'   2A 0894"              .tm:	LHLD	.mm
  1E0A'   23                    	INX	H
  1E0B'   7C                    	MOV	A,H
  1E0C'   B5                    	ORA	L
  1E0D'   C2 1D42'              	JNZ	.vm
  1E10'                         .um:	DS	0
                                ;	
                                ;	/* set defaults for anything not specified */
                                ;	if (strlen(dstspec.fname) == 0)
  1E10'   21 0000"              	LXI	H,dstspec
  1E13'   E5                    	PUSH	H
  1E14'   CD 0000*              	CALL	strlen
  1E17'   C1                    	POP	B
  1E18'   7C                    	MOV	A,H
  1E19'   B5                    	ORA	L
  1E1A'   C2 1E2A'              	JNZ	.cn
                                ;		strcpy(dstspec.fname, "*");
  1E1D'   21 0000"              	LXI	H,dstspec
  1E20'   E5                    	PUSH	H
  1E21'   21 1FFA'              	LXI	H,.im+90
  1E24'   E5                    	PUSH	H
  1E25'   CD 0000*              	CALL	strcpy
  1E28'   C1                    	POP	B
  1E29'   C1                    	POP	B
                                ;	if (strlen(dstspec.fext) == 0)
  1E2A'   21 0009"              .cn:	LXI	H,dstspec+9
  1E2D'   E5                    	PUSH	H
  1E2E'   CD 0000*              	CALL	strlen
  1E31'   C1                    	POP	B
  1E32'   7C                    	MOV	A,H
	MACRO-80 3.35	22-Mar-19	PAGE	1-91


  1E33'   B5                    	ORA	L
  1E34'   C2 1E44'              	JNZ	.dn
                                ;		strcpy(dstspec.fext, "*");
  1E37'   21 0009"              	LXI	H,dstspec+9
  1E3A'   E5                    	PUSH	H
  1E3B'   21 1FFA'              	LXI	H,.im+90
  1E3E'   E5                    	PUSH	H
  1E3F'   CD 0000*              	CALL	strcpy
  1E42'   C1                    	POP	B
  1E43'   C1                    	POP	B
                                ;		
                                ;	/* do validation check on specified devices and set defaults */
                                ;	rc = checkdev();
  1E44'   CD 18FC'              .dn:	CALL	checkde
  1E47'   22 0896"              	SHLD	.nm
                                ;	if (rc == 0) {
  1E4A'   2A 0896"              	LHLD	.nm
  1E4D'   7C                    	MOV	A,H
  1E4E'   B5                    	ORA	L
  1E4F'   C2 1F1D'              	JNZ	.en
                                ;		/* initialize VDIP */
                                ;		if (vinit() == -1) {
  1E52'   CD 0000*              	CALL	vinit
  1E55'   23                    	INX	H
  1E56'   7C                    	MOV	A,H
  1E57'   B5                    	ORA	L
  1E58'   C2 1E6C'              	JNZ	.fn
                                ;			rc = 5;
  1E5B'   21 0005               	LXI	H,5
  1E5E'   22 0896"              	SHLD	.nm
                                ;			printf("Error initializing VDIP-1 device!\n");
  1E61'   21 1FFC'              	LXI	H,.im+92
  1E64'   E5                    	PUSH	H
  1E65'   CD 0000*              	CALL	printf
  1E68'   C1                    	POP	B
                                ;		}
                                ;		/* make sure there's a drive inserted */
                                ;		else if (vfind_disk() == -1) {
  1E69'   C3 1F1A'              	JMP	.gn
  1E6C'   CD 0000*              .fn:	CALL	vfind_d
  1E6F'   23                    	INX	H
  1E70'   7C                    	MOV	A,H
  1E71'   B5                    	ORA	L
  1E72'   C2 1E86'              	JNZ	.hn
                                ;			rc = 6;
  1E75'   21 0006               	LXI	H,6
  1E78'   22 0896"              	SHLD	.nm
                                ;			printf("No flash drive found!\n");
  1E7B'   21 201F'              	LXI	H,.im+127
  1E7E'   E5                    	PUSH	H
  1E7F'   CD 0000*              	CALL	printf
  1E82'   C1                    	POP	B
                                ;		}
                                ;		else {
  1E83'   C3 1F1A'              	JMP	.in
  1E86'                         .hn:	DS	0
	MACRO-80 3.35	22-Mar-19	PAGE	1-92


                                ;			/* build directory and tag matching files */
                                ;			if ((srctype == STORD) || (srctype == USBD)) {
  1E86'   2A 00BF"              	LHLD	srctype
  1E89'   2B                    	DCX	H
  1E8A'   CD 0000*              	CALL	c.not##
  1E8D'   C2 1E99'              	JNZ	.kn
  1E90'   2A 00BF"              	LHLD	srctype
  1E93'   2B                    	DCX	H
  1E94'   2B                    	DCX	H
  1E95'   2B                    	DCX	H
  1E96'   CD 0000*              	CALL	c.not##
  1E99'   CD 0000*              .kn:	CALL	e.0##
  1E9C'   CA 1EFB'              	JZ	.jn
                                ;				/* first build the directory tree in memory */
                                ;				if (srctype == STORD)
  1E9F'   2A 00BF"              	LHLD	srctype
  1EA2'   2B                    	DCX	H
  1EA3'   7C                    	MOV	A,H
  1EA4'   B5                    	ORA	L
  1EA5'   C2 1EB3'              	JNZ	.ln
                                ;					bldhdir(srcdev);	/* HDOS */
  1EA8'   21 00B7"              	LXI	H,srcdev
  1EAB'   E5                    	PUSH	H
  1EAC'   CD 0C7A'              	CALL	bldhdir
  1EAF'   C1                    	POP	B
                                ;				else
  1EB0'   C3 1EB6'              	JMP	.mn
  1EB3'                         .ln:	DS	0
                                ;					bldudir();			/* USB */
  1EB3'   CD 0747'              	CALL	bldudir
  1EB6'                         .mn:	DS	0
                                ;				/* now tag file entries that match any of the source filespecs */
                                ;				for (i=0; i<nsrc; i++)
  1EB6'   21 0000               	LXI	H,0
  1EB9'   22 0892"              	SHLD	.lm
  1EBC'   2A 02C3"              .pn:	LHLD	nsrc
  1EBF'   EB                    	XCHG
  1EC0'   2A 0892"              	LHLD	.lm
  1EC3'   CD 0000*              	CALL	c.gt##
  1EC6'   CA 1EFB'              	JZ	.on
  1EC9'   C3 1ED7'              	JMP	.qn
  1ECC'   2A 0892"              .nn:	LHLD	.lm
  1ECF'   23                    	INX	H
  1ED0'   22 0892"              	SHLD	.lm
  1ED3'   2B                    	DCX	H
  1ED4'   C3 1EBC'              	JMP	.pn
  1ED7'                         .qn:	DS	0
                                ;					domatch(src[i]->fname, src[i]->fext);
  1ED7'   2A 0892"              	LHLD	.lm
  1EDA'   29                    	DAD	H
  1EDB'   11 00C3"              	LXI	D,src
  1EDE'   19                    	DAD	D
  1EDF'   CD 0000*              	CALL	h.##
  1EE2'   E5                    	PUSH	H
  1EE3'   2A 0892"              	LHLD	.lm
  1EE6'   29                    	DAD	H
	MACRO-80 3.35	22-Mar-19	PAGE	1-93


  1EE7'   11 00C3"              	LXI	D,src
  1EEA'   19                    	DAD	D
  1EEB'   CD 0000*              	CALL	h.##
  1EEE'   11 0009               	LXI	D,9
  1EF1'   19                    	DAD	D
  1EF2'   E5                    	PUSH	H
  1EF3'   CD 1A61'              	CALL	domatch
  1EF6'   C1                    	POP	B
  1EF7'   C1                    	POP	B
  1EF8'   C3 1ECC'              	JMP	.nn
  1EFB'                         .on:	DS	0
                                ;			}
                                ;			if (f_brief || f_list)
  1EFB'   2A 07C9"              .jn:	LHLD	f_brief
  1EFE'   7C                    	MOV	A,H
  1EFF'   B5                    	ORA	L
  1F00'   C2 1F06'              	JNZ	.sn
  1F03'   2A 07C7"              	LHLD	f_list
  1F06'   CD 0000*              .sn:	CALL	e.0##
  1F09'   CA 1F17'              	JZ	.rn
                                ;				listmatch(f_brief);
  1F0C'   2A 07C9"              	LHLD	f_brief
  1F0F'   E5                    	PUSH	H
  1F10'   CD 131A'              	CALL	listmat
  1F13'   C1                    	POP	B
                                ;			else
  1F14'   C3 1F1A'              	JMP	.tn
  1F17'                         .rn:	DS	0
                                ;				copyfiles();
  1F17'   CD 14BB'              	CALL	copyfil
  1F1A'                         .tn:	DS	0
                                ;		}
  1F1A'                         .in:	DS	0
  1F1A'                         .gn:	DS	0
                                ;	}
                                ;	else if (rc == 1)
  1F1A'   C3 1F80'              	JMP	.un
  1F1D'   2A 0896"              .en:	LHLD	.nm
  1F20'   2B                    	DCX	H
  1F21'   7C                    	MOV	A,H
  1F22'   B5                    	ORA	L
  1F23'   C2 1F31'              	JNZ	.vn
                                ;		printf("Illegal device specified\n");
  1F26'   21 2036'              	LXI	H,.im+150
  1F29'   E5                    	PUSH	H
  1F2A'   CD 0000*              	CALL	printf
  1F2D'   C1                    	POP	B
                                ;	else if (rc == 2)
  1F2E'   C3 1F80'              	JMP	.wn
  1F31'   2A 0896"              .vn:	LHLD	.nm
  1F34'   2B                    	DCX	H
  1F35'   2B                    	DCX	H
  1F36'   7C                    	MOV	A,H
  1F37'   B5                    	ORA	L
  1F38'   C2 1F46'              	JNZ	.xn
                                ;		printf("Either source or destination need to be the USB\n");
	MACRO-80 3.35	22-Mar-19	PAGE	1-94


  1F3B'   21 2050'              	LXI	H,.im+176
  1F3E'   E5                    	PUSH	H
  1F3F'   CD 0000*              	CALL	printf
  1F42'   C1                    	POP	B
                                ;	else if (rc == 3)
  1F43'   C3 1F80'              	JMP	.yn
  1F46'   2A 0896"              .xn:	LHLD	.nm
  1F49'   2B                    	DCX	H
  1F4A'   2B                    	DCX	H
  1F4B'   2B                    	DCX	H
  1F4C'   7C                    	MOV	A,H
  1F4D'   B5                    	ORA	L
  1F4E'   C2 1F5C'              	JNZ	.zn
                                ;		printf("USB to USB copies not supported\n");
  1F51'   21 2081'              	LXI	H,.im+225
  1F54'   E5                    	PUSH	H
  1F55'   CD 0000*              	CALL	printf
  1F58'   C1                    	POP	B
                                ;	else if (rc == 4)
  1F59'   C3 1F80'              	JMP	.ao
  1F5C'   2A 0896"              .zn:	LHLD	.nm
  1F5F'   11 FFFC               	LXI	D,-4
  1F62'   19                    	DAD	D
  1F63'   7C                    	MOV	A,H
  1F64'   B5                    	ORA	L
  1F65'   C2 1F73'              	JNZ	.bo
                                ;		printf("Both source and destination must be storage devices\n");
  1F68'   21 20A2'              	LXI	H,.im+258
  1F6B'   E5                    	PUSH	H
  1F6C'   CD 0000*              	CALL	printf
  1F6F'   C1                    	POP	B
                                ;	else
  1F70'   C3 1F80'              	JMP	.co
  1F73'                         .bo:	DS	0
                                ;		printf("Device code error %d\n", rc);
  1F73'   21 20D7'              	LXI	H,.im+311
  1F76'   E5                    	PUSH	H
  1F77'   2A 0896"              	LHLD	.nm
  1F7A'   E5                    	PUSH	H
  1F7B'   CD 0000*              	CALL	printf
  1F7E'   C1                    	POP	B
  1F7F'   C1                    	POP	B
  1F80'                         .co:	DS	0
  1F80'                         .ao:	DS	0
  1F80'                         .yn:	DS	0
  1F80'                         .wn:	DS	0
  1F80'                         .un:	DS	0
                                ;		
                                ;	return rc;
  1F80'   2A 0896"              	LHLD	.nm
  1F83'   EB                    .do:	XCHG
  1F84'   E1                    	POP	H
  1F85'   22 088E"              	SHLD	.jm
  1F88'   E1                    	POP	H
  1F89'   22 0890"              	SHLD	.km
  1F8C'   E1                    	POP	H
	MACRO-80 3.35	22-Mar-19	PAGE	1-95


  1F8D'   22 0892"              	SHLD	.lm
  1F90'   E1                    	POP	H
  1F91'   22 0894"              	SHLD	.mm
  1F94'   E1                    	POP	H
  1F95'   22 0896"              	SHLD	.nm
  1F98'   E1                    	POP	H
  1F99'   22 0898"              	SHLD	.om
  1F9C'   C1                    	POP	B
  1F9D'   C1                    	POP	B
  1F9E'   EB                    	XCHG
  1F9F'   C9                    	RET
                                ;}
  1FA0'                         .im:
  1FA0'   00                    	DB	0
  1FA1'   20                    	DB	' '
  1FA2'   00                    	DB	0
  1FA3'   3D                    	DB	'='
  1FA4'   00                    	DB	0
  1FA5'   2C                    	DB	','
  1FA6'   00                    	DB	0
  1FA7'   45 52 52 4F           	DB	'ERROR allocating memory for entry!'
  1FAB'   52 20 61 6C           
  1FAF'   6C 6F 63 61           
  1FB3'   74 69 6E 67           
  1FB7'   20 6D 65 6D           
  1FBB'   6F 72 79 20           
  1FBF'   66 6F 72 20           
  1FC3'   65 6E 74 72           
  1FC7'   79 21                 
  1FC9'   0A                    	DB	10
  1FCA'   00                    	DB	0
  1FCB'   4F 6E 6C 79           	DB	'Only one source device allowed! - assuming %s'
  1FCF'   20 6F 6E 65           
  1FD3'   20 73 6F 75           
  1FD7'   72 63 65 20           
  1FDB'   64 65 76 69           
  1FDF'   63 65 20 61           
  1FE3'   6C 6C 6F 77           
  1FE7'   65 64 21 20           
  1FEB'   2D 20 61 73           
  1FEF'   73 75 6D 69           
  1FF3'   6E 67 20 25           
  1FF7'   73                    
  1FF8'   0A                    	DB	10
  1FF9'   00                    	DB	0
  1FFA'   2A                    	DB	'*'
  1FFB'   00                    	DB	0
  1FFC'   45 72 72 6F           	DB	'Error initializing VDIP-1 device!'
  2000'   72 20 69 6E           
  2004'   69 74 69 61           
  2008'   6C 69 7A 69           
  200C'   6E 67 20 56           
  2010'   44 49 50 2D           
  2014'   31 20 64 65           
  2018'   76 69 63 65           
  201C'   21                    
	MACRO-80 3.35	22-Mar-19	PAGE	1-96


  201D'   0A                    	DB	10
  201E'   00                    	DB	0
  201F'   4E 6F 20 66           	DB	'No flash drive found!'
  2023'   6C 61 73 68           
  2027'   20 64 72 69           
  202B'   76 65 20 66           
  202F'   6F 75 6E 64           
  2033'   21                    
  2034'   0A                    	DB	10
  2035'   00                    	DB	0
  2036'   49 6C 6C 65           	DB	'Illegal device specified'
  203A'   67 61 6C 20           
  203E'   64 65 76 69           
  2042'   63 65 20 73           
  2046'   70 65 63 69           
  204A'   66 69 65 64           
  204E'   0A                    	DB	10
  204F'   00                    	DB	0
  2050'   45 69 74 68           	DB	'Either source or destination need to be the USB'
  2054'   65 72 20 73           
  2058'   6F 75 72 63           
  205C'   65 20 6F 72           
  2060'   20 64 65 73           
  2064'   74 69 6E 61           
  2068'   74 69 6F 6E           
  206C'   20 6E 65 65           
  2070'   64 20 74 6F           
  2074'   20 62 65 20           
  2078'   74 68 65 20           
  207C'   55 53 42              
  207F'   0A                    	DB	10
  2080'   00                    	DB	0
  2081'   55 53 42 20           	DB	'USB to USB copies not supported'
  2085'   74 6F 20 55           
  2089'   53 42 20 63           
  208D'   6F 70 69 65           
  2091'   73 20 6E 6F           
  2095'   74 20 73 75           
  2099'   70 70 6F 72           
  209D'   74 65 64              
  20A0'   0A                    	DB	10
  20A1'   00                    	DB	0
  20A2'   42 6F 74 68           	DB	'Both source and destination must be storage devices'
  20A6'   20 73 6F 75           
  20AA'   72 63 65 20           
  20AE'   61 6E 64 20           
  20B2'   64 65 73 74           
  20B6'   69 6E 61 74           
  20BA'   69 6F 6E 20           
  20BE'   6D 75 73 74           
  20C2'   20 62 65 20           
  20C6'   73 74 6F 72           
  20CA'   61 67 65 20           
  20CE'   64 65 76 69           
  20D2'   63 65 73              
  20D5'   0A                    	DB	10
	MACRO-80 3.35	22-Mar-19	PAGE	1-97


  20D6'   00                    	DB	0
  20D7'   44 65 76 69           	DB	'Device code error %d'
  20DB'   63 65 20 63           
  20DF'   6F 64 65 20           
  20E3'   65 72 72 6F           
  20E7'   72 20 25 64           
  20EB'   0A                    	DB	10
  20EC'   00                    	DB	0
                                ;main(argc,argv)
                                
                                	PUBLIC	main
                                ;int argc;
                                ;char *argv[];
                                ;{
                                ;	int l;
  20ED'                         	DSEG
  089A"   0000                  .fo:	DW	0
                                ;	printf("VPIP Ver. 0.9.1 (Beta) - G. Roberts\n");
  089C"                         	CSEG
                                
  20ED'   2A 089A"              main:	LHLD	.fo
  20F0'   E5                    	PUSH	H
  20F1'   21 2230'              	LXI	H,.eo
  20F4'   E5                    	PUSH	H
  20F5'   CD 0000*              	CALL	printf
  20F8'   C1                    	POP	B
                                ;	if (strcmp(argv[0], "VP89") == 0) {
  20F9'   21 0004               	LXI	H,4
  20FC'   39                    	DAD	SP
  20FD'   CD 0000*              	CALL	h.##
  2100'   CD 0000*              	CALL	h.##
  2103'   E5                    	PUSH	H
  2104'   21 2255'              	LXI	H,.eo+37
  2107'   E5                    	PUSH	H
  2108'   CD 0000*              	CALL	strcmp
  210B'   C1                    	POP	B
  210C'   C1                    	POP	B
  210D'   7C                    	MOV	A,H
  210E'   B5                    	ORA	L
  210F'   C2 2129'              	JNZ	.go
                                ;		p_data = H89DATA;
  2112'   21 00D9               	LXI	H,217
  2115'   22 07CF"              	SHLD	p_data
                                ;		p_stat = H89STAT;
  2118'   21 00DA               	LXI	H,218
  211B'   22 07D1"              	SHLD	p_stat
                                ;		printf("Config: H89, ");
  211E'   21 225A'              	LXI	H,.eo+42
  2121'   E5                    	PUSH	H
  2122'   CD 0000*              	CALL	printf
  2125'   C1                    	POP	B
                                ;	}
                                ;	else {
  2126'   C3 213D'              	JMP	.ho
  2129'                         .go:	DS	0
                                ;		p_data = H8DATA;
	MACRO-80 3.35	22-Mar-19	PAGE	1-98


  2129'   21 00B1               	LXI	H,177
  212C'   22 07CF"              	SHLD	p_data
                                ;		p_stat = H8STAT;
  212F'   21 00B2               	LXI	H,178
  2132'   22 07D1"              	SHLD	p_stat
                                ;		printf("Config: H8, ");
  2135'   21 2268'              	LXI	H,.eo+56
  2138'   E5                    	PUSH	H
  2139'   CD 0000*              	CALL	printf
  213C'   C1                    	POP	B
                                ;	}
  213D'                         .ho:	DS	0
                                ;	printf("USB ports: %o,%o\n", p_data, p_stat);
  213D'   21 2275'              	LXI	H,.eo+69
  2140'   E5                    	PUSH	H
  2141'   2A 07CF"              	LHLD	p_data
  2144'   E5                    	PUSH	H
  2145'   2A 07D1"              	LHLD	p_stat
  2148'   E5                    	PUSH	H
  2149'   CD 0000*              	CALL	printf
  214C'   C1                    	POP	B
  214D'   C1                    	POP	B
  214E'   C1                    	POP	B
                                ;	/* try to read date/time from RTC (use month to validate) */
                                ;	readdate(&mydate);
  214F'   21 003C"              	LXI	H,mydate
  2152'   E5                    	PUSH	H
  2153'   CD 0004'              	CALL	readdat
  2156'   C1                    	POP	B
                                ;	if ((mydate.month >= 1) && (mydate.month <= 12)) {
  2157'   3A 003D"              	LDA	mydate+1
  215A'   CD 0000*              	CALL	c.sxt##
  215D'   11 0001               	LXI	D,1
  2160'   CD 0000*              	CALL	c.le##
  2163'   CA 2172'              	JZ	.jo
  2166'   3A 003D"              	LDA	mydate+1
  2169'   CD 0000*              	CALL	c.sxt##
  216C'   11 000C               	LXI	D,12
  216F'   CD 0000*              	CALL	c.ge##
  2172'   CD 0000*              .jo:	CALL	e.0##
  2175'   CA 21B9'              	JZ	.io
                                ;		printf("%02d/%02d/%02d  %02d:%02d:%02d\n", mydate.month, 
  2178'   21 2287'              	LXI	H,.eo+87
  217B'   E5                    	PUSH	H
  217C'   3A 003D"              	LDA	mydate+1
  217F'   CD 0000*              	CALL	c.sxt##
  2182'   E5                    	PUSH	H
                                ;			mydate.day, mydate.year, mydate.hours, mydate.minutes,
  2183'   3A 003C"              	LDA	mydate
  2186'   CD 0000*              	CALL	c.sxt##
  2189'   E5                    	PUSH	H
  218A'   3A 003E"              	LDA	mydate+2
  218D'   CD 0000*              	CALL	c.sxt##
  2190'   E5                    	PUSH	H
  2191'   3A 003F"              	LDA	mydate+3
  2194'   CD 0000*              	CALL	c.sxt##
	MACRO-80 3.35	22-Mar-19	PAGE	1-99


  2197'   E5                    	PUSH	H
  2198'   3A 0040"              	LDA	mydate+4
  219B'   CD 0000*              	CALL	c.sxt##
  219E'   E5                    	PUSH	H
                                ;			mydate.seconds);
  219F'   3A 0041"              	LDA	mydate+5
  21A2'   CD 0000*              	CALL	c.sxt##
  21A5'   E5                    	PUSH	H
  21A6'   CD 0000*              	CALL	printf
  21A9'   EB                    	XCHG
  21AA'   21 000E               	LXI	H,14
  21AD'   39                    	DAD	SP
  21AE'   F9                    	SPHL
  21AF'   EB                    	XCHG
                                ;		havertc = TRUE;
  21B0'   21 0001               	LXI	H,1
  21B3'   22 0047"              	SHLD	havertc
                                ;	}
                                ;	else {
  21B6'   C3 21C7'              	JMP	.ko
  21B9'                         .io:	DS	0
                                ;		havertc = FALSE;
  21B9'   21 0000               	LXI	H,0
  21BC'   22 0047"              	SHLD	havertc
                                ;		printf("No real time clock found!\n");
  21BF'   21 22A7'              	LXI	H,.eo+119
  21C2'   E5                    	PUSH	H
  21C3'   CD 0000*              	CALL	printf
  21C6'   C1                    	POP	B
                                ;	}
  21C7'                         .ko:	DS	0
                                ;	if (argc < 2) {
  21C7'   21 0006               	LXI	H,6
  21CA'   39                    	DAD	SP
  21CB'   CD 0000*              	CALL	h.##
  21CE'   11 7FFE               	LXI	D,32766
  21D1'   CD 0000*              	CALL	c.tst##
  21D4'   DA 221A'              	JC	.lo
                                ;		/* interactive mode (bug: might be smarter
                                ;		** to save the directory structure if possible
                                ;		** between subsequent commands - currently
                                ;		** we start over each time!)
                                ;		*/
                                ;		do {
  21D7'                         .oo:	DS	0
                                ;			printf(":V:");
  21D7'   21 22C2'              	LXI	H,.eo+146
  21DA'   E5                    	PUSH	H
  21DB'   CD 0000*              	CALL	printf
  21DE'   C1                    	POP	B
                                ;			if ((l = getline(cmdline,80)) > 0) {
  21DF'   21 0049"              	LXI	H,cmdline
  21E2'   E5                    	PUSH	H
  21E3'   21 0050               	LXI	H,80
  21E6'   E5                    	PUSH	H
  21E7'   CD 0000*              	CALL	getline
	MACRO-80 3.35	22-Mar-19	PAGE	1-100


  21EA'   C1                    	POP	B
  21EB'   C1                    	POP	B
  21EC'   22 089A"              	SHLD	.fo
  21EF'   11 0000               	LXI	D,0
  21F2'   CD 0000*              	CALL	c.lt##
  21F5'   CA 220B'              	JZ	.po
                                ;				strupr(cmdline);
  21F8'   21 0049"              	LXI	H,cmdline
  21FB'   E5                    	PUSH	H
  21FC'   CD 0000*              	CALL	strupr
  21FF'   C1                    	POP	B
                                ;				docmd(cmdline);
  2200'   21 0049"              	LXI	H,cmdline
  2203'   E5                    	PUSH	H
  2204'   CD 1C30'              	CALL	docmd
  2207'   C1                    	POP	B
                                ;				freeall();
  2208'   CD 0406'              	CALL	freeall
                                ;			}
                                ;		} while (l > 0);
  220B'                         .po:	DS	0
  220B'   2A 089A"              .mo:	LHLD	.fo
  220E'   11 7FFF               	LXI	D,32767
  2211'   CD 0000*              	CALL	c.tst##
  2214'   DA 21D7'              	JC	.oo
  2217'                         .no:	DS	0
                                ;	}
                                ;	else
  2217'   C3 222B'              	JMP	.qo
  221A'                         .lo:	DS	0
                                ;		/* command line mode */
                                ;		docmd(argv[1]);
  221A'   21 0004               	LXI	H,4
  221D'   39                    	DAD	SP
  221E'   CD 0000*              	CALL	h.##
  2221'   23                    	INX	H
  2222'   23                    	INX	H
  2223'   CD 0000*              	CALL	h.##
  2226'   E5                    	PUSH	H
  2227'   CD 1C30'              	CALL	docmd
  222A'   C1                    	POP	B
  222B'                         .qo:	DS	0
                                ;}
  222B'   E1                    .ro:	POP	H
  222C'   22 089A"              	SHLD	.fo
  222F'   C9                    	RET
  2230'                         .eo:
  2230'   56 50 49 50           	DB	'VPIP Ver. 0.9.1 (Beta) - G. Roberts'
  2234'   20 56 65 72           
  2238'   2E 20 30 2E           
  223C'   39 2E 31 20           
  2240'   28 42 65 74           
  2244'   61 29 20 2D           
  2248'   20 47 2E 20           
  224C'   52 6F 62 65           
  2250'   72 74 73              
	MACRO-80 3.35	22-Mar-19	PAGE	1-101


  2253'   0A                    	DB	10
  2254'   00                    	DB	0
  2255'   56 50 38 39           	DB	'VP89'
  2259'   00                    	DB	0
  225A'   43 6F 6E 66           	DB	'Config: H89, '
  225E'   69 67 3A 20           
  2262'   48 38 39 2C           
  2266'   20                    
  2267'   00                    	DB	0
  2268'   43 6F 6E 66           	DB	'Config: H8, '
  226C'   69 67 3A 20           
  2270'   48 38 2C 20           
  2274'   00                    	DB	0
  2275'   55 53 42 20           	DB	'USB ports: %o,%o'
  2279'   70 6F 72 74           
  227D'   73 3A 20 25           
  2281'   6F 2C 25 6F           
  2285'   0A                    	DB	10
  2286'   00                    	DB	0
  2287'   25 30 32 64           	DB	'%02d/%02d/%02d  %02d:%02d:%02d'
  228B'   2F 25 30 32           
  228F'   64 2F 25 30           
  2293'   32 64 20 20           
  2297'   25 30 32 64           
  229B'   3A 25 30 32           
  229F'   64 3A 25 30           
  22A3'   32 64                 
  22A5'   0A                    	DB	10
  22A6'   00                    	DB	0
  22A7'   4E 6F 20 72           	DB	'No real time clock found!'
  22AB'   65 61 6C 20           
  22AF'   74 69 6D 65           
  22B3'   20 63 6C 6F           
  22B7'   63 6B 20 66           
  22BB'   6F 75 6E 64           
  22BF'   21                    
  22C0'   0A                    	DB	10
  22C1'   00                    	DB	0
  22C2'   3A 56 3A              	DB	':V:'
  22C5'   00                    	DB	0
                                ;
                                	EXTRN	inp
                                	EXTRN	hexcat
                                	EXTRN	index
                                	EXTRN	isdigit
                                	EXTRN	strlen
                                	EXTRN	printf
                                	EXTRN	free
                                	EXTRN	isalpha
                                	EXTRN	str_sen
                                	EXTRN	str_rea
                                	EXTRN	strcmp
                                	EXTRN	alloc
                                	EXTRN	strncpy
                                	EXTRN	vdirf
                                	EXTRN	vdird
	MACRO-80 3.35	22-Mar-19	PAGE	1-102


                                	EXTRN	fopen
                                	EXTRN	vwopen
                                	EXTRN	fclose
                                	EXTRN	vseek
                                	EXTRN	read
                                	EXTRN	vwrite
                                	EXTRN	putchar
                                	EXTRN	vclose
                                	EXTRN	strcpy
                                	EXTRN	strcat
                                	EXTRN	isprint
                                	EXTRN	vropen
                                	EXTRN	vread
                                	EXTRN	write
                                	EXTRN	commafm
                                	EXTRN	prndate
                                	EXTRN	prntime
                                	EXTRN	vinit
                                	EXTRN	vfind_d
                                	EXTRN	getline
                                	EXTRN	strupr
                                	EXTRN	g.
                                	END
	MACRO-80 3.35	22-Mar-19	PAGE	S


Macros:

Symbols:
.AB	036C'	.AC	07E7"	.AD	071E'	.AE	09DF'
.AF	081B"	.AG	0D96'	.AH	1074'	.AI	0857"
.AJ	1544'	.AK	18EE'	.AL	19EE'	.AM	1BBF'
.AN	1DFB'	.AO	1F80'	.BB	0375'	.BC	07E9"
.BD	0739'	.BE	09E2'	.BF	081D"	.BG	0DB0'
.BH	123C'	.BI	0859"	.BJ	15A6'	.BK	1840'
.BL	1A0F'	.BM	1B46'	.BN	1DFB'	.BO	1F73'
.C	02C4'	.CB	037E'	.CC	07EB"	.CD	07ED"
.CE	080B"	.CF	081F"	.CG	0E00'	.CH	10A8'
.CI	085B"	.CJ	162C'	.CK	18EE'	.CL	1A03'
.CM	1B59'	.CN	1E2A'	.CO	1F80'	.D	07D3"
.DB	0399'	.DC	054D'	.DD	07EF"	.DE	080D"
.DF	0821"	.DG	0E0C'	.DH	123C'	.DI	1346'
.DJ	162C'	.DK	1888'	.DL	1A30'	.DM	1B6D'
.DN	1E44'	.DO	1F83'	.E	07D5"	.EB	03C6'
.EC	0614'	.ED	07F1"	.EE	080F"	.EF	0823"
.EG	0DE0'	.EH	10EA'	.EI	1474'	.EJ	15C3'
.EK	1863'	.EL	1A24'	.EM	1BBC'	.EN	1F1D'
.EO	2230'	.F	07D7"	.FB	08DE'	.FC	053E'
.FD	07F3"	.FE	0811"	.FF	0825"	.FG	0E2E'
.FH	117E'	.FI	1336'	.FJ	162C'	.FK	1879'
.FL	1A4F'	.FM	1BB0'	.FN	1E6C'	.FO	089A"
.G	07D9"	.GB	07E1"	.GC	0558'	.GD	08C4'
.GE	0813"	.GF	0827"	.GG	0E43'	.GH	10CE'
.GI	1351'	.GJ	163C'	.GK	18EE'	.GL	1A43'
.GM	1BE2'	.GN	1F1A'	.GO	2129'	.H	02A4'
.HB	0420'	.HC	05DB'	.HD	08CD'	.HE	0815"
.HF	0829"	.HG	0E67'	.HH	10E1'	.HI	1471'
.HJ	17FF'	.HK	18E8'	.HL	1A52'	.HM	1BE5'
.HN	1E86'	.HO	213D'	.I	0262'	.IB	043E'
.IC	0585'	.ID	077F'	.IE	0817"	.IF	082B"
.IG	0E34'	.IH	10F5'	.II	13A3'	.IJ	0882"
.IK	18AC'	.IL	1BF8'	.IM	1FA0'	.IN	1F1A'
.IO	21B9'	.J	02A4'	.JB	0410'	.JC	05D8'
.JD	07A7'	.JE	0A39'	.JF	082D"	.JG	0E4E'
.JH	1124'	.JI	13C4'	.JJ	0884"	.JK	18C2'
.JL	088A"	.JM	088E"	.JN	1EFB'	.JO	2172'
.K	02B6'	.KB	042B'	.KC	05BF'	.KD	08C4'
.KE	0B73'	.KF	082F"	.KG	0E85'	.KH	117B'
.KI	13EC'	.KJ	1676'	.KK	18D9'	.KL	088C"
.KM	0890"	.KN	1E99'	.KO	21C7'	.L	02B9'
.LB	0454'	.LC	0611'	.LD	07C3'	.LE	0A6D'
.LF	0CF4'	.LG	0EAD'	.LH	115A'	.LI	13E9'
.LJ	1692'	.LK	18EE'	.LL	1A80'	.LM	0892"
.LN	1EB3'	.LO	221A'	.M	03D3'	.MB	0472'
.MC	0611'	.MD	08C4'	.ME	0B73'	.MF	0F52'
.MG	0E76'	.MH	117B'	.MI	1471'	.MJ	1667'
.MK	18F1'	.ML	1BE5'	.MM	0894"	.MN	1EB6'
.MO	220B'	.N	07DB"	.NB	0444'	.NC	05F8'
.ND	0830'	.NE	0AB1'	.NF	0F41'	.NG	0E90'
.NH	1193'	.NI	1469'	.NJ	1681'	.NK	1A59'
.NL	1A70'	.NM	0896"	.NN	1ECC'	.NO	2217'
.O	07DD"	.OB	045F'	.OC	0641'	.OD	08B0'
.OE	0B4D'	.OF	0F4A'	.OG	0F3E'	.OH	11AA'
.OI	1481'	.OJ	16A7'	.OK	0888"	.OL	1A8B'
.OM	0898"	.ON	1EFB'	.OO	21D7'	.P	07DF"
	MACRO-80 3.35	22-Mar-19	PAGE	S-1


.PB	0472'	.PC	0734'	.PD	0895'	.PE	0AA5'
.PF	0D1D'	.PG	0F55'	.PH	1184'	.PI	1645'
.PJ	16C7'	.PK	1942'	.PL	1B1F'	.PM	1CC2'
.PN	1EBC'	.PO	220B'	.Q	03C6'	.QB	07E3"
.QC	0632'	.QD	08B0'	.QE	0AD3'	.QF	0D41'
.QG	125A'	.QH	119E'	.QI	086A"	.QJ	1698'
.QK	1933'	.QL	1AC6'	.QM	1CA7'	.QN	1ED7'
.QO	222B'	.R	0323'	.RB	07E5"	.RC	064C'
.RD	08CD'	.RE	0AF9'	.RF	0F41'	.RG	0843"
.RH	1216'	.RI	086C"	.RJ	16B2'	.RK	19EE'
.RL	1B1F'	.RM	1CEB'	.RN	1F17'	.RO	222B'
.S	03C6'	.SB	049F'	.SC	06E9'	.SD	0B91'
.SE	0B4A'	.SF	0D6F'	.SG	0845"	.SH	11BC'
.SI	086E"	.SJ	172A'	.SK	19B2'	.SL	1AAA'
.SM	1D42'	.SN	1F06'	.SWITC	03A8*	.T	030F'
.TB	04FB'	.TC	067D'	.TD	07F5"	.TE	0B29'
.TF	0F41'	.TG	0847"	.TH	11E6'	.TI	14DF'
.TJ	1779'	.TK	197B'	.TL	1ABD'	.TM	1E07'
.TN	1F1A'	.U	032E'	.UB	048B'	.UC	06E6'
.UD	07F7"	.UE	0B4A'	.UF	0D54'	.UG	0849"
.UH	1216'	.UI	162F'	.UJ	17D0'	.UK	19AF'
.UL	1AD1'	.UM	1E10'	.UN	1F80'	.V	03C3'
.VB	04B7'	.VC	06BB'	.VD	092C'	.VE	0B4A'
.VF	0D66'	.VG	084B"	.VH	1216'	.VI	14CF'
.VJ	17B4'	.VK	199C'	.VL	1B1C'	.VM	1D42'
.VN	1F31'	.W	03C3'	.WB	04E7'	.WC	06D3'
.WD	09E2'	.WE	0B76'	.WF	0D7A'	.WG	084D"
.WH	123F'	.WI	14EA'	.WJ	17F6'	.WK	19AF'
.WL	1B10'	.WM	1D65'	.WN	1F80'	.X	03A7'
.XB	04E1'	.XC	0731'	.XD	091C'	.XE	0C78'
.XF	0F34'	.XG	084F"	.XH	1492'	.XI	162C'
.XJ	18F8'	.XK	19EE'	.XL	1BBF'	.XM	1D81'
.XN	1F46'	.Y	0352'	.YB	04F8'	.YC	0731'
.YD	0937'	.YE	0C77'	.YF	0DA5'	.YG	101E'
.YH	0853"	.YI	1516'	.YJ	0886"	.YK	19EE'
.YL	1B3A'	.YM	1DFB'	.YN	1F80'	.Z	035B'
.ZB	0504'	.ZC	0706'	.ZD	099C'	.ZE	0F82'
.ZF	0DCA'	.ZG	123C'	.ZH	0855"	.ZI	15B0'
.ZJ	1821'	.ZK	19DB'	.ZL	1B62'	.ZM	1DDB'
.ZN	1F5C'	AIOGRT	0002I'	AIOSPG	0000I'	ALLOC	1D6A*
BLDHDI	0C7AI'	BLDUDI	0747I'	BUFFER	04C7I"	C.ASL	01D4*
C.DIV	13D8*	C.GE	2170*	C.GT	1EC4*	C.LE	2161*
C.LT	21F3*	C.MULT	0ECE*	C.NOT	1E97*	C.SXT	21A3*
C.TST	2212*	C.ULE	031B*	C.USR	021F*	CHECKD	18FCI'
CMDLIN	0049I"	COMMAF	1409*	COPYFI	14BBI'	DEVTYP	1803I'
DIRENT	02C5I"	DIRSTR	0C0DI'	DOCMD	1C30I'	DOMATC	1A61I'
DSTDEV	00BBI"	DSTEXP	050DI'	DSTFNA	0099I"	DSTSPE	0000I"
DSTTYP	00C1I"	E.0	2173*	FCLOSE	122D*	FENTRY	0024I"
FOPEN	1081*	FREE	046C*	FREEAL	0406I'	F_BRIE	07C9I"
F_DEBU	07CDI"	F_HELP	07CBI"	F_LIST	07C7I"	G.	1DB8*
GETLIN	21E8*	GETTD	0150I'	GRT	0043I"	H.	2224*
HAVERT	0047I"	HDOSEN	000DI"	HEXCAT	0232*	HI.BL	103F*
INDEX	1D4B*	INP	0143*	ISALPH	18BF*	ISDIGI	18D6*
ISPRIN	0D82*	L.ADD	0AC0*	L.DIV	102D*	L.MOD	1042*
L.MUL	0EE4*	LINEBU	089A*	LISTMA	131AI'	LLONG.	13FC*
MAIN	20EDI'	MYDATE	003CI"	N.	1BAE*	NENTRI	04C5I"
	MACRO-80 3.35	22-Mar-19	PAGE	S-2


NSRC	02C3I"	PARSEF	1659I'	PRINTF	21DC*	PRNDAT	1430*
PRNTIM	1466*	PUTCHA	13A8*	P_DATA	07CFI"	P_STAT	07D1I"
Q.	1D8E*	READ	0D2A*	READDA	0004I'	RWBUFF	06C7I"
SCANSW	02C6I'	SHOWHE	1BEFI'	SLONG.	0EE8*	SRC	00C3I"
SRCDEV	00B7I"	SRCFNA	00A8I"	SRCTYP	00BFI"	ST4.	0A79*
STRCAT	160D*	STRCMP	2109*	STRCPY	1E40*	STRLEN	1E2F*
STRNCP	178E*	STRUPR	21FD*	STR_RE	0788*	STR_SE	0763*
SWVAL	0237I'	TD_STR	0228*	VCLOSE	1239*	VCP	0FCFI'
VCPUT	09E7I'	VDIR1	074EI'	VDIR2	0912I'	VDIRD	09DA*
VDIRF	0FFA*	VFIND_	1E6D*	VINIT	1E53*	VMAXW	0045I"
VREAD	11CB*	VROPEN	1051*	VSEEK	0A72*	VWOPEN	0A42*
VWRITE	0B02*	WCEXPA	0477I'	WRITE	11F3*	



No  Fatal error(s)
